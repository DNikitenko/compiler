; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Дмитрий\Documents\Visual Studio 2010\Projects\Scanner\Scanner\LL_Optimizer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?_EEM_DS@?$deque@DV?$allocator@D@std@@@std@@2HB	; std::deque<char,std::allocator<char> >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@@std@@@2@@std@@V?$allocator@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@@std@@@2@@std@@@2@@std@@2HB ; std::deque<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,VAR_TO_DUPLICATE,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,VAR_TO_DUPLICATE> > >,std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,VAR_TO_DUPLICATE,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,VAR_TO_DUPLICATE> > > > >::_EEM_DS
PUBLIC	?_EEM_DS@?$deque@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@2HB ; std::deque<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_EEM_DS
;	COMDAT ?_EEM_DS@?$deque@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@2HB DD 01H ; std::deque<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_EEM_DS
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@@std@@@2@@std@@V?$allocator@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@@std@@@2@@std@@@2@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@@std@@@2@@std@@V?$allocator@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVAR_TO_DUPLICATE@@@std@@@2@@std@@@2@@std@@2HB DD 01H ; std::deque<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,VAR_TO_DUPLICATE,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,VAR_TO_DUPLICATE> > >,std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,VAR_TO_DUPLICATE,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,VAR_TO_DUPLICATE> > > > >::_EEM_DS
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@DV?$allocator@D@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@DV?$allocator@D@std@@@std@@2HB DD 010H	; std::deque<char,std::allocator<char> >::_EEM_DS
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ; std::vector<Optimization *,std::allocator<Optimization *> >::~vector<Optimization *,std::allocator<Optimization *> >
PUBLIC	??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::~vector<AsmCmd *,std::allocator<AsmCmd *> >
PUBLIC	??0ReplaceMovPushWithPush@@QAE@XZ		; ReplaceMovPushWithPush::ReplaceMovPushWithPush
PUBLIC	??0ReplacePushPopWithMov@@QAE@XZ		; ReplacePushPopWithMov::ReplacePushPopWithMov
PUBLIC	??0DeletePushPop@@QAE@XZ			; DeletePushPop::DeletePushPop
PUBLIC	??0ReplaceIMUL@@QAE@XZ				; ReplaceIMUL::ReplaceIMUL
PUBLIC	??0ReplaceMulToZero@@QAE@XZ			; ReplaceMulToZero::ReplaceMulToZero
PUBLIC	??0ReplaceCmpWithZero@@QAE@XZ			; ReplaceCmpWithZero::ReplaceCmpWithZero
PUBLIC	??0ReplaceMovConst@@QAE@XZ			; ReplaceMovConst::ReplaceMovConst
PUBLIC	??0ReplaceSubWithOne@@QAE@XZ			; ReplaceSubWithOne::ReplaceSubWithOne
PUBLIC	??0ReplaceAddWithOne@@QAE@XZ			; ReplaceAddWithOne::ReplaceAddWithOne
PUBLIC	??0ReplaceNEG@@QAE@XZ				; ReplaceNEG::ReplaceNEG
PUBLIC	??0ReplaceCDQ@@QAE@XZ				; ReplaceCDQ::ReplaceCDQ
PUBLIC	??0DeleteMultWithOne@@QAE@XZ			; DeleteMultWithOne::DeleteMultWithOne
PUBLIC	??0DeleteSubWithZero@@QAE@XZ			; DeleteSubWithZero::DeleteSubWithZero
PUBLIC	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
PUBLIC	??0DeleteAddWithZero@@QAE@XZ			; DeleteAddWithZero::DeleteAddWithZero
PUBLIC	??0?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ; std::vector<Optimization *,std::allocator<Optimization *> >::vector<Optimization *,std::allocator<Optimization *> >
PUBLIC	??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >
PUBLIC	??0Peephole@@QAE@PAVAsmCode@@@Z			; Peephole::Peephole
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT xdata$x
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.cpp
xdata$x	SEGMENT
__unwindtable$??0Peephole@@QAE@PAVAsmCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Peephole@@QAE@PAVAsmCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Peephole@@QAE@PAVAsmCode@@@Z$1
__ehfuncinfo$??0Peephole@@QAE@PAVAsmCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Peephole@@QAE@PAVAsmCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0Peephole@@QAE@PAVAsmCode@@@Z
_TEXT	SEGMENT
tv284 = -556						; size = 4
tv271 = -556						; size = 4
tv258 = -556						; size = 4
tv245 = -556						; size = 4
tv232 = -556						; size = 4
tv219 = -556						; size = 4
tv206 = -556						; size = 4
tv193 = -556						; size = 4
tv180 = -556						; size = 4
tv167 = -556						; size = 4
tv154 = -556						; size = 4
tv141 = -556						; size = 4
tv128 = -556						; size = 4
tv83 = -556						; size = 4
$T64776 = -548						; size = 4
$T64777 = -536						; size = 4
$T64780 = -524						; size = 4
$T64781 = -512						; size = 4
$T64784 = -500						; size = 4
$T64785 = -488						; size = 4
$T64788 = -476						; size = 4
$T64789 = -464						; size = 4
$T64792 = -452						; size = 4
$T64793 = -440						; size = 4
$T64796 = -428						; size = 4
$T64797 = -416						; size = 4
$T64800 = -404						; size = 4
$T64801 = -392						; size = 4
$T64804 = -380						; size = 4
$T64805 = -368						; size = 4
$T64808 = -356						; size = 4
$T64809 = -344						; size = 4
$T64812 = -332						; size = 4
$T64813 = -320						; size = 4
$T64816 = -308						; size = 4
$T64817 = -296						; size = 4
$T64820 = -284						; size = 4
$T64821 = -272						; size = 4
$T64824 = -260						; size = 4
$T64825 = -248						; size = 4
$T64828 = -236						; size = 4
$T64829 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_gen_$ = 8						; size = 4
??0Peephole@@QAE@PAVAsmCode@@@Z PROC			; Peephole::Peephole, COMDAT
; _this$ = ecx
; Line 4
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Peephole@@QAE@PAVAsmCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 544				; 00000220H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-556]
	mov	ecx, 136				; 00000088H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ; std::vector<Optimization *,std::allocator<Optimization *> >::vector<Optimization *,std::allocator<Optimization *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _gen_$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 6
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64777[ebp], eax
	cmp	DWORD PTR $T64777[ebp], 0
	je	SHORT $LN3@Peephole
	mov	ecx, DWORD PTR $T64777[ebp]
	call	??0DeleteAddWithZero@@QAE@XZ
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@Peephole
$LN3@Peephole:
	mov	DWORD PTR tv83[ebp], 0
$LN4@Peephole:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T64776[ebp], eax
	lea	ecx, DWORD PTR $T64776[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 7
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64781[ebp], eax
	cmp	DWORD PTR $T64781[ebp], 0
	je	SHORT $LN5@Peephole
	mov	ecx, DWORD PTR $T64781[ebp]
	call	??0DeleteSubWithZero@@QAE@XZ
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN6@Peephole
$LN5@Peephole:
	mov	DWORD PTR tv128[ebp], 0
$LN6@Peephole:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T64780[ebp], eax
	lea	ecx, DWORD PTR $T64780[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 8
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64785[ebp], eax
	cmp	DWORD PTR $T64785[ebp], 0
	je	SHORT $LN7@Peephole
	mov	ecx, DWORD PTR $T64785[ebp]
	call	??0DeleteMultWithOne@@QAE@XZ
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN8@Peephole
$LN7@Peephole:
	mov	DWORD PTR tv141[ebp], 0
$LN8@Peephole:
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR $T64784[ebp], eax
	lea	ecx, DWORD PTR $T64784[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 9
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64789[ebp], eax
	cmp	DWORD PTR $T64789[ebp], 0
	je	SHORT $LN9@Peephole
	mov	ecx, DWORD PTR $T64789[ebp]
	call	??0ReplaceCDQ@@QAE@XZ
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN10@Peephole
$LN9@Peephole:
	mov	DWORD PTR tv154[ebp], 0
$LN10@Peephole:
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T64788[ebp], eax
	lea	ecx, DWORD PTR $T64788[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 10
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64793[ebp], eax
	cmp	DWORD PTR $T64793[ebp], 0
	je	SHORT $LN11@Peephole
	mov	ecx, DWORD PTR $T64793[ebp]
	call	??0ReplaceNEG@@QAE@XZ
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN12@Peephole
$LN11@Peephole:
	mov	DWORD PTR tv167[ebp], 0
$LN12@Peephole:
	mov	eax, DWORD PTR tv167[ebp]
	mov	DWORD PTR $T64792[ebp], eax
	lea	ecx, DWORD PTR $T64792[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 11
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64797[ebp], eax
	cmp	DWORD PTR $T64797[ebp], 0
	je	SHORT $LN13@Peephole
	mov	ecx, DWORD PTR $T64797[ebp]
	call	??0ReplaceAddWithOne@@QAE@XZ
	mov	DWORD PTR tv180[ebp], eax
	jmp	SHORT $LN14@Peephole
$LN13@Peephole:
	mov	DWORD PTR tv180[ebp], 0
$LN14@Peephole:
	mov	eax, DWORD PTR tv180[ebp]
	mov	DWORD PTR $T64796[ebp], eax
	lea	ecx, DWORD PTR $T64796[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 12
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64801[ebp], eax
	cmp	DWORD PTR $T64801[ebp], 0
	je	SHORT $LN15@Peephole
	mov	ecx, DWORD PTR $T64801[ebp]
	call	??0ReplaceSubWithOne@@QAE@XZ
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN16@Peephole
$LN15@Peephole:
	mov	DWORD PTR tv193[ebp], 0
$LN16@Peephole:
	mov	eax, DWORD PTR tv193[ebp]
	mov	DWORD PTR $T64800[ebp], eax
	lea	ecx, DWORD PTR $T64800[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 13
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64805[ebp], eax
	cmp	DWORD PTR $T64805[ebp], 0
	je	SHORT $LN17@Peephole
	mov	ecx, DWORD PTR $T64805[ebp]
	call	??0ReplaceMovConst@@QAE@XZ
	mov	DWORD PTR tv206[ebp], eax
	jmp	SHORT $LN18@Peephole
$LN17@Peephole:
	mov	DWORD PTR tv206[ebp], 0
$LN18@Peephole:
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR $T64804[ebp], eax
	lea	ecx, DWORD PTR $T64804[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 14
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64809[ebp], eax
	cmp	DWORD PTR $T64809[ebp], 0
	je	SHORT $LN19@Peephole
	mov	ecx, DWORD PTR $T64809[ebp]
	call	??0ReplaceCmpWithZero@@QAE@XZ
	mov	DWORD PTR tv219[ebp], eax
	jmp	SHORT $LN20@Peephole
$LN19@Peephole:
	mov	DWORD PTR tv219[ebp], 0
$LN20@Peephole:
	mov	eax, DWORD PTR tv219[ebp]
	mov	DWORD PTR $T64808[ebp], eax
	lea	ecx, DWORD PTR $T64808[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 15
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64813[ebp], eax
	cmp	DWORD PTR $T64813[ebp], 0
	je	SHORT $LN21@Peephole
	mov	ecx, DWORD PTR $T64813[ebp]
	call	??0ReplaceMulToZero@@QAE@XZ
	mov	DWORD PTR tv232[ebp], eax
	jmp	SHORT $LN22@Peephole
$LN21@Peephole:
	mov	DWORD PTR tv232[ebp], 0
$LN22@Peephole:
	mov	eax, DWORD PTR tv232[ebp]
	mov	DWORD PTR $T64812[ebp], eax
	lea	ecx, DWORD PTR $T64812[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 16
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64817[ebp], eax
	cmp	DWORD PTR $T64817[ebp], 0
	je	SHORT $LN23@Peephole
	mov	ecx, DWORD PTR $T64817[ebp]
	call	??0ReplaceIMUL@@QAE@XZ
	mov	DWORD PTR tv245[ebp], eax
	jmp	SHORT $LN24@Peephole
$LN23@Peephole:
	mov	DWORD PTR tv245[ebp], 0
$LN24@Peephole:
	mov	eax, DWORD PTR tv245[ebp]
	mov	DWORD PTR $T64816[ebp], eax
	lea	ecx, DWORD PTR $T64816[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 17
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64821[ebp], eax
	cmp	DWORD PTR $T64821[ebp], 0
	je	SHORT $LN25@Peephole
	mov	ecx, DWORD PTR $T64821[ebp]
	call	??0DeletePushPop@@QAE@XZ
	mov	DWORD PTR tv258[ebp], eax
	jmp	SHORT $LN26@Peephole
$LN25@Peephole:
	mov	DWORD PTR tv258[ebp], 0
$LN26@Peephole:
	mov	eax, DWORD PTR tv258[ebp]
	mov	DWORD PTR $T64820[ebp], eax
	lea	ecx, DWORD PTR $T64820[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 18
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64825[ebp], eax
	cmp	DWORD PTR $T64825[ebp], 0
	je	SHORT $LN27@Peephole
	mov	ecx, DWORD PTR $T64825[ebp]
	call	??0ReplacePushPopWithMov@@QAE@XZ
	mov	DWORD PTR tv271[ebp], eax
	jmp	SHORT $LN28@Peephole
$LN27@Peephole:
	mov	DWORD PTR tv271[ebp], 0
$LN28@Peephole:
	mov	eax, DWORD PTR tv271[ebp]
	mov	DWORD PTR $T64824[ebp], eax
	lea	ecx, DWORD PTR $T64824[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 19
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T64829[ebp], eax
	cmp	DWORD PTR $T64829[ebp], 0
	je	SHORT $LN29@Peephole
	mov	ecx, DWORD PTR $T64829[ebp]
	call	??0ReplaceMovPushWithPush@@QAE@XZ
	mov	DWORD PTR tv284[ebp], eax
	jmp	SHORT $LN30@Peephole
$LN29@Peephole:
	mov	DWORD PTR tv284[ebp], 0
$LN30@Peephole:
	mov	eax, DWORD PTR tv284[ebp]
	mov	DWORD PTR $T64828[ebp], eax
	lea	ecx, DWORD PTR $T64828[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
; Line 20
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 556				; 0000022cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Peephole@@QAE@PAVAsmCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::~vector<AsmCmd *,std::allocator<AsmCmd *> >
__unwindfunclet$??0Peephole@@QAE@PAVAsmCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ; std::vector<Optimization *,std::allocator<Optimization *> >::~vector<Optimization *,std::allocator<Optimization *> >
__ehhandler$??0Peephole@@QAE@PAVAsmCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Peephole@@QAE@PAVAsmCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Peephole@@QAE@PAVAsmCode@@@Z ENDP			; Peephole::Peephole
PUBLIC	??_7DeleteAddWithZero@@6B@			; DeleteAddWithZero::`vftable'
PUBLIC	??0OneLineOpt@@QAE@XZ				; OneLineOpt::OneLineOpt
PUBLIC	??_R4DeleteAddWithZero@@6B@			; DeleteAddWithZero::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDeleteAddWithZero@@@8			; DeleteAddWithZero `RTTI Type Descriptor'
PUBLIC	??_R3DeleteAddWithZero@@8			; DeleteAddWithZero::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DeleteAddWithZero@@8			; DeleteAddWithZero::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DeleteAddWithZero@@8		; DeleteAddWithZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@OneLineOpt@@8			; OneLineOpt::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVOneLineOpt@@@8				; OneLineOpt `RTTI Type Descriptor'
PUBLIC	??_R3OneLineOpt@@8				; OneLineOpt::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OneLineOpt@@8				; OneLineOpt::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Optimization@@8			; Optimization::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVOptimization@@@8			; Optimization `RTTI Type Descriptor'
PUBLIC	??_R3Optimization@@8				; Optimization::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Optimization@@8				; Optimization::`RTTI Base Class Array'
PUBLIC	?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; DeleteAddWithZero::MakeOptimization
PUBLIC	?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z ; Optimization::CanBeApplied
PUBLIC	?CanBeApplied@DeleteAddWithZero@@UAE_NPAVAsmCmd@@@Z ; DeleteAddWithZero::CanBeApplied
PUBLIC	?OneLine@OneLineOpt@@UAE_NXZ			; OneLineOpt::OneLine
PUBLIC	?TwoLines@Optimization@@UAE_NXZ			; Optimization::TwoLines
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R2Optimization@@8
rdata$r	SEGMENT
??_R2Optimization@@8 DD FLAT:??_R1A@?0A@EA@Optimization@@8 ; Optimization::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Optimization@@8
rdata$r	SEGMENT
??_R3Optimization@@8 DD 00H				; Optimization::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVOptimization@@@8
_DATA	SEGMENT
??_R0?AVOptimization@@@8 DD FLAT:??_7type_info@@6B@	; Optimization `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVOptimization@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Optimization@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Optimization@@8 DD FLAT:??_R0?AVOptimization@@@8 ; Optimization::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R2OneLineOpt@@8
rdata$r	SEGMENT
??_R2OneLineOpt@@8 DD FLAT:??_R1A@?0A@EA@OneLineOpt@@8	; OneLineOpt::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3OneLineOpt@@8
rdata$r	SEGMENT
??_R3OneLineOpt@@8 DD 00H				; OneLineOpt::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2OneLineOpt@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVOneLineOpt@@@8
_DATA	SEGMENT
??_R0?AVOneLineOpt@@@8 DD FLAT:??_7type_info@@6B@	; OneLineOpt `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVOneLineOpt@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@OneLineOpt@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OneLineOpt@@8 DD FLAT:??_R0?AVOneLineOpt@@@8 ; OneLineOpt::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3OneLineOpt@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DeleteAddWithZero@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DeleteAddWithZero@@8 DD FLAT:??_R0?AVDeleteAddWithZero@@@8 ; DeleteAddWithZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DeleteAddWithZero@@8
rdata$r	ENDS
;	COMDAT ??_R2DeleteAddWithZero@@8
rdata$r	SEGMENT
??_R2DeleteAddWithZero@@8 DD FLAT:??_R1A@?0A@EA@DeleteAddWithZero@@8 ; DeleteAddWithZero::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3DeleteAddWithZero@@8
rdata$r	SEGMENT
??_R3DeleteAddWithZero@@8 DD 00H			; DeleteAddWithZero::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DeleteAddWithZero@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDeleteAddWithZero@@@8
_DATA	SEGMENT
??_R0?AVDeleteAddWithZero@@@8 DD FLAT:??_7type_info@@6B@ ; DeleteAddWithZero `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDeleteAddWithZero@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DeleteAddWithZero@@6B@
rdata$r	SEGMENT
??_R4DeleteAddWithZero@@6B@ DD 00H			; DeleteAddWithZero::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDeleteAddWithZero@@@8
	DD	FLAT:??_R3DeleteAddWithZero@@8
rdata$r	ENDS
;	COMDAT ??_7DeleteAddWithZero@@6B@
CONST	SEGMENT
??_7DeleteAddWithZero@@6B@ DD FLAT:??_R4DeleteAddWithZero@@6B@ ; DeleteAddWithZero::`vftable'
	DD	FLAT:?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@DeleteAddWithZero@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0DeleteAddWithZero@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DeleteAddWithZero@@QAE@XZ PROC			; DeleteAddWithZero::DeleteAddWithZero, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DeleteAddWithZero@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DeleteAddWithZero@@QAE@XZ ENDP			; DeleteAddWithZero::DeleteAddWithZero
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lines$ = 8						; size = 4
?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z PROC	; Optimization::CanBeApplied, COMDAT
; _this$ = ecx
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.h
; Line 8
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z ENDP	; Optimization::CanBeApplied
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?TwoLines@Optimization@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?TwoLines@Optimization@@UAE_NXZ PROC			; Optimization::TwoLines, COMDAT
; _this$ = ecx
; Line 10
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?TwoLines@Optimization@@UAE_NXZ ENDP			; Optimization::TwoLines
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OneLine@OneLineOpt@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OneLine@OneLineOpt@@UAE_NXZ PROC			; OneLineOpt::OneLine, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OneLine@OneLineOpt@@UAE_NXZ ENDP			; OneLineOpt::OneLine
_TEXT	ENDS
PUBLIC	??_7DeleteSubWithZero@@6B@			; DeleteSubWithZero::`vftable'
PUBLIC	??_R4DeleteSubWithZero@@6B@			; DeleteSubWithZero::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDeleteSubWithZero@@@8			; DeleteSubWithZero `RTTI Type Descriptor'
PUBLIC	??_R3DeleteSubWithZero@@8			; DeleteSubWithZero::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DeleteSubWithZero@@8			; DeleteSubWithZero::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DeleteSubWithZero@@8		; DeleteSubWithZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; DeleteSubWithZero::MakeOptimization
PUBLIC	?CanBeApplied@DeleteSubWithZero@@UAE_NPAVAsmCmd@@@Z ; DeleteSubWithZero::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@DeleteSubWithZero@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DeleteSubWithZero@@8 DD FLAT:??_R0?AVDeleteSubWithZero@@@8 ; DeleteSubWithZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DeleteSubWithZero@@8
rdata$r	ENDS
;	COMDAT ??_R2DeleteSubWithZero@@8
rdata$r	SEGMENT
??_R2DeleteSubWithZero@@8 DD FLAT:??_R1A@?0A@EA@DeleteSubWithZero@@8 ; DeleteSubWithZero::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3DeleteSubWithZero@@8
rdata$r	SEGMENT
??_R3DeleteSubWithZero@@8 DD 00H			; DeleteSubWithZero::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DeleteSubWithZero@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDeleteSubWithZero@@@8
_DATA	SEGMENT
??_R0?AVDeleteSubWithZero@@@8 DD FLAT:??_7type_info@@6B@ ; DeleteSubWithZero `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDeleteSubWithZero@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DeleteSubWithZero@@6B@
rdata$r	SEGMENT
??_R4DeleteSubWithZero@@6B@ DD 00H			; DeleteSubWithZero::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDeleteSubWithZero@@@8
	DD	FLAT:??_R3DeleteSubWithZero@@8
rdata$r	ENDS
;	COMDAT ??_7DeleteSubWithZero@@6B@
CONST	SEGMENT
??_7DeleteSubWithZero@@6B@ DD FLAT:??_R4DeleteSubWithZero@@6B@ ; DeleteSubWithZero::`vftable'
	DD	FLAT:?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@DeleteSubWithZero@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0DeleteSubWithZero@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DeleteSubWithZero@@QAE@XZ PROC			; DeleteSubWithZero::DeleteSubWithZero, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DeleteSubWithZero@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DeleteSubWithZero@@QAE@XZ ENDP			; DeleteSubWithZero::DeleteSubWithZero
_TEXT	ENDS
PUBLIC	??_7DeleteMultWithOne@@6B@			; DeleteMultWithOne::`vftable'
PUBLIC	??_R4DeleteMultWithOne@@6B@			; DeleteMultWithOne::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDeleteMultWithOne@@@8			; DeleteMultWithOne `RTTI Type Descriptor'
PUBLIC	??_R3DeleteMultWithOne@@8			; DeleteMultWithOne::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DeleteMultWithOne@@8			; DeleteMultWithOne::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DeleteMultWithOne@@8		; DeleteMultWithOne::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; DeleteMultWithOne::MakeOptimization
PUBLIC	?CanBeApplied@DeleteMultWithOne@@UAE_NPAVAsmCmd@@@Z ; DeleteMultWithOne::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@DeleteMultWithOne@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DeleteMultWithOne@@8 DD FLAT:??_R0?AVDeleteMultWithOne@@@8 ; DeleteMultWithOne::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DeleteMultWithOne@@8
rdata$r	ENDS
;	COMDAT ??_R2DeleteMultWithOne@@8
rdata$r	SEGMENT
??_R2DeleteMultWithOne@@8 DD FLAT:??_R1A@?0A@EA@DeleteMultWithOne@@8 ; DeleteMultWithOne::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3DeleteMultWithOne@@8
rdata$r	SEGMENT
??_R3DeleteMultWithOne@@8 DD 00H			; DeleteMultWithOne::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DeleteMultWithOne@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDeleteMultWithOne@@@8
_DATA	SEGMENT
??_R0?AVDeleteMultWithOne@@@8 DD FLAT:??_7type_info@@6B@ ; DeleteMultWithOne `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDeleteMultWithOne@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DeleteMultWithOne@@6B@
rdata$r	SEGMENT
??_R4DeleteMultWithOne@@6B@ DD 00H			; DeleteMultWithOne::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDeleteMultWithOne@@@8
	DD	FLAT:??_R3DeleteMultWithOne@@8
rdata$r	ENDS
;	COMDAT ??_7DeleteMultWithOne@@6B@
CONST	SEGMENT
??_7DeleteMultWithOne@@6B@ DD FLAT:??_R4DeleteMultWithOne@@6B@ ; DeleteMultWithOne::`vftable'
	DD	FLAT:?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@DeleteMultWithOne@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0DeleteMultWithOne@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DeleteMultWithOne@@QAE@XZ PROC			; DeleteMultWithOne::DeleteMultWithOne, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DeleteMultWithOne@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DeleteMultWithOne@@QAE@XZ ENDP			; DeleteMultWithOne::DeleteMultWithOne
_TEXT	ENDS
PUBLIC	??_7ReplaceCDQ@@6B@				; ReplaceCDQ::`vftable'
PUBLIC	??_R4ReplaceCDQ@@6B@				; ReplaceCDQ::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceCDQ@@@8				; ReplaceCDQ `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceCDQ@@8				; ReplaceCDQ::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceCDQ@@8				; ReplaceCDQ::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceCDQ@@8			; ReplaceCDQ::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceCDQ::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceCDQ@@UAE_NPAVAsmCmd@@@Z	; ReplaceCDQ::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceCDQ@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceCDQ@@8 DD FLAT:??_R0?AVReplaceCDQ@@@8 ; ReplaceCDQ::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceCDQ@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceCDQ@@8
rdata$r	SEGMENT
??_R2ReplaceCDQ@@8 DD FLAT:??_R1A@?0A@EA@ReplaceCDQ@@8	; ReplaceCDQ::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceCDQ@@8
rdata$r	SEGMENT
??_R3ReplaceCDQ@@8 DD 00H				; ReplaceCDQ::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceCDQ@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceCDQ@@@8
_DATA	SEGMENT
??_R0?AVReplaceCDQ@@@8 DD FLAT:??_7type_info@@6B@	; ReplaceCDQ `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceCDQ@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceCDQ@@6B@
rdata$r	SEGMENT
??_R4ReplaceCDQ@@6B@ DD 00H				; ReplaceCDQ::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceCDQ@@@8
	DD	FLAT:??_R3ReplaceCDQ@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceCDQ@@6B@
CONST	SEGMENT
??_7ReplaceCDQ@@6B@ DD FLAT:??_R4ReplaceCDQ@@6B@	; ReplaceCDQ::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceCDQ@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceCDQ@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceCDQ@@QAE@XZ PROC				; ReplaceCDQ::ReplaceCDQ, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceCDQ@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceCDQ@@QAE@XZ ENDP				; ReplaceCDQ::ReplaceCDQ
_TEXT	ENDS
PUBLIC	??_7ReplaceNEG@@6B@				; ReplaceNEG::`vftable'
PUBLIC	??_R4ReplaceNEG@@6B@				; ReplaceNEG::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceNEG@@@8				; ReplaceNEG `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceNEG@@8				; ReplaceNEG::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceNEG@@8				; ReplaceNEG::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceNEG@@8			; ReplaceNEG::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceNEG::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceNEG@@UAE_NPAVAsmCmd@@@Z	; ReplaceNEG::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceNEG@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceNEG@@8 DD FLAT:??_R0?AVReplaceNEG@@@8 ; ReplaceNEG::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceNEG@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceNEG@@8
rdata$r	SEGMENT
??_R2ReplaceNEG@@8 DD FLAT:??_R1A@?0A@EA@ReplaceNEG@@8	; ReplaceNEG::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceNEG@@8
rdata$r	SEGMENT
??_R3ReplaceNEG@@8 DD 00H				; ReplaceNEG::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceNEG@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceNEG@@@8
_DATA	SEGMENT
??_R0?AVReplaceNEG@@@8 DD FLAT:??_7type_info@@6B@	; ReplaceNEG `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceNEG@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceNEG@@6B@
rdata$r	SEGMENT
??_R4ReplaceNEG@@6B@ DD 00H				; ReplaceNEG::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceNEG@@@8
	DD	FLAT:??_R3ReplaceNEG@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceNEG@@6B@
CONST	SEGMENT
??_7ReplaceNEG@@6B@ DD FLAT:??_R4ReplaceNEG@@6B@	; ReplaceNEG::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceNEG@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceNEG@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceNEG@@QAE@XZ PROC				; ReplaceNEG::ReplaceNEG, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceNEG@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceNEG@@QAE@XZ ENDP				; ReplaceNEG::ReplaceNEG
_TEXT	ENDS
PUBLIC	??_7ReplaceAddWithOne@@6B@			; ReplaceAddWithOne::`vftable'
PUBLIC	??_R4ReplaceAddWithOne@@6B@			; ReplaceAddWithOne::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceAddWithOne@@@8			; ReplaceAddWithOne `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceAddWithOne@@8			; ReplaceAddWithOne::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceAddWithOne@@8			; ReplaceAddWithOne::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceAddWithOne@@8		; ReplaceAddWithOne::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceAddWithOne::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceAddWithOne@@UAE_NPAVAsmCmd@@@Z ; ReplaceAddWithOne::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceAddWithOne@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceAddWithOne@@8 DD FLAT:??_R0?AVReplaceAddWithOne@@@8 ; ReplaceAddWithOne::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceAddWithOne@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceAddWithOne@@8
rdata$r	SEGMENT
??_R2ReplaceAddWithOne@@8 DD FLAT:??_R1A@?0A@EA@ReplaceAddWithOne@@8 ; ReplaceAddWithOne::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceAddWithOne@@8
rdata$r	SEGMENT
??_R3ReplaceAddWithOne@@8 DD 00H			; ReplaceAddWithOne::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceAddWithOne@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceAddWithOne@@@8
_DATA	SEGMENT
??_R0?AVReplaceAddWithOne@@@8 DD FLAT:??_7type_info@@6B@ ; ReplaceAddWithOne `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceAddWithOne@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceAddWithOne@@6B@
rdata$r	SEGMENT
??_R4ReplaceAddWithOne@@6B@ DD 00H			; ReplaceAddWithOne::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceAddWithOne@@@8
	DD	FLAT:??_R3ReplaceAddWithOne@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceAddWithOne@@6B@
CONST	SEGMENT
??_7ReplaceAddWithOne@@6B@ DD FLAT:??_R4ReplaceAddWithOne@@6B@ ; ReplaceAddWithOne::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceAddWithOne@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceAddWithOne@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceAddWithOne@@QAE@XZ PROC			; ReplaceAddWithOne::ReplaceAddWithOne, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceAddWithOne@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceAddWithOne@@QAE@XZ ENDP			; ReplaceAddWithOne::ReplaceAddWithOne
_TEXT	ENDS
PUBLIC	??_7ReplaceSubWithOne@@6B@			; ReplaceSubWithOne::`vftable'
PUBLIC	??_R4ReplaceSubWithOne@@6B@			; ReplaceSubWithOne::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceSubWithOne@@@8			; ReplaceSubWithOne `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceSubWithOne@@8			; ReplaceSubWithOne::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceSubWithOne@@8			; ReplaceSubWithOne::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceSubWithOne@@8		; ReplaceSubWithOne::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceSubWithOne::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceSubWithOne@@UAE_NPAVAsmCmd@@@Z ; ReplaceSubWithOne::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceSubWithOne@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceSubWithOne@@8 DD FLAT:??_R0?AVReplaceSubWithOne@@@8 ; ReplaceSubWithOne::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceSubWithOne@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceSubWithOne@@8
rdata$r	SEGMENT
??_R2ReplaceSubWithOne@@8 DD FLAT:??_R1A@?0A@EA@ReplaceSubWithOne@@8 ; ReplaceSubWithOne::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceSubWithOne@@8
rdata$r	SEGMENT
??_R3ReplaceSubWithOne@@8 DD 00H			; ReplaceSubWithOne::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceSubWithOne@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceSubWithOne@@@8
_DATA	SEGMENT
??_R0?AVReplaceSubWithOne@@@8 DD FLAT:??_7type_info@@6B@ ; ReplaceSubWithOne `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceSubWithOne@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceSubWithOne@@6B@
rdata$r	SEGMENT
??_R4ReplaceSubWithOne@@6B@ DD 00H			; ReplaceSubWithOne::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceSubWithOne@@@8
	DD	FLAT:??_R3ReplaceSubWithOne@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceSubWithOne@@6B@
CONST	SEGMENT
??_7ReplaceSubWithOne@@6B@ DD FLAT:??_R4ReplaceSubWithOne@@6B@ ; ReplaceSubWithOne::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceSubWithOne@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceSubWithOne@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceSubWithOne@@QAE@XZ PROC			; ReplaceSubWithOne::ReplaceSubWithOne, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceSubWithOne@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceSubWithOne@@QAE@XZ ENDP			; ReplaceSubWithOne::ReplaceSubWithOne
_TEXT	ENDS
PUBLIC	??_7ReplaceMovConst@@6B@			; ReplaceMovConst::`vftable'
PUBLIC	??_R4ReplaceMovConst@@6B@			; ReplaceMovConst::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceMovConst@@@8			; ReplaceMovConst `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceMovConst@@8				; ReplaceMovConst::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceMovConst@@8				; ReplaceMovConst::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceMovConst@@8		; ReplaceMovConst::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceMovConst::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceMovConst@@UAE_NPAVAsmCmd@@@Z ; ReplaceMovConst::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceMovConst@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceMovConst@@8 DD FLAT:??_R0?AVReplaceMovConst@@@8 ; ReplaceMovConst::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceMovConst@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceMovConst@@8
rdata$r	SEGMENT
??_R2ReplaceMovConst@@8 DD FLAT:??_R1A@?0A@EA@ReplaceMovConst@@8 ; ReplaceMovConst::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceMovConst@@8
rdata$r	SEGMENT
??_R3ReplaceMovConst@@8 DD 00H				; ReplaceMovConst::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceMovConst@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceMovConst@@@8
_DATA	SEGMENT
??_R0?AVReplaceMovConst@@@8 DD FLAT:??_7type_info@@6B@	; ReplaceMovConst `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceMovConst@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceMovConst@@6B@
rdata$r	SEGMENT
??_R4ReplaceMovConst@@6B@ DD 00H			; ReplaceMovConst::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceMovConst@@@8
	DD	FLAT:??_R3ReplaceMovConst@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceMovConst@@6B@
CONST	SEGMENT
??_7ReplaceMovConst@@6B@ DD FLAT:??_R4ReplaceMovConst@@6B@ ; ReplaceMovConst::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceMovConst@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceMovConst@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceMovConst@@QAE@XZ PROC				; ReplaceMovConst::ReplaceMovConst, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceMovConst@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceMovConst@@QAE@XZ ENDP				; ReplaceMovConst::ReplaceMovConst
_TEXT	ENDS
PUBLIC	??_7ReplaceCmpWithZero@@6B@			; ReplaceCmpWithZero::`vftable'
PUBLIC	??_R4ReplaceCmpWithZero@@6B@			; ReplaceCmpWithZero::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceCmpWithZero@@@8			; ReplaceCmpWithZero `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceCmpWithZero@@8			; ReplaceCmpWithZero::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceCmpWithZero@@8			; ReplaceCmpWithZero::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceCmpWithZero@@8		; ReplaceCmpWithZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceCmpWithZero::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceCmpWithZero@@UAE_NPAVAsmCmd@@@Z ; ReplaceCmpWithZero::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceCmpWithZero@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceCmpWithZero@@8 DD FLAT:??_R0?AVReplaceCmpWithZero@@@8 ; ReplaceCmpWithZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceCmpWithZero@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceCmpWithZero@@8
rdata$r	SEGMENT
??_R2ReplaceCmpWithZero@@8 DD FLAT:??_R1A@?0A@EA@ReplaceCmpWithZero@@8 ; ReplaceCmpWithZero::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceCmpWithZero@@8
rdata$r	SEGMENT
??_R3ReplaceCmpWithZero@@8 DD 00H			; ReplaceCmpWithZero::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceCmpWithZero@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceCmpWithZero@@@8
_DATA	SEGMENT
??_R0?AVReplaceCmpWithZero@@@8 DD FLAT:??_7type_info@@6B@ ; ReplaceCmpWithZero `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceCmpWithZero@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceCmpWithZero@@6B@
rdata$r	SEGMENT
??_R4ReplaceCmpWithZero@@6B@ DD 00H			; ReplaceCmpWithZero::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceCmpWithZero@@@8
	DD	FLAT:??_R3ReplaceCmpWithZero@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceCmpWithZero@@6B@
CONST	SEGMENT
??_7ReplaceCmpWithZero@@6B@ DD FLAT:??_R4ReplaceCmpWithZero@@6B@ ; ReplaceCmpWithZero::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceCmpWithZero@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceCmpWithZero@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceCmpWithZero@@QAE@XZ PROC			; ReplaceCmpWithZero::ReplaceCmpWithZero, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceCmpWithZero@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceCmpWithZero@@QAE@XZ ENDP			; ReplaceCmpWithZero::ReplaceCmpWithZero
_TEXT	ENDS
PUBLIC	??_7ReplaceMulToZero@@6B@			; ReplaceMulToZero::`vftable'
PUBLIC	??_R4ReplaceMulToZero@@6B@			; ReplaceMulToZero::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceMulToZero@@@8			; ReplaceMulToZero `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceMulToZero@@8			; ReplaceMulToZero::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceMulToZero@@8			; ReplaceMulToZero::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceMulToZero@@8		; ReplaceMulToZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceMulToZero::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceMulToZero@@UAE_NPAVAsmCmd@@@Z ; ReplaceMulToZero::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceMulToZero@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceMulToZero@@8 DD FLAT:??_R0?AVReplaceMulToZero@@@8 ; ReplaceMulToZero::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceMulToZero@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceMulToZero@@8
rdata$r	SEGMENT
??_R2ReplaceMulToZero@@8 DD FLAT:??_R1A@?0A@EA@ReplaceMulToZero@@8 ; ReplaceMulToZero::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceMulToZero@@8
rdata$r	SEGMENT
??_R3ReplaceMulToZero@@8 DD 00H				; ReplaceMulToZero::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceMulToZero@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceMulToZero@@@8
_DATA	SEGMENT
??_R0?AVReplaceMulToZero@@@8 DD FLAT:??_7type_info@@6B@	; ReplaceMulToZero `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceMulToZero@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceMulToZero@@6B@
rdata$r	SEGMENT
??_R4ReplaceMulToZero@@6B@ DD 00H			; ReplaceMulToZero::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceMulToZero@@@8
	DD	FLAT:??_R3ReplaceMulToZero@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceMulToZero@@6B@
CONST	SEGMENT
??_7ReplaceMulToZero@@6B@ DD FLAT:??_R4ReplaceMulToZero@@6B@ ; ReplaceMulToZero::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceMulToZero@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceMulToZero@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceMulToZero@@QAE@XZ PROC			; ReplaceMulToZero::ReplaceMulToZero, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceMulToZero@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceMulToZero@@QAE@XZ ENDP			; ReplaceMulToZero::ReplaceMulToZero
_TEXT	ENDS
PUBLIC	??_7ReplaceIMUL@@6B@				; ReplaceIMUL::`vftable'
PUBLIC	??_R4ReplaceIMUL@@6B@				; ReplaceIMUL::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceIMUL@@@8				; ReplaceIMUL `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceIMUL@@8				; ReplaceIMUL::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceIMUL@@8				; ReplaceIMUL::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceIMUL@@8			; ReplaceIMUL::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceIMUL::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z	; ReplaceIMUL::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceIMUL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceIMUL@@8 DD FLAT:??_R0?AVReplaceIMUL@@@8 ; ReplaceIMUL::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceIMUL@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceIMUL@@8
rdata$r	SEGMENT
??_R2ReplaceIMUL@@8 DD FLAT:??_R1A@?0A@EA@ReplaceIMUL@@8 ; ReplaceIMUL::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@OneLineOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceIMUL@@8
rdata$r	SEGMENT
??_R3ReplaceIMUL@@8 DD 00H				; ReplaceIMUL::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceIMUL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceIMUL@@@8
_DATA	SEGMENT
??_R0?AVReplaceIMUL@@@8 DD FLAT:??_7type_info@@6B@	; ReplaceIMUL `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceIMUL@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceIMUL@@6B@
rdata$r	SEGMENT
??_R4ReplaceIMUL@@6B@ DD 00H				; ReplaceIMUL::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceIMUL@@@8
	DD	FLAT:??_R3ReplaceIMUL@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceIMUL@@6B@
CONST	SEGMENT
??_7ReplaceIMUL@@6B@ DD FLAT:??_R4ReplaceIMUL@@6B@	; ReplaceIMUL::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceIMUL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceIMUL@@QAE@XZ PROC				; ReplaceIMUL::ReplaceIMUL, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0OneLineOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceIMUL@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceIMUL@@QAE@XZ ENDP				; ReplaceIMUL::ReplaceIMUL
_TEXT	ENDS
PUBLIC	??_7DeletePushPop@@6B@				; DeletePushPop::`vftable'
PUBLIC	??0TwoLinesOpt@@QAE@XZ				; TwoLinesOpt::TwoLinesOpt
PUBLIC	??_R4DeletePushPop@@6B@				; DeletePushPop::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDeletePushPop@@@8			; DeletePushPop `RTTI Type Descriptor'
PUBLIC	??_R3DeletePushPop@@8				; DeletePushPop::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DeletePushPop@@8				; DeletePushPop::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DeletePushPop@@8			; DeletePushPop::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@TwoLinesOpt@@8			; TwoLinesOpt::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTwoLinesOpt@@@8				; TwoLinesOpt `RTTI Type Descriptor'
PUBLIC	??_R3TwoLinesOpt@@8				; TwoLinesOpt::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TwoLinesOpt@@8				; TwoLinesOpt::`RTTI Base Class Array'
PUBLIC	?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; DeletePushPop::MakeOptimization
PUBLIC	?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z ; DeletePushPop::CanBeApplied
PUBLIC	?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z	; Optimization::CanBeApplied
PUBLIC	?OneLine@Optimization@@UAE_NXZ			; Optimization::OneLine
PUBLIC	?TwoLines@TwoLinesOpt@@UAE_NXZ			; TwoLinesOpt::TwoLines
;	COMDAT ??_R2TwoLinesOpt@@8
rdata$r	SEGMENT
??_R2TwoLinesOpt@@8 DD FLAT:??_R1A@?0A@EA@TwoLinesOpt@@8 ; TwoLinesOpt::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3TwoLinesOpt@@8
rdata$r	SEGMENT
??_R3TwoLinesOpt@@8 DD 00H				; TwoLinesOpt::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2TwoLinesOpt@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTwoLinesOpt@@@8
_DATA	SEGMENT
??_R0?AVTwoLinesOpt@@@8 DD FLAT:??_7type_info@@6B@	; TwoLinesOpt `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTwoLinesOpt@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@TwoLinesOpt@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TwoLinesOpt@@8 DD FLAT:??_R0?AVTwoLinesOpt@@@8 ; TwoLinesOpt::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TwoLinesOpt@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DeletePushPop@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DeletePushPop@@8 DD FLAT:??_R0?AVDeletePushPop@@@8 ; DeletePushPop::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DeletePushPop@@8
rdata$r	ENDS
;	COMDAT ??_R2DeletePushPop@@8
rdata$r	SEGMENT
??_R2DeletePushPop@@8 DD FLAT:??_R1A@?0A@EA@DeletePushPop@@8 ; DeletePushPop::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TwoLinesOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3DeletePushPop@@8
rdata$r	SEGMENT
??_R3DeletePushPop@@8 DD 00H				; DeletePushPop::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DeletePushPop@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDeletePushPop@@@8
_DATA	SEGMENT
??_R0?AVDeletePushPop@@@8 DD FLAT:??_7type_info@@6B@	; DeletePushPop `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDeletePushPop@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DeletePushPop@@6B@
rdata$r	SEGMENT
??_R4DeletePushPop@@6B@ DD 00H				; DeletePushPop::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDeletePushPop@@@8
	DD	FLAT:??_R3DeletePushPop@@8
rdata$r	ENDS
;	COMDAT ??_7DeletePushPop@@6B@
CONST	SEGMENT
??_7DeletePushPop@@6B@ DD FLAT:??_R4DeletePushPop@@6B@	; DeletePushPop::`vftable'
	DD	FLAT:?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@Optimization@@UAE_NXZ
	DD	FLAT:?TwoLines@TwoLinesOpt@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0DeletePushPop@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DeletePushPop@@QAE@XZ PROC				; DeletePushPop::DeletePushPop, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TwoLinesOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DeletePushPop@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DeletePushPop@@QAE@XZ ENDP				; DeletePushPop::DeletePushPop
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z PROC	; Optimization::CanBeApplied, COMDAT
; _this$ = ecx
; Line 7
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z ENDP	; Optimization::CanBeApplied
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OneLine@Optimization@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OneLine@Optimization@@UAE_NXZ PROC			; Optimization::OneLine, COMDAT
; _this$ = ecx
; Line 9
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OneLine@Optimization@@UAE_NXZ ENDP			; Optimization::OneLine
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?TwoLines@TwoLinesOpt@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?TwoLines@TwoLinesOpt@@UAE_NXZ PROC			; TwoLinesOpt::TwoLines, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?TwoLines@TwoLinesOpt@@UAE_NXZ ENDP			; TwoLinesOpt::TwoLines
_TEXT	ENDS
PUBLIC	??_7ReplacePushPopWithMov@@6B@			; ReplacePushPopWithMov::`vftable'
PUBLIC	??_R4ReplacePushPopWithMov@@6B@			; ReplacePushPopWithMov::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplacePushPopWithMov@@@8		; ReplacePushPopWithMov `RTTI Type Descriptor'
PUBLIC	??_R3ReplacePushPopWithMov@@8			; ReplacePushPopWithMov::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplacePushPopWithMov@@8			; ReplacePushPopWithMov::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplacePushPopWithMov@@8		; ReplacePushPopWithMov::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplacePushPopWithMov::MakeOptimization
PUBLIC	?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z ; ReplacePushPopWithMov::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplacePushPopWithMov@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplacePushPopWithMov@@8 DD FLAT:??_R0?AVReplacePushPopWithMov@@@8 ; ReplacePushPopWithMov::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplacePushPopWithMov@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplacePushPopWithMov@@8
rdata$r	SEGMENT
??_R2ReplacePushPopWithMov@@8 DD FLAT:??_R1A@?0A@EA@ReplacePushPopWithMov@@8 ; ReplacePushPopWithMov::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TwoLinesOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplacePushPopWithMov@@8
rdata$r	SEGMENT
??_R3ReplacePushPopWithMov@@8 DD 00H			; ReplacePushPopWithMov::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplacePushPopWithMov@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplacePushPopWithMov@@@8
_DATA	SEGMENT
??_R0?AVReplacePushPopWithMov@@@8 DD FLAT:??_7type_info@@6B@ ; ReplacePushPopWithMov `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplacePushPopWithMov@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplacePushPopWithMov@@6B@
rdata$r	SEGMENT
??_R4ReplacePushPopWithMov@@6B@ DD 00H			; ReplacePushPopWithMov::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplacePushPopWithMov@@@8
	DD	FLAT:??_R3ReplacePushPopWithMov@@8
rdata$r	ENDS
;	COMDAT ??_7ReplacePushPopWithMov@@6B@
CONST	SEGMENT
??_7ReplacePushPopWithMov@@6B@ DD FLAT:??_R4ReplacePushPopWithMov@@6B@ ; ReplacePushPopWithMov::`vftable'
	DD	FLAT:?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@Optimization@@UAE_NXZ
	DD	FLAT:?TwoLines@TwoLinesOpt@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplacePushPopWithMov@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplacePushPopWithMov@@QAE@XZ PROC			; ReplacePushPopWithMov::ReplacePushPopWithMov, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TwoLinesOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplacePushPopWithMov@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplacePushPopWithMov@@QAE@XZ ENDP			; ReplacePushPopWithMov::ReplacePushPopWithMov
_TEXT	ENDS
PUBLIC	??_7ReplaceMovPushWithPush@@6B@			; ReplaceMovPushWithPush::`vftable'
PUBLIC	??_R4ReplaceMovPushWithPush@@6B@		; ReplaceMovPushWithPush::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceMovPushWithPush@@@8		; ReplaceMovPushWithPush `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceMovPushWithPush@@8			; ReplaceMovPushWithPush::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceMovPushWithPush@@8			; ReplaceMovPushWithPush::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceMovPushWithPush@@8		; ReplaceMovPushWithPush::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; ReplaceMovPushWithPush::MakeOptimization
PUBLIC	?CanBeApplied@ReplaceMovPushWithPush@@UAE_NQAPAVAsmCmd@@@Z ; ReplaceMovPushWithPush::CanBeApplied
;	COMDAT ??_R1A@?0A@EA@ReplaceMovPushWithPush@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceMovPushWithPush@@8 DD FLAT:??_R0?AVReplaceMovPushWithPush@@@8 ; ReplaceMovPushWithPush::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceMovPushWithPush@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceMovPushWithPush@@8
rdata$r	SEGMENT
??_R2ReplaceMovPushWithPush@@8 DD FLAT:??_R1A@?0A@EA@ReplaceMovPushWithPush@@8 ; ReplaceMovPushWithPush::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TwoLinesOpt@@8
	DD	FLAT:??_R1A@?0A@EA@Optimization@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceMovPushWithPush@@8
rdata$r	SEGMENT
??_R3ReplaceMovPushWithPush@@8 DD 00H			; ReplaceMovPushWithPush::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplaceMovPushWithPush@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceMovPushWithPush@@@8
_DATA	SEGMENT
??_R0?AVReplaceMovPushWithPush@@@8 DD FLAT:??_7type_info@@6B@ ; ReplaceMovPushWithPush `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceMovPushWithPush@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceMovPushWithPush@@6B@
rdata$r	SEGMENT
??_R4ReplaceMovPushWithPush@@6B@ DD 00H			; ReplaceMovPushWithPush::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceMovPushWithPush@@@8
	DD	FLAT:??_R3ReplaceMovPushWithPush@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceMovPushWithPush@@6B@
CONST	SEGMENT
??_7ReplaceMovPushWithPush@@6B@ DD FLAT:??_R4ReplaceMovPushWithPush@@6B@ ; ReplaceMovPushWithPush::`vftable'
	DD	FLAT:?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@ReplaceMovPushWithPush@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@Optimization@@UAE_NXZ
	DD	FLAT:?TwoLines@TwoLinesOpt@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceMovPushWithPush@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ReplaceMovPushWithPush@@QAE@XZ PROC			; ReplaceMovPushWithPush::ReplaceMovPushWithPush, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TwoLinesOpt@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceMovPushWithPush@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReplaceMovPushWithPush@@QAE@XZ ENDP			; ReplaceMovPushWithPush::ReplaceMovPushWithPush
_TEXT	ENDS
PUBLIC	??_7OneLineOpt@@6B@				; OneLineOpt::`vftable'
PUBLIC	??0Optimization@@QAE@XZ				; Optimization::Optimization
PUBLIC	??_R4OneLineOpt@@6B@				; OneLineOpt::`RTTI Complete Object Locator'
PUBLIC	?MakeOptimization@Optimization@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ; Optimization::MakeOptimization
PUBLIC	?CanBeApplied@OneLineOpt@@UAE_NPAVAsmCmd@@@Z	; OneLineOpt::CanBeApplied
;	COMDAT ??_R4OneLineOpt@@6B@
rdata$r	SEGMENT
??_R4OneLineOpt@@6B@ DD 00H				; OneLineOpt::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVOneLineOpt@@@8
	DD	FLAT:??_R3OneLineOpt@@8
rdata$r	ENDS
;	COMDAT ??_7OneLineOpt@@6B@
CONST	SEGMENT
??_7OneLineOpt@@6B@ DD FLAT:??_R4OneLineOpt@@6B@	; OneLineOpt::`vftable'
	DD	FLAT:?MakeOptimization@Optimization@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@OneLineOpt@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@OneLineOpt@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0OneLineOpt@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0OneLineOpt@@QAE@XZ PROC				; OneLineOpt::OneLineOpt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Optimization@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OneLineOpt@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0OneLineOpt@@QAE@XZ ENDP				; OneLineOpt::OneLineOpt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?MakeOptimization@Optimization@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@Optimization@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; Optimization::MakeOptimization, COMDAT
; _this$ = ecx
; Line 6
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?MakeOptimization@Optimization@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; Optimization::MakeOptimization
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CanBeApplied@OneLineOpt@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@OneLineOpt@@UAE_NPAVAsmCmd@@@Z PROC	; OneLineOpt::CanBeApplied, COMDAT
; _this$ = ecx
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@OneLineOpt@@UAE_NPAVAsmCmd@@@Z ENDP	; OneLineOpt::CanBeApplied
_TEXT	ENDS
PUBLIC	??_7TwoLinesOpt@@6B@				; TwoLinesOpt::`vftable'
PUBLIC	??_R4TwoLinesOpt@@6B@				; TwoLinesOpt::`RTTI Complete Object Locator'
PUBLIC	?CanBeApplied@TwoLinesOpt@@UAE_NQAPAVAsmCmd@@@Z	; TwoLinesOpt::CanBeApplied
;	COMDAT ??_R4TwoLinesOpt@@6B@
rdata$r	SEGMENT
??_R4TwoLinesOpt@@6B@ DD 00H				; TwoLinesOpt::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTwoLinesOpt@@@8
	DD	FLAT:??_R3TwoLinesOpt@@8
rdata$r	ENDS
;	COMDAT ??_7TwoLinesOpt@@6B@
CONST	SEGMENT
??_7TwoLinesOpt@@6B@ DD FLAT:??_R4TwoLinesOpt@@6B@	; TwoLinesOpt::`vftable'
	DD	FLAT:?MakeOptimization@Optimization@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@TwoLinesOpt@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@Optimization@@UAE_NXZ
	DD	FLAT:?TwoLines@TwoLinesOpt@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TwoLinesOpt@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TwoLinesOpt@@QAE@XZ PROC				; TwoLinesOpt::TwoLinesOpt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Optimization@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TwoLinesOpt@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TwoLinesOpt@@QAE@XZ ENDP				; TwoLinesOpt::TwoLinesOpt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CanBeApplied@TwoLinesOpt@@UAE_NQAPAVAsmCmd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lines$ = 8						; size = 4
?CanBeApplied@TwoLinesOpt@@UAE_NQAPAVAsmCmd@@@Z PROC	; TwoLinesOpt::CanBeApplied, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@TwoLinesOpt@@UAE_NQAPAVAsmCmd@@@Z ENDP	; TwoLinesOpt::CanBeApplied
_TEXT	ENDS
PUBLIC	??_7Optimization@@6B@				; Optimization::`vftable'
PUBLIC	??_R4Optimization@@6B@				; Optimization::`RTTI Complete Object Locator'
;	COMDAT ??_R4Optimization@@6B@
rdata$r	SEGMENT
??_R4Optimization@@6B@ DD 00H				; Optimization::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVOptimization@@@8
	DD	FLAT:??_R3Optimization@@8
rdata$r	ENDS
;	COMDAT ??_7Optimization@@6B@
CONST	SEGMENT
??_7Optimization@@6B@ DD FLAT:??_R4Optimization@@6B@	; Optimization::`vftable'
	DD	FLAT:?MakeOptimization@Optimization@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NQAPAVAsmCmd@@@Z
	DD	FLAT:?CanBeApplied@Optimization@@UAE_NPAVAsmCmd@@@Z
	DD	FLAT:?OneLine@Optimization@@UAE_NXZ
	DD	FLAT:?TwoLines@Optimization@@UAE_NXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Optimization@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Optimization@@QAE@XZ PROC				; Optimization::Optimization, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Optimization@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Optimization@@QAE@XZ ENDP				; Optimization::Optimization
_TEXT	ENDS
PUBLIC	??_C@_09DKFODMJM@end?5start?$AA@		; `string'
PUBLIC	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
PUBLIC	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
PUBLIC	?TwoLinesOptimization@Peephole@@QAEXXZ		; Peephole::TwoLinesOptimization
PUBLIC	?OneLineOptimization@Peephole@@QAEXXZ		; Peephole::OneLineOptimization
PUBLIC	??_C@_05LCGMNGNK@?4686?6?$AA@			; `string'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ ; AsmCode::GetOutput
PUBLIC	??_C@_0CG@DPGBKHKE@include?5?2masm32?2include?2masm32rt@ ; `string'
PUBLIC	?GenOptimizedCode@Peephole@@QAEXXZ		; Peephole::GenOptimizedCode
EXTRN	?GenerateCodeSeg@AsmCode@@QAEX_N@Z:PROC		; AsmCode::GenerateCodeSeg
EXTRN	?GenerateDataSeg@AsmCode@@QAEXXZ:PROC		; AsmCode::GenerateDataSeg
EXTRN	?GenerateConstSeg@AsmCode@@QAEXXZ:PROC		; AsmCode::GenerateConstSeg
;	COMDAT ??_C@_09DKFODMJM@end?5start?$AA@
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.cpp
CONST	SEGMENT
??_C@_09DKFODMJM@end?5start?$AA@ DB 'end start', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LCGMNGNK@?4686?6?$AA@
CONST	SEGMENT
??_C@_05LCGMNGNK@?4686?6?$AA@ DB '.686', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DPGBKHKE@include?5?2masm32?2include?2masm32rt@
CONST	SEGMENT
??_C@_0CG@DPGBKHKE@include?5?2masm32?2include?2masm32rt@ DB 'include \mas'
	DB	'm32\include\masm32rt.inc', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?GenOptimizedCode@Peephole@@QAEXXZ
_TEXT	SEGMENT
tv133 = -220						; size = 4
_i$46261 = -20						; size = 4
_this$ = -8						; size = 4
?GenOptimizedCode@Peephole@@QAEXXZ PROC			; Peephole::GenOptimizedCode, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 24
	push	OFFSET ??_C@_0CG@DPGBKHKE@include?5?2masm32?2include?2masm32rt@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ ; AsmCode::GetOutput
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 25
	push	OFFSET ??_C@_05LCGMNGNK@?4686?6?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ ; AsmCode::GetOutput
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GenerateConstSeg@AsmCode@@QAEXXZ	; AsmCode::GenerateConstSeg
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GenerateDataSeg@AsmCode@@QAEXXZ	; AsmCode::GenerateDataSeg
; Line 29
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GenerateCodeSeg@AsmCode@@QAEX_N@Z	; AsmCode::GenerateCodeSeg
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OneLineOptimization@Peephole@@QAEXXZ	; Peephole::OneLineOptimization
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TwoLinesOptimization@Peephole@@QAEXXZ	; Peephole::TwoLinesOptimization
; Line 34
	mov	DWORD PTR _i$46261[ebp], 0
	jmp	SHORT $LN3@GenOptimiz
$LN2@GenOptimiz:
	mov	eax, DWORD PTR _i$46261[ebp]
	add	eax, 1
	mov	DWORD PTR _i$46261[ebp], eax
$LN3@GenOptimiz:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	sub	eax, 1
	cmp	DWORD PTR _i$46261[ebp], eax
	ja	SHORT $LN1@GenOptimiz
; Line 35
	mov	eax, DWORD PTR _i$46261[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv133[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ ; AsmCode::GetOutput
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv133[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@GenOptimiz
$LN1@GenOptimiz:
; Line 36
	push	OFFSET ??_C@_09DKFODMJM@end?5start?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ ; AsmCode::GetOutput
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 37
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GenOptimizedCode@Peephole@@QAEXXZ ENDP			; Peephole::GenOptimizedCode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ PROC ; AsmCode::GetOutput, COMDAT
; _this$ = ecx
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\generator.h
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOutput@AsmCode@@QAEAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@XZ ENDP ; AsmCode::GetOutput
_TEXT	ENDS
PUBLIC	??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
PUBLIC	?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::size
PUBLIC	??4?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator=
PUBLIC	?GetCommands@AsmCode@@QAE?AV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@XZ ; AsmCode::GetCommands
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.cpp
xdata$x	SEGMENT
__unwindtable$?OneLineOptimization@Peephole@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OneLineOptimization@Peephole@@QAEXXZ$0
__ehfuncinfo$?OneLineOptimization@Peephole@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OneLineOptimization@Peephole@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?OneLineOptimization@Peephole@@QAEXXZ
_TEXT	SEGMENT
tv153 = -276						; size = 4
tv154 = -272						; size = 4
tv147 = -272						; size = 4
tv131 = -272						; size = 4
tv87 = -272						; size = 4
$T64912 = -264						; size = 20
_j$46274 = -44						; size = 4
_i$46270 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OneLineOptimization@Peephole@@QAEXXZ PROC		; Peephole::OneLineOptimization, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OneLineOptimization@Peephole@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 41
	lea	eax, DWORD PTR $T64912[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetCommands@AsmCode@@QAE?AV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@XZ ; AsmCode::GetCommands
	mov	DWORD PTR tv154[ebp], eax
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR tv153[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv153[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator=
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T64912[ebp]
	call	??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::~vector<AsmCmd *,std::allocator<AsmCmd *> >
; Line 42
	mov	DWORD PTR _i$46270[ebp], 0
	jmp	SHORT $LN7@OneLineOpt
$LN6@OneLineOpt:
	mov	eax, DWORD PTR _i$46270[ebp]
	add	eax, 1
	mov	DWORD PTR _i$46270[ebp], eax
$LN7@OneLineOpt:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	cmp	DWORD PTR _i$46270[ebp], eax
	jae	$LN8@OneLineOpt
; Line 44
	mov	DWORD PTR _j$46274[ebp], 0
	jmp	SHORT $LN4@OneLineOpt
$LN3@OneLineOpt:
	mov	eax, DWORD PTR _j$46274[ebp]
	add	eax, 1
	mov	DWORD PTR _j$46274[ebp], eax
$LN4@OneLineOpt:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::size
	cmp	DWORD PTR _j$46274[ebp], eax
	jae	$LN2@OneLineOpt
; Line 46
	mov	eax, DWORD PTR _j$46274[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv87[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	$LN1@OneLineOpt
	mov	eax, DWORD PTR _j$46274[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv131[ebp], ecx
	mov	edx, DWORD PTR _i$46270[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	esi, esp
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR tv131[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv131[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@OneLineOpt
; Line 47
	mov	eax, DWORD PTR _j$46274[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv147[ebp], ecx
	mov	esi, esp
	lea	edx, DWORD PTR _i$46270[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@OneLineOpt:
; Line 48
	jmp	$LN3@OneLineOpt
$LN2@OneLineOpt:
; Line 49
	jmp	$LN6@OneLineOpt
$LN8@OneLineOpt:
; Line 50
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@OneLineOpt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@OneLineOpt:
	DD	1
	DD	$LN13@OneLineOpt
$LN13@OneLineOpt:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@OneLineOpt
$LN11@OneLineOpt:
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OneLineOptimization@Peephole@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T64912[ebp]
	jmp	??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::~vector<AsmCmd *,std::allocator<AsmCmd *> >
__ehhandler$?OneLineOptimization@Peephole@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OneLineOptimization@Peephole@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?OneLineOptimization@Peephole@@QAEXXZ ENDP		; Peephole::OneLineOptimization
PUBLIC	??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCommands@AsmCode@@QAE?AV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@XZ
_TEXT	SEGMENT
$T64927 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetCommands@AsmCode@@QAE?AV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@XZ PROC ; AsmCode::GetCommands, COMDAT
; _this$ = ecx
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\generator.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T64927[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 256				; 00000100H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >
	mov	ecx, DWORD PTR $T64927[ebp]
	or	ecx, 1
	mov	DWORD PTR $T64927[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetCommands@AsmCode@@QAE?AV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@XZ ENDP ; AsmCode::GetCommands
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?TwoLinesOptimization@Peephole@@QAEXXZ
_TEXT	SEGMENT
tv156 = -244						; size = 4
tv142 = -244						; size = 4
tv130 = -244						; size = 4
_k$46293 = -44						; size = 4
_i$46289 = -32						; size = 4
_j$46285 = -20						; size = 4
_this$ = -8						; size = 4
?TwoLinesOptimization@Peephole@@QAEXXZ PROC		; Peephole::TwoLinesOptimization, COMDAT
; _this$ = ecx
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.cpp
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN12@TwoLinesOp:
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+52]
	test	ecx, ecx
	je	$LN13@TwoLinesOp
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+52], 0
; Line 57
	mov	DWORD PTR _j$46285[ebp], 0
	jmp	SHORT $LN10@TwoLinesOp
$LN9@TwoLinesOp:
	mov	eax, DWORD PTR _j$46285[ebp]
	add	eax, 1
	mov	DWORD PTR _j$46285[ebp], eax
$LN10@TwoLinesOp:
	cmp	DWORD PTR _j$46285[ebp], 2
	jge	$LN8@TwoLinesOp
; Line 59
	mov	eax, DWORD PTR _j$46285[ebp]
	mov	DWORD PTR _i$46289[ebp], eax
	jmp	SHORT $LN7@TwoLinesOp
$LN6@TwoLinesOp:
	mov	eax, DWORD PTR _i$46289[ebp]
	add	eax, 1
	mov	DWORD PTR _i$46289[ebp], eax
$LN7@TwoLinesOp:
	mov	esi, DWORD PTR _i$46289[ebp]
	add	esi, DWORD PTR _j$46285[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	sub	eax, 1
	cmp	esi, eax
	jae	$LN5@TwoLinesOp
; Line 61
	mov	eax, DWORD PTR _i$46289[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+24], edx
; Line 62
	mov	eax, DWORD PTR _i$46289[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+28], edx
; Line 64
	mov	DWORD PTR _k$46293[ebp], 0
	jmp	SHORT $LN4@TwoLinesOp
$LN3@TwoLinesOp:
	mov	eax, DWORD PTR _k$46293[ebp]
	add	eax, 1
	mov	DWORD PTR _k$46293[ebp], eax
$LN4@TwoLinesOp:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::size
	cmp	DWORD PTR _k$46293[ebp], eax
	jae	$LN2@TwoLinesOp
; Line 66
	mov	eax, DWORD PTR _k$46293[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv130[ebp], ecx
	mov	edx, DWORD PTR tv130[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv130[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	$LN1@TwoLinesOp
	mov	eax, DWORD PTR _k$46293[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv142[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR tv142[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@TwoLinesOp
; Line 68
	mov	eax, DWORD PTR _k$46293[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv156[ebp], ecx
	mov	esi, esp
	lea	edx, DWORD PTR _i$46289[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv156[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+52], 1
$LN1@TwoLinesOp:
; Line 71
	jmp	$LN3@TwoLinesOp
$LN2@TwoLinesOp:
; Line 72
	jmp	$LN6@TwoLinesOp
$LN5@TwoLinesOp:
; Line 73
	jmp	$LN9@TwoLinesOp
$LN8@TwoLinesOp:
; Line 74
	jmp	$LN12@TwoLinesOp
$LN13@TwoLinesOp:
; Line 75
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@TwoLinesOp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@TwoLinesOp:
	DD	1
	DD	$LN16@TwoLinesOp
$LN16@TwoLinesOp:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN15@TwoLinesOp
$LN15@TwoLinesOp:
	DB	105					; 00000069H
	DB	0
?TwoLinesOptimization@Peephole@@QAEXXZ ENDP		; Peephole::TwoLinesOptimization
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CanBeApplied@DeleteAddWithZero@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv94 = -221						; size = 1
tv93 = -220						; size = 4
$T64936 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@DeleteAddWithZero@@UAE_NPAVAsmCmd@@@Z PROC ; DeleteAddWithZero::CanBeApplied, COMDAT
; _this$ = ecx
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 79
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T64936[ebp], esp
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv94[ebp], al
	movzx	eax, BYTE PTR tv94[ebp]
	test	eax, eax
	je	SHORT $LN3@CanBeAppli
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN4@CanBeAppli
$LN3@CanBeAppli:
	mov	DWORD PTR tv90[ebp], 0
$LN4@CanBeAppli:
	mov	al, BYTE PTR tv90[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@DeleteAddWithZero@@UAE_NPAVAsmCmd@@@Z ENDP ; DeleteAddWithZero::CanBeApplied
_TEXT	ENDS
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::~_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
PUBLIC	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
PUBLIC	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
__ehfuncinfo$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv138 = -316						; size = 4
tv137 = -312						; size = 4
tv134 = -308						; size = 4
tv141 = -304						; size = 4
tv132 = -300						; size = 4
tv140 = -296						; size = 4
tv85 = -292						; size = 4
$T64942 = -284						; size = 4
$T64943 = -272						; size = 12
$T64944 = -252						; size = 12
$T64945 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; DeleteAddWithZero::MakeOptimization, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv85[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv85[ebp]
	push	edx
	lea	eax, DWORD PTR $T64944[ebp]
	push	eax
	lea	ecx, DWORD PTR $T64943[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv140[ebp], eax
	mov	edx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv132[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv132[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv134[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T64942[ebp], esp
	mov	edx, DWORD PTR tv134[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv137[ebp], eax
	lea	eax, DWORD PTR $T64945[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv138[ebp], eax
	lea	ecx, DWORD PTR $T64945[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T64944[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T64943[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 85
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	lea	ecx, DWORD PTR $T64943[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T64944[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@DeleteAddWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; DeleteAddWithZero::MakeOptimization
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::~_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::~_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::~_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
_TEXT	ENDS
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::~_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::~_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 117
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN1@operator
; Line 123
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
$LN1@operator:
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$11503 = -44					; size = 4
__Parent_proxy$11501 = -32				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 137
	cmp	DWORD PTR __Parent$[ebp], 0
	je	SHORT $LN3@Adopt
; Line 139
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$11501[ebp], ecx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Parent_proxy$11501[ebp]
	je	SHORT $LN3@Adopt
; Line 144
	push	3
	lea	ecx, DWORD PTR __Lock$11503[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$11501[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 147
	mov	eax, DWORD PTR __Parent_proxy$11501[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$11501[ebp]
	mov	DWORD PTR [eax], ecx
; Line 149
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$11503[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@Adopt:
; Line 154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@Adopt:
	DD	1
	DD	$LN8@Adopt
$LN8@Adopt:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@Adopt
$LN6@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$11503[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
CONST	SEGMENT
??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H
	DB	'v', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$11513 = -20					; size = 4
_this$ = -8						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$11513[ebp], ecx
$LN3@Orphan_me:
; Line 177
	mov	eax, DWORD PTR __Pnext$11513[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	eax, DWORD PTR __Pnext$11513[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 178
	mov	eax, DWORD PTR __Pnext$11513[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$11513[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 180
	mov	eax, DWORD PTR __Pnext$11513[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@Orphan_me
; Line 181
	push	181					; 000000b5H
	push	OFFSET ??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:
; Line 182
	mov	eax, DWORD PTR __Pnext$11513[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 186
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 133
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Iterator_b:
	DD	1
	DD	$LN6@Iterator_b
$LN6@Iterator_b:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CanBeApplied@DeleteSubWithZero@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv94 = -221						; size = 1
tv93 = -220						; size = 4
$T65003 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@DeleteSubWithZero@@UAE_NPAVAsmCmd@@@Z PROC ; DeleteSubWithZero::CanBeApplied, COMDAT
; _this$ = ecx
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.cpp
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli@2
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65003[ebp], esp
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv94[ebp], al
	movzx	eax, BYTE PTR tv94[ebp]
	test	eax, eax
	je	SHORT $LN3@CanBeAppli@2
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN4@CanBeAppli@2
$LN3@CanBeAppli@2:
	mov	DWORD PTR tv90[ebp], 0
$LN4@CanBeAppli@2:
	mov	al, BYTE PTR tv90[ebp]
; Line 90
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@DeleteSubWithZero@@UAE_NPAVAsmCmd@@@Z ENDP ; DeleteSubWithZero::CanBeApplied
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
__ehfuncinfo$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv138 = -316						; size = 4
tv137 = -312						; size = 4
tv134 = -308						; size = 4
tv141 = -304						; size = 4
tv132 = -300						; size = 4
tv140 = -296						; size = 4
tv85 = -292						; size = 4
$T65009 = -284						; size = 4
$T65010 = -272						; size = 12
$T65011 = -252						; size = 12
$T65012 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; DeleteSubWithZero::MakeOptimization, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv85[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv85[ebp]
	push	edx
	lea	eax, DWORD PTR $T65011[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65010[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv140[ebp], eax
	mov	edx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv132[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv132[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv134[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65009[ebp], esp
	mov	edx, DWORD PTR tv134[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv137[ebp], eax
	lea	eax, DWORD PTR $T65012[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv138[ebp], eax
	lea	ecx, DWORD PTR $T65012[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T65011[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65010[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 95
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	lea	ecx, DWORD PTR $T65010[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65011[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@DeleteSubWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; DeleteSubWithZero::MakeOptimization
PUBLIC	??_C@_01HIHLOKLC@1?$AA@				; `string'
;	COMDAT ??_C@_01HIHLOKLC@1?$AA@
CONST	SEGMENT
??_C@_01HIHLOKLC@1?$AA@ DB '1', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CanBeApplied@DeleteMultWithOne@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv94 = -221						; size = 1
tv93 = -220						; size = 4
$T65025 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@DeleteMultWithOne@@UAE_NPAVAsmCmd@@@Z PROC ; DeleteMultWithOne::CanBeApplied, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli@3
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65025[ebp], esp
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv94[ebp], al
	movzx	eax, BYTE PTR tv94[ebp]
	test	eax, eax
	je	SHORT $LN3@CanBeAppli@3
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN4@CanBeAppli@3
$LN3@CanBeAppli@3:
	mov	DWORD PTR tv90[ebp], 0
$LN4@CanBeAppli@3:
	mov	al, BYTE PTR tv90[ebp]
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@DeleteMultWithOne@@UAE_NPAVAsmCmd@@@Z ENDP ; DeleteMultWithOne::CanBeApplied
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
__ehfuncinfo$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv138 = -316						; size = 4
tv137 = -312						; size = 4
tv134 = -308						; size = 4
tv141 = -304						; size = 4
tv132 = -300						; size = 4
tv140 = -296						; size = 4
tv85 = -292						; size = 4
$T65031 = -284						; size = 4
$T65032 = -272						; size = 12
$T65033 = -252						; size = 12
$T65034 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; DeleteMultWithOne::MakeOptimization, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv85[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv85[ebp]
	push	edx
	lea	eax, DWORD PTR $T65033[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65032[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv140[ebp], eax
	mov	edx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv132[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv132[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv134[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65031[ebp], esp
	mov	edx, DWORD PTR tv134[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv137[ebp], eax
	lea	eax, DWORD PTR $T65034[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv138[ebp], eax
	lea	ecx, DWORD PTR $T65034[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T65033[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65032[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 105
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	lea	ecx, DWORD PTR $T65032[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65033[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@DeleteMultWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; DeleteMultWithOne::MakeOptimization
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CanBeApplied@ReplaceCDQ@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@ReplaceCDQ@@UAE_NPAVAsmCmd@@@Z PROC	; ReplaceCDQ::CanBeApplied, COMDAT
; _this$ = ecx
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 109
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 110
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceCDQ@@UAE_NPAVAsmCmd@@@Z ENDP	; ReplaceCDQ::CanBeApplied
_TEXT	ENDS
PUBLIC	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
PUBLIC	??_C@_02OAMOHKJG@31?$AA@			; `string'
PUBLIC	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
PUBLIC	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z		; AsmCmd2::AsmCmd2
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
;	COMDAT ??_C@_02OAMOHKJG@31?$AA@
CONST	SEGMENT
??_C@_02OAMOHKJG@31?$AA@ DB '31', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11
	DD	06H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv259 = -556						; size = 4
tv258 = -552						; size = 4
tv254 = -548						; size = 4
tv245 = -548						; size = 4
tv275 = -544						; size = 4
tv268 = -544						; size = 4
tv244 = -544						; size = 4
tv267 = -540						; size = 4
tv252 = -540						; size = 4
tv240 = -540						; size = 4
tv274 = -536						; size = 4
tv272 = -536						; size = 4
tv264 = -536						; size = 4
tv277 = -532						; size = 4
tv238 = -532						; size = 4
tv187 = -532						; size = 4
tv271 = -528						; size = 4
tv262 = -528						; size = 4
tv167 = -528						; size = 4
tv276 = -524						; size = 4
tv250 = -524						; size = 4
tv128 = -524						; size = 4
tv249 = -520						; size = 4
tv222 = -520						; size = 4
tv76 = -520						; size = 4
$T65049 = -512						; size = 4
$T65050 = -500						; size = 4
$T65051 = -488						; size = 4
$T65054 = -476						; size = 4
$T65055 = -464						; size = 12
$T65056 = -444						; size = 12
$T65057 = -424						; size = 12
$T65058 = -404						; size = 4
$T65059 = -392						; size = 4
$T65060 = -380						; size = 4
$T65061 = -368						; size = 4
$T65064 = -356						; size = 4
$T65065 = -344						; size = 12
$T65066 = -324						; size = 12
$T65067 = -304						; size = 12
$T65068 = -284						; size = 4
$T65069 = -272						; size = 12
$T65070 = -252						; size = 12
$T65071 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceCDQ::MakeOptimization, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 544				; 00000220H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-556]
	mov	ecx, 136				; 00000088H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65051[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T65051[ebp], 0
	je	SHORT $LN3@MakeOptimi
	push	0
	push	3
	push	7
	mov	ecx, DWORD PTR $T65051[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@MakeOptimi
$LN3@MakeOptimi:
	mov	DWORD PTR tv76[ebp], 0
$LN4@MakeOptimi:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T65050[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T65050[ebp]
	mov	DWORD PTR $T65049[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax], edx
	lea	ecx, DWORD PTR $T65049[ebp]
	push	ecx
	mov	edx, DWORD PTR tv128[ebp]
	push	edx
	lea	eax, DWORD PTR $T65056[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65055[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv271[ebp], eax
	mov	edx, DWORD PTR tv271[ebp]
	mov	DWORD PTR tv238[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv238[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv272[ebp], eax
	mov	eax, DWORD PTR tv272[ebp]
	mov	DWORD PTR tv240[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65054[ebp], esp
	mov	edx, DWORD PTR tv240[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv244[ebp], eax
	lea	eax, DWORD PTR $T65057[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv245[ebp], eax
	lea	ecx, DWORD PTR $T65057[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65056[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65055[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 115
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65060[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T65060[ebp], 0
	je	SHORT $LN5@MakeOptimi
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65061[ebp], esp
	push	OFFSET ??_C@_02OAMOHKJG@31?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv249[ebp], eax
	push	3
	push	50					; 00000032H
	mov	ecx, DWORD PTR $T65060[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv250[ebp], eax
	mov	eax, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN6@MakeOptimi
$LN5@MakeOptimi:
	mov	DWORD PTR tv167[ebp], 0
$LN6@MakeOptimi:
	mov	ecx, DWORD PTR tv167[ebp]
	mov	DWORD PTR $T65059[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65059[ebp]
	mov	DWORD PTR $T65058[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv187[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65058[ebp]
	push	edx
	mov	eax, DWORD PTR tv187[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65066[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65065[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv274[ebp], eax
	mov	eax, DWORD PTR tv274[ebp]
	mov	DWORD PTR tv252[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv252[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv275[ebp], eax
	mov	ecx, DWORD PTR tv275[ebp]
	mov	DWORD PTR tv254[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65064[ebp], esp
	mov	edx, DWORD PTR tv254[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv258[ebp], eax
	lea	eax, DWORD PTR $T65067[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv259[ebp], eax
	lea	ecx, DWORD PTR $T65067[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T65066[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65065[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 116
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv222[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv222[ebp]
	push	edx
	lea	eax, DWORD PTR $T65070[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65069[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv276[ebp], eax
	mov	edx, DWORD PTR tv276[ebp]
	mov	DWORD PTR tv262[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv262[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv277[ebp], eax
	mov	eax, DWORD PTR tv277[ebp]
	mov	DWORD PTR tv264[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65068[ebp], esp
	mov	edx, DWORD PTR tv264[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv267[ebp], eax
	lea	eax, DWORD PTR $T65071[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv268[ebp], eax
	lea	ecx, DWORD PTR $T65071[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T65070[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65069[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 117
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 556				; 0000022cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	mov	eax, DWORD PTR $T65051[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65055[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	lea	ecx, DWORD PTR $T65056[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5:
	mov	eax, DWORD PTR $T65060[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7:
	lea	ecx, DWORD PTR $T65065[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8:
	lea	ecx, DWORD PTR $T65066[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11:
	lea	ecx, DWORD PTR $T65069[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12:
	lea	ecx, DWORD PTR $T65070[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceCDQ@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceCDQ::MakeOptimization
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1AsmCmd1@@QAE@XZ				; AsmCmd1::~AsmCmd1
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7AsmCmd2@@6B@				; AsmCmd2::`vftable'
PUBLIC	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z		; AsmCmd1::AsmCmd1
PUBLIC	??_R4AsmCmd2@@6B@				; AsmCmd2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAsmCmd2@@@8				; AsmCmd2 `RTTI Type Descriptor'
PUBLIC	??_R3AsmCmd2@@8					; AsmCmd2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AsmCmd2@@8					; AsmCmd2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AsmCmd2@@8			; AsmCmd2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@AsmCmd1@@8			; AsmCmd1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAsmCmd1@@@8				; AsmCmd1 `RTTI Type Descriptor'
PUBLIC	??_R3AsmCmd1@@8					; AsmCmd1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AsmCmd1@@8					; AsmCmd1::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AsmCmd@@8				; AsmCmd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAsmCmd@@@8				; AsmCmd `RTTI Type Descriptor'
PUBLIC	??_R3AsmCmd@@8					; AsmCmd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AsmCmd@@8					; AsmCmd::`RTTI Base Class Array'
PUBLIC	?AsmCmd1Test@AsmCmd1@@UAE_NXZ			; AsmCmd1::AsmCmd1Test
PUBLIC	?AsmCmd2Test@AsmCmd2@@UAE_NXZ			; AsmCmd2::AsmCmd2Test
PUBLIC	?OP_ADD_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_ADD_Test
PUBLIC	?OP_SUB_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_SUB_Test
PUBLIC	?OP_IMUL_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_IMUL_Test
PUBLIC	?OP_CDQ_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_CDQ_Test
PUBLIC	?OP_NEG_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_NEG_Test
PUBLIC	?OP_MOV_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_MOV_Test
PUBLIC	?OP_CMP_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_CMP_Test
PUBLIC	?OP_PUSH_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_PUSH_Test
PUBLIC	?OP_POP_Test@AsmCmd@@UAE_NXZ			; AsmCmd::OP_POP_Test
PUBLIC	?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::TestRightOp
PUBLIC	?GetRightStringOp@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; AsmCmd2::GetRightStringOp
PUBLIC	?GetLeftReg@AsmCmd1@@UAE?AW4REG@@XZ		; AsmCmd1::GetLeftReg
PUBLIC	?GetRightReg@AsmCmd2@@UAE?AW4REG@@XZ		; AsmCmd2::GetRightReg
PUBLIC	?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; AsmCmd2::GetLeftString
EXTRN	?GenerateToFile@AsmCmd2@@UAEXAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@Z:PROC ; AsmCmd2::GenerateToFile
;	COMDAT ??_R2AsmCmd@@8
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\asmcommands.h
rdata$r	SEGMENT
??_R2AsmCmd@@8 DD FLAT:??_R1A@?0A@EA@AsmCmd@@8		; AsmCmd::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3AsmCmd@@8
rdata$r	SEGMENT
??_R3AsmCmd@@8 DD 00H					; AsmCmd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2AsmCmd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAsmCmd@@@8
_DATA	SEGMENT
??_R0?AVAsmCmd@@@8 DD FLAT:??_7type_info@@6B@		; AsmCmd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAsmCmd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@AsmCmd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AsmCmd@@8 DD FLAT:??_R0?AVAsmCmd@@@8	; AsmCmd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AsmCmd@@8
rdata$r	ENDS
;	COMDAT ??_R2AsmCmd1@@8
rdata$r	SEGMENT
??_R2AsmCmd1@@8 DD FLAT:??_R1A@?0A@EA@AsmCmd1@@8	; AsmCmd1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AsmCmd@@8
rdata$r	ENDS
;	COMDAT ??_R3AsmCmd1@@8
rdata$r	SEGMENT
??_R3AsmCmd1@@8 DD 00H					; AsmCmd1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2AsmCmd1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAsmCmd1@@@8
_DATA	SEGMENT
??_R0?AVAsmCmd1@@@8 DD FLAT:??_7type_info@@6B@		; AsmCmd1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAsmCmd1@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@AsmCmd1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AsmCmd1@@8 DD FLAT:??_R0?AVAsmCmd1@@@8	; AsmCmd1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AsmCmd1@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AsmCmd2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AsmCmd2@@8 DD FLAT:??_R0?AVAsmCmd2@@@8	; AsmCmd2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AsmCmd2@@8
rdata$r	ENDS
;	COMDAT ??_R2AsmCmd2@@8
rdata$r	SEGMENT
??_R2AsmCmd2@@8 DD FLAT:??_R1A@?0A@EA@AsmCmd2@@8	; AsmCmd2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AsmCmd1@@8
	DD	FLAT:??_R1A@?0A@EA@AsmCmd@@8
rdata$r	ENDS
;	COMDAT ??_R3AsmCmd2@@8
rdata$r	SEGMENT
??_R3AsmCmd2@@8 DD 00H					; AsmCmd2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2AsmCmd2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAsmCmd2@@@8
_DATA	SEGMENT
??_R0?AVAsmCmd2@@@8 DD FLAT:??_7type_info@@6B@		; AsmCmd2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAsmCmd2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AsmCmd2@@6B@
rdata$r	SEGMENT
??_R4AsmCmd2@@6B@ DD 00H				; AsmCmd2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAsmCmd2@@@8
	DD	FLAT:??_R3AsmCmd2@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7AsmCmd2@@6B@
CONST	SEGMENT
??_7AsmCmd2@@6B@ DD FLAT:??_R4AsmCmd2@@6B@		; AsmCmd2::`vftable'
	DD	FLAT:?GenerateToFile@AsmCmd2@@UAEXAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:?AsmCmd1Test@AsmCmd1@@UAE_NXZ
	DD	FLAT:?AsmCmd2Test@AsmCmd2@@UAE_NXZ
	DD	FLAT:?OP_ADD_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_SUB_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_IMUL_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_CDQ_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_NEG_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_MOV_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_CMP_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_PUSH_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_POP_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?GetRightStringOp@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?GetLeftReg@AsmCmd1@@UAE?AW4REG@@XZ
	DD	FLAT:?GetRightReg@AsmCmd2@@UAE?AW4REG@@XZ
	DD	FLAT:?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z$1
__ehfuncinfo$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_op$ = 8						; size = 4
_oper1$ = 12						; size = 4
_oper2$ = 16						; size = 4
??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z PROC		; AsmCmd2::AsmCmd2, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _oper1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _op$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z	; AsmCmd1::AsmCmd1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AsmCmd2@@6B@
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _oper2$[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AsmCmd1@@QAE@XZ
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z ENDP		; AsmCmd2::AsmCmd2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OP_ADD_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_ADD_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_ADD_Test, COMDAT
; _this$ = ecx
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_ADD_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_ADD_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_SUB_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_SUB_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_SUB_Test, COMDAT
; _this$ = ecx
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_SUB_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_SUB_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_IMUL_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_IMUL_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_IMUL_Test, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 2
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_IMUL_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_IMUL_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_CDQ_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_CDQ_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_CDQ_Test, COMDAT
; _this$ = ecx
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 6
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_CDQ_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_CDQ_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_NEG_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_NEG_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_NEG_Test, COMDAT
; _this$ = ecx
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 15			; 0000000fH
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_NEG_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_NEG_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_MOV_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_MOV_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_MOV_Test, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 7
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_MOV_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_MOV_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_CMP_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_CMP_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_CMP_Test, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 22			; 00000016H
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_CMP_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_CMP_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_PUSH_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_PUSH_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_PUSH_Test, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 5
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_PUSH_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_PUSH_Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?OP_POP_Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OP_POP_Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::OP_POP_Test, COMDAT
; _this$ = ecx
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 4
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OP_POP_Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::OP_POP_Test
_TEXT	ENDS
PUBLIC	??_7AsmCmd1@@6B@				; AsmCmd1::`vftable'
PUBLIC	??0AsmCmd@@QAE@W4OPCODE@@@Z			; AsmCmd::AsmCmd
PUBLIC	??_R4AsmCmd1@@6B@				; AsmCmd1::`RTTI Complete Object Locator'
PUBLIC	?AsmCmd2Test@AsmCmd@@UAE_NXZ			; AsmCmd::AsmCmd2Test
PUBLIC	?TestRightOp@AsmCmd@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd::TestRightOp
PUBLIC	?GetRightStringOp@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; AsmCmd::GetRightStringOp
PUBLIC	?GetRightReg@AsmCmd@@UAE?AW4REG@@XZ		; AsmCmd::GetRightReg
PUBLIC	?GetLeftString@AsmCmd1@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; AsmCmd1::GetLeftString
EXTRN	?GenerateToFile@AsmCmd1@@UAEXAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@Z:PROC ; AsmCmd1::GenerateToFile
;	COMDAT ??_R4AsmCmd1@@6B@
rdata$r	SEGMENT
??_R4AsmCmd1@@6B@ DD 00H				; AsmCmd1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAsmCmd1@@@8
	DD	FLAT:??_R3AsmCmd1@@8
rdata$r	ENDS
;	COMDAT ??_7AsmCmd1@@6B@
CONST	SEGMENT
??_7AsmCmd1@@6B@ DD FLAT:??_R4AsmCmd1@@6B@		; AsmCmd1::`vftable'
	DD	FLAT:?GenerateToFile@AsmCmd1@@UAEXAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:?AsmCmd1Test@AsmCmd1@@UAE_NXZ
	DD	FLAT:?AsmCmd2Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_ADD_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_SUB_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_IMUL_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_CDQ_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_NEG_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_MOV_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_CMP_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_PUSH_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_POP_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?TestRightOp@AsmCmd@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?GetRightStringOp@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?GetLeftReg@AsmCmd1@@UAE?AW4REG@@XZ
	DD	FLAT:?GetRightReg@AsmCmd@@UAE?AW4REG@@XZ
	DD	FLAT:?GetLeftString@AsmCmd1@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_op$ = 8						; size = 4
_oper1$ = 12						; size = 4
??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z PROC		; AsmCmd1::AsmCmd1, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AsmCmd@@QAE@W4OPCODE@@@Z		; AsmCmd::AsmCmd
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AsmCmd1@@6B@
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _oper1$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z ENDP		; AsmCmd1::AsmCmd1
_TEXT	ENDS
PUBLIC	??_7AsmCmd@@6B@					; AsmCmd::`vftable'
PUBLIC	??_R4AsmCmd@@6B@				; AsmCmd::`RTTI Complete Object Locator'
PUBLIC	?AsmCmd1Test@AsmCmd@@UAE_NXZ			; AsmCmd::AsmCmd1Test
PUBLIC	?GetLeftReg@AsmCmd@@UAE?AW4REG@@XZ		; AsmCmd::GetLeftReg
PUBLIC	?GetLeftString@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; AsmCmd::GetLeftString
EXTRN	?GenerateToFile@AsmCmd@@UAEXAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@Z:PROC ; AsmCmd::GenerateToFile
;	COMDAT ??_R4AsmCmd@@6B@
rdata$r	SEGMENT
??_R4AsmCmd@@6B@ DD 00H					; AsmCmd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAsmCmd@@@8
	DD	FLAT:??_R3AsmCmd@@8
rdata$r	ENDS
;	COMDAT ??_7AsmCmd@@6B@
CONST	SEGMENT
??_7AsmCmd@@6B@ DD FLAT:??_R4AsmCmd@@6B@		; AsmCmd::`vftable'
	DD	FLAT:?GenerateToFile@AsmCmd@@UAEXAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:?AsmCmd1Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?AsmCmd2Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_ADD_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_SUB_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_IMUL_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_CDQ_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_NEG_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_MOV_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_CMP_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_PUSH_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?OP_POP_Test@AsmCmd@@UAE_NXZ
	DD	FLAT:?TestRightOp@AsmCmd@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?GetRightStringOp@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?GetLeftReg@AsmCmd@@UAE?AW4REG@@XZ
	DD	FLAT:?GetRightReg@AsmCmd@@UAE?AW4REG@@XZ
	DD	FLAT:?GetLeftString@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0AsmCmd@@QAE@W4OPCODE@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cmd$ = 8						; size = 4
??0AsmCmd@@QAE@W4OPCODE@@@Z PROC			; AsmCmd::AsmCmd, COMDAT
; _this$ = ecx
; Line 8
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AsmCmd@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cmd$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0AsmCmd@@QAE@W4OPCODE@@@Z ENDP			; AsmCmd::AsmCmd
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?AsmCmd1Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AsmCmd1Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::AsmCmd1Test, COMDAT
; _this$ = ecx
; Line 10
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?AsmCmd1Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::AsmCmd1Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?AsmCmd2Test@AsmCmd@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AsmCmd2Test@AsmCmd@@UAE_NXZ PROC			; AsmCmd::AsmCmd2Test, COMDAT
; _this$ = ecx
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?AsmCmd2Test@AsmCmd@@UAE_NXZ ENDP			; AsmCmd::AsmCmd2Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?TestRightOp@AsmCmd@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T65134 = -221						; size = 1
_this$ = -8						; size = 4
_pattern$ = 8						; size = 32
?TestRightOp@AsmCmd@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; AsmCmd::TestRightOp, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	BYTE PTR $T65134[ebp], 0
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T65134[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@TestRightO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	1
$LN6@TestRightO:
	DD	1
	DD	$LN5@TestRightO
$LN5@TestRightO:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@TestRightO
$LN4@TestRightO:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
?TestRightOp@AsmCmd@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; AsmCmd::TestRightOp
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetRightStringOp@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T65142 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetRightStringOp@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; AsmCmd::GetRightStringOp, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65142[ebp], 0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T65142[ebp]
	or	eax, 1
	mov	DWORD PTR $T65142[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRightStringOp@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; AsmCmd::GetRightStringOp
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLeftReg@AsmCmd@@UAE?AW4REG@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLeftReg@AsmCmd@@UAE?AW4REG@@XZ PROC			; AsmCmd::GetLeftReg, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLeftReg@AsmCmd@@UAE?AW4REG@@XZ ENDP			; AsmCmd::GetLeftReg
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetRightReg@AsmCmd@@UAE?AW4REG@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRightReg@AsmCmd@@UAE?AW4REG@@XZ PROC		; AsmCmd::GetRightReg, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRightReg@AsmCmd@@UAE?AW4REG@@XZ ENDP		; AsmCmd::GetRightReg
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLeftString@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T65151 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetLeftString@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; AsmCmd::GetLeftString, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65151[ebp], 0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T65151[ebp]
	or	eax, 1
	mov	DWORD PTR $T65151[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetLeftString@AsmCmd@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; AsmCmd::GetLeftString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?AsmCmd1Test@AsmCmd1@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AsmCmd1Test@AsmCmd1@@UAE_NXZ PROC			; AsmCmd1::AsmCmd1Test, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?AsmCmd1Test@AsmCmd1@@UAE_NXZ ENDP			; AsmCmd1::AsmCmd1Test
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLeftReg@AsmCmd1@@UAE?AW4REG@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLeftReg@AsmCmd1@@UAE?AW4REG@@XZ PROC		; AsmCmd1::GetLeftReg, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLeftReg@AsmCmd1@@UAE?AW4REG@@XZ ENDP		; AsmCmd1::GetLeftReg
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetLeftString@AsmCmd1@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T65160 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetLeftString@AsmCmd1@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; AsmCmd1::GetLeftString, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65160[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T65160[ebp]
	or	ecx, 1
	mov	DWORD PTR $T65160[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetLeftString@AsmCmd1@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; AsmCmd1::GetLeftString
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_op$ = 8						; size = 4
_oper1$ = 12						; size = 4
_immed$ = 16						; size = 32
??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; AsmCmd2::AsmCmd2, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _oper1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _op$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z	; AsmCmd1::AsmCmd1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AsmCmd2@@6B@
	lea	eax, DWORD PTR _immed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _immed$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@AsmCmd2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
	npad	2
$LN10@AsmCmd2:
	DD	1
	DD	$LN9@AsmCmd2
$LN9@AsmCmd2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@AsmCmd2
$LN7@AsmCmd2:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _immed$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AsmCmd1@@QAE@XZ
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; AsmCmd2::AsmCmd2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AsmCmd2Test@AsmCmd2@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AsmCmd2Test@AsmCmd2@@UAE_NXZ PROC			; AsmCmd2::AsmCmd2Test, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?AsmCmd2Test@AsmCmd2@@UAE_NXZ ENDP			; AsmCmd2::AsmCmd2Test
_TEXT	ENDS
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T65183 = -233						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 32
?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; AsmCmd2::TestRightOp, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T65183[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T65183[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@TestRightO@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	3
$LN7@TestRightO@2:
	DD	1
	DD	$LN6@TestRightO@2
$LN6@TestRightO@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@TestRightO@2
$LN4@TestRightO@2:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?TestRightOp@AsmCmd2@@UAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; AsmCmd2::TestRightOp
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetRightStringOp@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T65196 = -224						; size = 4
$T65200 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetRightStringOp@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; AsmCmd2::GetRightStringOp, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65200[ebp], 0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetRightSt
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 44					; 0000002cH
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@GetRightSt
$LN3@GetRightSt:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	mov	DWORD PTR tv74[ebp], eax
$LN4@GetRightSt:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T65196[ebp], ecx
	mov	edx, DWORD PTR $T65196[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T65200[ebp]
	or	eax, 1
	mov	DWORD PTR $T65200[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRightStringOp@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; AsmCmd2::GetRightStringOp
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
tv133 = -344						; size = 4
tv144 = -340						; size = 4
tv89 = -336						; size = 4
tv128 = -332						; size = 4
tv142 = -328						; size = 4
$T36913 = -320						; size = 32
$T36914 = -280						; size = 32
$T65205 = -240						; size = 4
$T65208 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; AsmCmd2::GetLeftString, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65208[ebp], 0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetLeftStr
	mov	esi, esp
	lea	edx, DWORD PTR $T36913[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv128[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T65208[ebp]
	or	edx, 1
	mov	DWORD PTR $T65208[ebp], edx
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN4@GetLeftStr
$LN3@GetLeftStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	lea	ecx, DWORD PTR $T36914[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv144[ebp], eax
	mov	edx, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T65208[ebp]
	or	eax, 2
	mov	DWORD PTR $T65208[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv89[ebp], ecx
$LN4@GetLeftStr:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T65205[ebp], edx
	mov	eax, DWORD PTR $T65205[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T65208[ebp]
	or	ecx, 4
	mov	DWORD PTR $T65208[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T65208[ebp]
	and	edx, 2
	je	SHORT $LN11@GetLeftStr
	and	DWORD PTR $T65208[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T36914[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@GetLeftStr:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T65208[ebp]
	and	eax, 1
	je	SHORT $LN12@GetLeftStr
	and	DWORD PTR $T65208[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T36913[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN12@GetLeftStr:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0:
	mov	eax, DWORD PTR $T65208[ebp]
	and	eax, 1
	je	$LN6@GetLeftStr
	and	DWORD PTR $T65208[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T36913[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@GetLeftStr:
	ret	0
__unwindfunclet$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
	mov	eax, DWORD PTR $T65208[ebp]
	and	eax, 2
	je	$LN8@GetLeftStr
	and	DWORD PTR $T65208[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T36914[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@GetLeftStr:
	ret	0
__unwindfunclet$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
	mov	eax, DWORD PTR $T65208[ebp]
	and	eax, 4
	je	$LN10@GetLeftStr
	and	DWORD PTR $T65208[ebp], -5		; fffffffbH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@GetLeftStr:
	ret	0
__ehhandler$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLeftString@AsmCmd2@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; AsmCmd2::GetLeftString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetRightReg@AsmCmd2@@UAE?AW4REG@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRightReg@AsmCmd2@@UAE?AW4REG@@XZ PROC		; AsmCmd2::GetRightReg, COMDAT
; _this$ = ecx
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+76]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRightReg@AsmCmd2@@UAE?AW4REG@@XZ ENDP		; AsmCmd2::GetRightReg
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1AsmCmd1@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1AsmCmd1@@QAE@XZ PROC					; AsmCmd1::~AsmCmd1, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AsmCmd1@@QAE@XZ ENDP					; AsmCmd1::~AsmCmd1
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CanBeApplied@ReplaceNEG@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@ReplaceNEG@@UAE_NPAVAsmCmd@@@Z PROC	; ReplaceNEG::CanBeApplied, COMDAT
; _this$ = ecx
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.cpp
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceNEG@@UAE_NPAVAsmCmd@@@Z ENDP	; ReplaceNEG::CanBeApplied
_TEXT	ENDS
PUBLIC	??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
PUBLIC	??_C@_02PGHGPEOM@?91?$AA@			; `string'
;	COMDAT ??_C@_02PGHGPEOM@?91?$AA@
CONST	SEGMENT
??_C@_02PGHGPEOM@?91?$AA@ DB '-1', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv266 = -564						; size = 4
tv265 = -560						; size = 4
tv261 = -556						; size = 4
tv292 = -552						; size = 4
tv277 = -552						; size = 4
tv276 = -548						; size = 4
tv259 = -548						; size = 4
tv291 = -544						; size = 4
tv286 = -544						; size = 4
tv272 = -544						; size = 4
tv295 = -540						; size = 4
tv285 = -540						; size = 4
tv150 = -540						; size = 4
tv282 = -536						; size = 4
tv270 = -536						; size = 4
tv130 = -536						; size = 4
tv297 = -532						; size = 4
tv294 = -532						; size = 4
tv257 = -532						; size = 4
tv280 = -528						; size = 4
tv256 = -528						; size = 4
tv204 = -528						; size = 4
tv296 = -524						; size = 4
tv289 = -524						; size = 4
tv184 = -524						; size = 4
tv239 = -520						; size = 4
tv178 = -520						; size = 4
tv91 = -520						; size = 4
$T65232 = -512						; size = 4
$T65233 = -500						; size = 4
$T65234 = -488						; size = 4
$T65235 = -476						; size = 4
$T65238 = -464						; size = 4
$T65239 = -452						; size = 12
$T65240 = -432						; size = 12
$T65241 = -412						; size = 12
$T65242 = -392						; size = 4
$T65243 = -380						; size = 4
$T65244 = -368						; size = 4
$T65247 = -356						; size = 4
$T65248 = -344						; size = 12
$T65249 = -324						; size = 12
$T65250 = -304						; size = 12
$T65251 = -284						; size = 4
$T65252 = -272						; size = 12
$T65253 = -252						; size = 12
$T65254 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceNEG::MakeOptimization, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 552				; 00000228H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-564]
	mov	ecx, 138				; 0000008aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 126
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65234[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T65234[ebp], 0
	je	$LN3@MakeOptimi@2
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv91[ebp], edx
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65235[ebp], esp
	push	OFFSET ??_C@_02PGHGPEOM@?91?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv289[ebp], eax
	mov	eax, DWORD PTR tv289[ebp]
	mov	DWORD PTR tv256[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv91[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv91[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	19					; 00000013H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T65234[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv257[ebp], eax
	mov	ecx, DWORD PTR tv257[ebp]
	mov	DWORD PTR tv130[ebp], ecx
	jmp	SHORT $LN4@MakeOptimi@2
$LN3@MakeOptimi@2:
	mov	DWORD PTR tv130[ebp], 0
$LN4@MakeOptimi@2:
	mov	edx, DWORD PTR tv130[ebp]
	mov	DWORD PTR $T65233[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65233[ebp]
	mov	DWORD PTR $T65232[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv150[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx], ecx
	lea	eax, DWORD PTR $T65232[ebp]
	push	eax
	mov	ecx, DWORD PTR tv150[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65240[ebp]
	push	edx
	lea	eax, DWORD PTR $T65239[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv291[ebp], eax
	mov	ecx, DWORD PTR tv291[ebp]
	mov	DWORD PTR tv259[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv259[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv292[ebp], eax
	mov	edx, DWORD PTR tv292[ebp]
	mov	DWORD PTR tv261[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65238[ebp], esp
	mov	eax, DWORD PTR tv261[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv265[ebp], eax
	lea	ecx, DWORD PTR $T65241[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv266[ebp], eax
	lea	ecx, DWORD PTR $T65241[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T65240[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65239[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 127
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65244[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T65244[ebp], 0
	je	SHORT $LN5@MakeOptimi@2
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv178[ebp], edx
	mov	eax, DWORD PTR tv178[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv178[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	51					; 00000033H
	mov	ecx, DWORD PTR $T65244[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z	; AsmCmd1::AsmCmd1
	mov	DWORD PTR tv184[ebp], eax
	jmp	SHORT $LN6@MakeOptimi@2
$LN5@MakeOptimi@2:
	mov	DWORD PTR tv184[ebp], 0
$LN6@MakeOptimi@2:
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR $T65243[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65243[ebp]
	mov	DWORD PTR $T65242[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv204[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65242[ebp]
	push	edx
	mov	eax, DWORD PTR tv204[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65249[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65248[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv294[ebp], eax
	mov	eax, DWORD PTR tv294[ebp]
	mov	DWORD PTR tv270[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv270[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv295[ebp], eax
	mov	ecx, DWORD PTR tv295[ebp]
	mov	DWORD PTR tv272[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65247[ebp], esp
	mov	edx, DWORD PTR tv272[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv276[ebp], eax
	lea	eax, DWORD PTR $T65250[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
	mov	DWORD PTR tv277[ebp], eax
	lea	ecx, DWORD PTR $T65250[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T65249[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65248[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 128
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv239[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv239[ebp]
	push	edx
	lea	eax, DWORD PTR $T65253[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65252[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv296[ebp], eax
	mov	edx, DWORD PTR tv296[ebp]
	mov	DWORD PTR tv280[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv280[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv297[ebp], eax
	mov	eax, DWORD PTR tv297[ebp]
	mov	DWORD PTR tv282[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65251[ebp], esp
	mov	edx, DWORD PTR tv282[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv285[ebp], eax
	lea	eax, DWORD PTR $T65254[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv286[ebp], eax
	lea	ecx, DWORD PTR $T65254[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T65253[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65252[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 129
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 564				; 00000234H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	mov	eax, DWORD PTR $T65234[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	mov	ecx, DWORD PTR $T65235[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	lea	ecx, DWORD PTR $T65239[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3:
	lea	ecx, DWORD PTR $T65240[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6:
	mov	eax, DWORD PTR $T65244[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7:
	lea	ecx, DWORD PTR $T65248[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8:
	lea	ecx, DWORD PTR $T65249[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11:
	lea	ecx, DWORD PTR $T65252[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12:
	lea	ecx, DWORD PTR $T65253[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-568]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceNEG@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceNEG::MakeOptimization
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CanBeApplied@ReplaceAddWithOne@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv94 = -221						; size = 1
tv93 = -220						; size = 4
$T65278 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@ReplaceAddWithOne@@UAE_NPAVAsmCmd@@@Z PROC ; ReplaceAddWithOne::CanBeApplied, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli@4
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65278[ebp], esp
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv94[ebp], al
	movzx	eax, BYTE PTR tv94[ebp]
	test	eax, eax
	je	SHORT $LN3@CanBeAppli@4
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN4@CanBeAppli@4
$LN3@CanBeAppli@4:
	mov	DWORD PTR tv90[ebp], 0
$LN4@CanBeAppli@4:
	mov	al, BYTE PTR tv90[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceAddWithOne@@UAE_NPAVAsmCmd@@@Z ENDP ; ReplaceAddWithOne::CanBeApplied
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv194 = -432						; size = 4
tv193 = -428						; size = 4
tv203 = -424						; size = 4
tv189 = -424						; size = 4
tv207 = -420						; size = 4
tv202 = -420						; size = 4
tv199 = -416						; size = 4
tv187 = -416						; size = 4
tv209 = -412						; size = 4
tv206 = -412						; size = 4
tv197 = -408						; size = 4
tv136 = -408						; size = 4
tv208 = -404						; size = 4
tv84 = -404						; size = 4
tv171 = -400						; size = 4
tv78 = -400						; size = 4
$T65284 = -392						; size = 4
$T65285 = -380						; size = 4
$T65286 = -368						; size = 4
$T65289 = -356						; size = 4
$T65290 = -344						; size = 12
$T65291 = -324						; size = 12
$T65292 = -304						; size = 12
$T65293 = -284						; size = 4
$T65294 = -272						; size = 12
$T65295 = -252						; size = 12
$T65296 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceAddWithOne::MakeOptimization, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65286[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T65286[ebp], 0
	je	SHORT $LN3@MakeOptimi@3
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	51					; 00000033H
	mov	ecx, DWORD PTR $T65286[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z	; AsmCmd1::AsmCmd1
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@MakeOptimi@3
$LN3@MakeOptimi@3:
	mov	DWORD PTR tv84[ebp], 0
$LN4@MakeOptimi@3:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T65285[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65285[ebp]
	mov	DWORD PTR $T65284[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv136[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65284[ebp]
	push	edx
	mov	eax, DWORD PTR tv136[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65291[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65290[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv187[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv207[ebp], eax
	mov	ecx, DWORD PTR tv207[ebp]
	mov	DWORD PTR tv189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65289[ebp], esp
	mov	edx, DWORD PTR tv189[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv193[ebp], eax
	lea	eax, DWORD PTR $T65292[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
	mov	DWORD PTR tv194[ebp], eax
	lea	ecx, DWORD PTR $T65292[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65291[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65290[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 139
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv171[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	lea	eax, DWORD PTR $T65295[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65294[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv208[ebp], eax
	mov	edx, DWORD PTR tv208[ebp]
	mov	DWORD PTR tv197[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv197[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv209[ebp], eax
	mov	eax, DWORD PTR tv209[ebp]
	mov	DWORD PTR tv199[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65293[ebp], esp
	mov	edx, DWORD PTR tv199[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv202[ebp], eax
	lea	eax, DWORD PTR $T65296[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv203[ebp], eax
	lea	ecx, DWORD PTR $T65296[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T65295[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65294[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 140
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	mov	eax, DWORD PTR $T65286[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65290[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	lea	ecx, DWORD PTR $T65291[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5:
	lea	ecx, DWORD PTR $T65294[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6:
	lea	ecx, DWORD PTR $T65295[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceAddWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceAddWithOne::MakeOptimization
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CanBeApplied@ReplaceSubWithOne@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv94 = -221						; size = 1
tv93 = -220						; size = 4
$T65314 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@ReplaceSubWithOne@@UAE_NPAVAsmCmd@@@Z PROC ; ReplaceSubWithOne::CanBeApplied, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 144
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli@5
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65314[ebp], esp
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv94[ebp], al
	movzx	eax, BYTE PTR tv94[ebp]
	test	eax, eax
	je	SHORT $LN3@CanBeAppli@5
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN4@CanBeAppli@5
$LN3@CanBeAppli@5:
	mov	DWORD PTR tv90[ebp], 0
$LN4@CanBeAppli@5:
	mov	al, BYTE PTR tv90[ebp]
; Line 145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceSubWithOne@@UAE_NPAVAsmCmd@@@Z ENDP ; ReplaceSubWithOne::CanBeApplied
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv194 = -432						; size = 4
tv193 = -428						; size = 4
tv203 = -424						; size = 4
tv189 = -424						; size = 4
tv207 = -420						; size = 4
tv202 = -420						; size = 4
tv199 = -416						; size = 4
tv187 = -416						; size = 4
tv209 = -412						; size = 4
tv206 = -412						; size = 4
tv197 = -408						; size = 4
tv136 = -408						; size = 4
tv208 = -404						; size = 4
tv84 = -404						; size = 4
tv171 = -400						; size = 4
tv78 = -400						; size = 4
$T65320 = -392						; size = 4
$T65321 = -380						; size = 4
$T65322 = -368						; size = 4
$T65325 = -356						; size = 4
$T65326 = -344						; size = 12
$T65327 = -324						; size = 12
$T65328 = -304						; size = 12
$T65329 = -284						; size = 4
$T65330 = -272						; size = 12
$T65331 = -252						; size = 12
$T65332 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceSubWithOne::MakeOptimization, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65322[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T65322[ebp], 0
	je	SHORT $LN3@MakeOptimi@4
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	52					; 00000034H
	mov	ecx, DWORD PTR $T65322[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z	; AsmCmd1::AsmCmd1
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@MakeOptimi@4
$LN3@MakeOptimi@4:
	mov	DWORD PTR tv84[ebp], 0
$LN4@MakeOptimi@4:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T65321[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65321[ebp]
	mov	DWORD PTR $T65320[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv136[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65320[ebp]
	push	edx
	mov	eax, DWORD PTR tv136[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65327[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65326[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv187[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv207[ebp], eax
	mov	ecx, DWORD PTR tv207[ebp]
	mov	DWORD PTR tv189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65325[ebp], esp
	mov	edx, DWORD PTR tv189[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv193[ebp], eax
	lea	eax, DWORD PTR $T65328[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
	mov	DWORD PTR tv194[ebp], eax
	lea	ecx, DWORD PTR $T65328[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65327[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65326[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 150
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv171[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	lea	eax, DWORD PTR $T65331[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65330[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv208[ebp], eax
	mov	edx, DWORD PTR tv208[ebp]
	mov	DWORD PTR tv197[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv197[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv209[ebp], eax
	mov	eax, DWORD PTR tv209[ebp]
	mov	DWORD PTR tv199[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65329[ebp], esp
	mov	edx, DWORD PTR tv199[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv202[ebp], eax
	lea	eax, DWORD PTR $T65332[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv203[ebp], eax
	lea	ecx, DWORD PTR $T65332[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T65331[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65330[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 151
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	mov	eax, DWORD PTR $T65322[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65326[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	lea	ecx, DWORD PTR $T65327[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5:
	lea	ecx, DWORD PTR $T65330[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6:
	lea	ecx, DWORD PTR $T65331[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceSubWithOne@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceSubWithOne::MakeOptimization
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CanBeApplied@ReplaceMovConst@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv162 = -268						; size = 4
tv172 = -261						; size = 1
tv171 = -260						; size = 4
tv169 = -253						; size = 1
tv168 = -252						; size = 4
tv166 = -245						; size = 1
tv165 = -244						; size = 4
$T65350 = -236						; size = 4
$T65351 = -224						; size = 4
$T65353 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@ReplaceMovConst@@UAE_NPAVAsmCmd@@@Z PROC	; ReplaceMovConst::CanBeApplied, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@CanBeAppli@6
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65350[ebp], esp
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv165[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv166[ebp], al
	movzx	eax, BYTE PTR tv166[ebp]
	test	eax, eax
	jne	SHORT $LN3@CanBeAppli@6
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65351[ebp], esp
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	mov	BYTE PTR tv169[ebp], al
	movzx	ecx, BYTE PTR tv169[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@CanBeAppli@6
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65353[ebp], esp
	push	OFFSET ??_C@_02PGHGPEOM@?91?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv172[ebp], al
	movzx	eax, BYTE PTR tv172[ebp]
	test	eax, eax
	je	SHORT $LN4@CanBeAppli@6
$LN3@CanBeAppli@6:
	mov	DWORD PTR tv162[ebp], 1
	jmp	SHORT $LN5@CanBeAppli@6
$LN4@CanBeAppli@6:
	mov	DWORD PTR tv162[ebp], 0
$LN5@CanBeAppli@6:
	mov	al, BYTE PTR tv162[ebp]
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceMovConst@@UAE_NPAVAsmCmd@@@Z ENDP	; ReplaceMovConst::CanBeApplied
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	013H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11
	DD	05H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$13
	DD	07H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$17
	DD	09H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$18
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$22
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$23
	DD	0cH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$24
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$27
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$28
	DD	0fH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$29
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$32
	DD	011H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$33
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv599 = -960						; size = 4
tv598 = -956						; size = 4
tv623 = -952						; size = 4
tv594 = -952						; size = 4
tv571 = -952						; size = 4
tv654 = -948						; size = 4
tv634 = -948						; size = 4
tv622 = -948						; size = 4
tv570 = -948						; size = 4
tv633 = -944						; size = 4
tv618 = -944						; size = 4
tv592 = -944						; size = 4
tv566 = -944						; size = 4
tv659 = -940						; size = 4
tv653 = -940						; size = 4
tv647 = -940						; size = 4
tv643 = -940						; size = 4
tv629 = -940						; size = 4
tv608 = -940						; size = 4
tv580 = -940						; size = 4
tv662 = -936						; size = 4
tv642 = -936						; size = 4
tv616 = -936						; size = 4
tv607 = -936						; size = 4
tv579 = -936						; size = 4
tv564 = -936						; size = 4
tv299 = -936						; size = 4
tv658 = -932						; size = 4
tv646 = -932						; size = 4
tv639 = -932						; size = 4
tv627 = -932						; size = 4
tv604 = -932						; size = 4
tv576 = -932						; size = 4
tv279 = -932						; size = 4
tv664 = -928						; size = 4
tv661 = -928						; size = 4
tv656 = -928						; size = 4
tv649 = -928						; size = 4
tv590 = -928						; size = 4
tv455 = -928						; size = 4
tv171 = -928						; size = 4
tv637 = -924						; size = 4
tv602 = -924						; size = 4
tv589 = -924						; size = 4
tv574 = -924						; size = 4
tv509 = -924						; size = 4
tv435 = -924						; size = 4
tv151 = -924						; size = 4
tv613 = -921						; size = 1
tv585 = -921						; size = 1
tv561 = -921						; size = 1
tv663 = -920						; size = 4
tv655 = -920						; size = 4
tv651 = -920						; size = 4
tv648 = -920						; size = 4
tv612 = -920						; size = 4
tv584 = -920						; size = 4
tv560 = -920						; size = 4
tv489 = -920						; size = 4
tv429 = -920						; size = 4
tv145 = -920						; size = 4
tv544 = -916						; size = 4
tv483 = -916						; size = 4
tv419 = -916						; size = 4
tv353 = -916						; size = 4
tv334 = -916						; size = 4
tv272 = -916						; size = 4
tv225 = -916						; size = 4
tv206 = -916						; size = 4
tv135 = -916						; size = 4
tv69 = -916						; size = 4
$T65361 = -908						; size = 4
$T65362 = -896						; size = 4
$T65363 = -884						; size = 4
$T65364 = -872						; size = 4
$T65367 = -860						; size = 4
$T65368 = -848						; size = 12
$T65369 = -828						; size = 12
$T65370 = -808						; size = 12
$T65371 = -788						; size = 4
$T65372 = -776						; size = 12
$T65373 = -756						; size = 12
$T65374 = -736						; size = 12
$T65375 = -716						; size = 4
$T65376 = -704						; size = 4
$T65377 = -692						; size = 4
$T65378 = -680						; size = 4
$T65379 = -668						; size = 4
$T65382 = -656						; size = 4
$T65383 = -644						; size = 12
$T65384 = -624						; size = 12
$T65385 = -604						; size = 12
$T65386 = -584						; size = 4
$T65387 = -572						; size = 12
$T65388 = -552						; size = 12
$T65389 = -532						; size = 12
$T65390 = -512						; size = 4
$T65391 = -500						; size = 4
$T65392 = -488						; size = 4
$T65393 = -476						; size = 4
$T65396 = -464						; size = 4
$T65397 = -452						; size = 12
$T65398 = -432						; size = 12
$T65399 = -412						; size = 12
$T65400 = -392						; size = 4
$T65401 = -380						; size = 4
$T65402 = -368						; size = 4
$T65405 = -356						; size = 4
$T65406 = -344						; size = 12
$T65407 = -324						; size = 12
$T65408 = -304						; size = 12
$T65409 = -284						; size = 4
$T65410 = -272						; size = 12
$T65411 = -252						; size = 12
$T65412 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceMovConst::MakeOptimization, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 948				; 000003b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-960]
	mov	ecx, 237				; 000000edH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], edx
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65361[ebp], esp
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv560[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv69[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	mov	BYTE PTR tv561[ebp], al
	movzx	ecx, BYTE PTR tv561[ebp]
	test	ecx, ecx
	je	$LN5@MakeOptimi@5
; Line 162
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65364[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T65364[ebp], 0
	je	SHORT $LN8@MakeOptimi@5
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv135[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv145[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv145[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv145[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	19					; 00000013H
	mov	ecx, DWORD PTR $T65364[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN9@MakeOptimi@5
$LN8@MakeOptimi@5:
	mov	DWORD PTR tv151[ebp], 0
$LN9@MakeOptimi@5:
	mov	ecx, DWORD PTR tv151[ebp]
	mov	DWORD PTR $T65363[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65363[ebp]
	mov	DWORD PTR $T65362[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv171[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65362[ebp]
	push	edx
	mov	eax, DWORD PTR tv171[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65369[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65368[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv646[ebp], eax
	mov	eax, DWORD PTR tv646[ebp]
	mov	DWORD PTR tv564[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv564[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv647[ebp], eax
	mov	ecx, DWORD PTR tv647[ebp]
	mov	DWORD PTR tv566[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65367[ebp], esp
	mov	edx, DWORD PTR tv566[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv570[ebp], eax
	lea	eax, DWORD PTR $T65370[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv571[ebp], eax
	lea	ecx, DWORD PTR $T65370[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65369[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65368[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 163
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv206[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv206[ebp]
	push	edx
	lea	eax, DWORD PTR $T65373[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65372[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv648[ebp], eax
	mov	edx, DWORD PTR tv648[ebp]
	mov	DWORD PTR tv574[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv574[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv649[ebp], eax
	mov	eax, DWORD PTR tv649[ebp]
	mov	DWORD PTR tv576[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65371[ebp], esp
	mov	edx, DWORD PTR tv576[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv579[ebp], eax
	lea	eax, DWORD PTR $T65374[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv580[ebp], eax
	lea	ecx, DWORD PTR $T65374[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T65373[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65372[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	jmp	$LN6@MakeOptimi@5
$LN5@MakeOptimi@5:
; Line 165
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv225[ebp], edx
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65375[ebp], esp
	push	OFFSET ??_C@_02PGHGPEOM@?91?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv584[ebp], eax
	mov	eax, DWORD PTR tv225[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv225[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	mov	BYTE PTR tv585[ebp], al
	movzx	ecx, BYTE PTR tv585[ebp]
	test	ecx, ecx
	je	$LN3@MakeOptimi@5
; Line 167
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65378[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T65378[ebp], 0
	je	$LN10@MakeOptimi@5
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv272[ebp], edx
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65379[ebp], esp
	push	OFFSET ??_C@_02PGHGPEOM@?91?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv651[ebp], eax
	mov	eax, DWORD PTR tv651[ebp]
	mov	DWORD PTR tv589[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	mov	ecx, DWORD PTR tv272[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv272[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	18					; 00000012H
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR $T65378[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv590[ebp], eax
	mov	ecx, DWORD PTR tv590[ebp]
	mov	DWORD PTR tv279[ebp], ecx
	jmp	SHORT $LN11@MakeOptimi@5
$LN10@MakeOptimi@5:
	mov	DWORD PTR tv279[ebp], 0
$LN11@MakeOptimi@5:
	mov	edx, DWORD PTR tv279[ebp]
	mov	DWORD PTR $T65377[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65377[ebp]
	mov	DWORD PTR $T65376[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv299[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx], ecx
	lea	eax, DWORD PTR $T65376[ebp]
	push	eax
	mov	ecx, DWORD PTR tv299[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65384[ebp]
	push	edx
	lea	eax, DWORD PTR $T65383[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv653[ebp], eax
	mov	ecx, DWORD PTR tv653[ebp]
	mov	DWORD PTR tv592[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv592[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv654[ebp], eax
	mov	edx, DWORD PTR tv654[ebp]
	mov	DWORD PTR tv594[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65382[ebp], esp
	mov	eax, DWORD PTR tv594[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv598[ebp], eax
	lea	ecx, DWORD PTR $T65385[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv599[ebp], eax
	lea	ecx, DWORD PTR $T65385[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T65384[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65383[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 168
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv334[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv334[ebp]
	push	edx
	lea	eax, DWORD PTR $T65388[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65387[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv655[ebp], eax
	mov	edx, DWORD PTR tv655[ebp]
	mov	DWORD PTR tv602[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv602[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv656[ebp], eax
	mov	eax, DWORD PTR tv656[ebp]
	mov	DWORD PTR tv604[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65386[ebp], esp
	mov	edx, DWORD PTR tv604[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv607[ebp], eax
	lea	eax, DWORD PTR $T65389[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv608[ebp], eax
	lea	ecx, DWORD PTR $T65389[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T65388[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65387[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	jmp	$LN6@MakeOptimi@5
$LN3@MakeOptimi@5:
; Line 170
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv353[ebp], edx
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65390[ebp], esp
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv612[ebp], eax
	mov	eax, DWORD PTR tv353[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv353[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	mov	BYTE PTR tv613[ebp], al
	movzx	ecx, BYTE PTR tv613[ebp]
	test	ecx, ecx
	je	$LN6@MakeOptimi@5
; Line 172
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65393[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T65393[ebp], 0
	je	SHORT $LN12@MakeOptimi@5
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv419[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv429[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv419[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv419[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv429[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv429[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	19					; 00000013H
	mov	ecx, DWORD PTR $T65393[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv435[ebp], eax
	jmp	SHORT $LN13@MakeOptimi@5
$LN12@MakeOptimi@5:
	mov	DWORD PTR tv435[ebp], 0
$LN13@MakeOptimi@5:
	mov	ecx, DWORD PTR tv435[ebp]
	mov	DWORD PTR $T65392[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65392[ebp]
	mov	DWORD PTR $T65391[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv455[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65391[ebp]
	push	edx
	mov	eax, DWORD PTR tv455[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65398[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65397[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv658[ebp], eax
	mov	eax, DWORD PTR tv658[ebp]
	mov	DWORD PTR tv616[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv616[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv659[ebp], eax
	mov	ecx, DWORD PTR tv659[ebp]
	mov	DWORD PTR tv618[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65396[ebp], esp
	mov	edx, DWORD PTR tv618[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv622[ebp], eax
	lea	eax, DWORD PTR $T65399[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv623[ebp], eax
	lea	ecx, DWORD PTR $T65399[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T65398[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65397[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 173
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65402[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	cmp	DWORD PTR $T65402[ebp], 0
	je	SHORT $LN14@MakeOptimi@5
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv483[ebp], edx
	mov	eax, DWORD PTR tv483[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv483[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	51					; 00000033H
	mov	ecx, DWORD PTR $T65402[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z	; AsmCmd1::AsmCmd1
	mov	DWORD PTR tv489[ebp], eax
	jmp	SHORT $LN15@MakeOptimi@5
$LN14@MakeOptimi@5:
	mov	DWORD PTR tv489[ebp], 0
$LN15@MakeOptimi@5:
	mov	ecx, DWORD PTR tv489[ebp]
	mov	DWORD PTR $T65401[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65401[ebp]
	mov	DWORD PTR $T65400[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv509[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65400[ebp]
	push	edx
	mov	eax, DWORD PTR tv509[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65407[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65406[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv661[ebp], eax
	mov	eax, DWORD PTR tv661[ebp]
	mov	DWORD PTR tv627[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv627[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv662[ebp], eax
	mov	ecx, DWORD PTR tv662[ebp]
	mov	DWORD PTR tv629[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65405[ebp], esp
	mov	edx, DWORD PTR tv629[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv633[ebp], eax
	lea	eax, DWORD PTR $T65408[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
	mov	DWORD PTR tv634[ebp], eax
	lea	ecx, DWORD PTR $T65408[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T65407[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65406[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 174
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv544[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv544[ebp]
	push	edx
	lea	eax, DWORD PTR $T65411[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65410[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv663[ebp], eax
	mov	edx, DWORD PTR tv663[ebp]
	mov	DWORD PTR tv637[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR tv637[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv664[ebp], eax
	mov	eax, DWORD PTR tv664[ebp]
	mov	DWORD PTR tv639[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65409[ebp], esp
	mov	edx, DWORD PTR tv639[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv642[ebp], eax
	lea	eax, DWORD PTR $T65412[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv643[ebp], eax
	lea	ecx, DWORD PTR $T65412[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T65411[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65410[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN6@MakeOptimi@5:
; Line 176
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 960				; 000003c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	mov	eax, DWORD PTR $T65364[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	lea	ecx, DWORD PTR $T65368[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3:
	lea	ecx, DWORD PTR $T65369[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6:
	lea	ecx, DWORD PTR $T65372[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7:
	lea	ecx, DWORD PTR $T65373[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11:
	mov	eax, DWORD PTR $T65378[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12:
	mov	ecx, DWORD PTR $T65379[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$13:
	lea	ecx, DWORD PTR $T65383[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$14:
	lea	ecx, DWORD PTR $T65384[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$17:
	lea	ecx, DWORD PTR $T65387[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$18:
	lea	ecx, DWORD PTR $T65388[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$22:
	mov	eax, DWORD PTR $T65393[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$23:
	lea	ecx, DWORD PTR $T65397[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$24:
	lea	ecx, DWORD PTR $T65398[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$27:
	mov	eax, DWORD PTR $T65402[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$28:
	lea	ecx, DWORD PTR $T65406[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$29:
	lea	ecx, DWORD PTR $T65407[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$32:
	lea	ecx, DWORD PTR $T65410[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$33:
	lea	ecx, DWORD PTR $T65411[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-964]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceMovConst@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceMovConst::MakeOptimization
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CanBeApplied@ReplaceCmpWithZero@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv94 = -221						; size = 1
tv93 = -220						; size = 4
$T65457 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@ReplaceCmpWithZero@@UAE_NPAVAsmCmd@@@Z PROC ; ReplaceCmpWithZero::CanBeApplied, COMDAT
; _this$ = ecx
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli@7
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65457[ebp], esp
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv94[ebp], al
	movzx	eax, BYTE PTR tv94[ebp]
	test	eax, eax
	je	SHORT $LN3@CanBeAppli@7
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN4@CanBeAppli@7
$LN3@CanBeAppli@7:
	mov	DWORD PTR tv90[ebp], 0
$LN4@CanBeAppli@7:
	mov	al, BYTE PTR tv90[ebp]
; Line 181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceCmpWithZero@@UAE_NPAVAsmCmd@@@Z ENDP ; ReplaceCmpWithZero::CanBeApplied
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv204 = -436						; size = 4
tv203 = -432						; size = 4
tv199 = -428						; size = 4
tv217 = -424						; size = 4
tv213 = -424						; size = 4
tv212 = -420						; size = 4
tv197 = -420						; size = 4
tv216 = -416						; size = 4
tv209 = -416						; size = 4
tv219 = -412						; size = 4
tv146 = -412						; size = 4
tv207 = -408						; size = 4
tv94 = -408						; size = 4
tv218 = -404						; size = 4
tv88 = -404						; size = 4
tv181 = -400						; size = 4
tv78 = -400						; size = 4
$T65463 = -392						; size = 4
$T65464 = -380						; size = 4
$T65465 = -368						; size = 4
$T65468 = -356						; size = 4
$T65469 = -344						; size = 12
$T65470 = -324						; size = 12
$T65471 = -304						; size = 12
$T65472 = -284						; size = 4
$T65473 = -272						; size = 12
$T65474 = -252						; size = 12
$T65475 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceCmpWithZero::MakeOptimization, COMDAT
; _this$ = ecx
; Line 184
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 424				; 000001a8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 185
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65465[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T65465[ebp], 0
	je	SHORT $LN3@MakeOptimi@6
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv88[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv88[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	53					; 00000035H
	mov	ecx, DWORD PTR $T65465[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN4@MakeOptimi@6
$LN3@MakeOptimi@6:
	mov	DWORD PTR tv94[ebp], 0
$LN4@MakeOptimi@6:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T65464[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65464[ebp]
	mov	DWORD PTR $T65463[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv146[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65463[ebp]
	push	edx
	mov	eax, DWORD PTR tv146[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65470[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65469[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv216[ebp], eax
	mov	eax, DWORD PTR tv216[ebp]
	mov	DWORD PTR tv197[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv197[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv217[ebp], eax
	mov	ecx, DWORD PTR tv217[ebp]
	mov	DWORD PTR tv199[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65468[ebp], esp
	mov	edx, DWORD PTR tv199[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv203[ebp], eax
	lea	eax, DWORD PTR $T65471[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv204[ebp], eax
	lea	ecx, DWORD PTR $T65471[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65470[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65469[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 186
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv181[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv181[ebp]
	push	edx
	lea	eax, DWORD PTR $T65474[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65473[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv207[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv207[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv219[ebp], eax
	mov	eax, DWORD PTR tv219[ebp]
	mov	DWORD PTR tv209[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65472[ebp], esp
	mov	edx, DWORD PTR tv209[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv212[ebp], eax
	lea	eax, DWORD PTR $T65475[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv213[ebp], eax
	lea	ecx, DWORD PTR $T65475[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T65474[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65473[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 187
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	mov	eax, DWORD PTR $T65465[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65469[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	lea	ecx, DWORD PTR $T65470[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5:
	lea	ecx, DWORD PTR $T65473[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6:
	lea	ecx, DWORD PTR $T65474[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-440]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceCmpWithZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceCmpWithZero::MakeOptimization
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CanBeApplied@ReplaceMulToZero@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv94 = -221						; size = 1
tv93 = -220						; size = 4
$T65493 = -212						; size = 4
_this$ = -8						; size = 4
_line$ = 8						; size = 4
?CanBeApplied@ReplaceMulToZero@@UAE_NPAVAsmCmd@@@Z PROC	; ReplaceMulToZero::CanBeApplied, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli@8
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65493[ebp], esp
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	BYTE PTR tv94[ebp], al
	movzx	eax, BYTE PTR tv94[ebp]
	test	eax, eax
	je	SHORT $LN3@CanBeAppli@8
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN4@CanBeAppli@8
$LN3@CanBeAppli@8:
	mov	DWORD PTR tv90[ebp], 0
$LN4@CanBeAppli@8:
	mov	al, BYTE PTR tv90[ebp]
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceMulToZero@@UAE_NPAVAsmCmd@@@Z ENDP	; ReplaceMulToZero::CanBeApplied
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv204 = -436						; size = 4
tv203 = -432						; size = 4
tv199 = -428						; size = 4
tv217 = -424						; size = 4
tv213 = -424						; size = 4
tv212 = -420						; size = 4
tv197 = -420						; size = 4
tv216 = -416						; size = 4
tv209 = -416						; size = 4
tv219 = -412						; size = 4
tv146 = -412						; size = 4
tv207 = -408						; size = 4
tv94 = -408						; size = 4
tv218 = -404						; size = 4
tv88 = -404						; size = 4
tv181 = -400						; size = 4
tv78 = -400						; size = 4
$T65499 = -392						; size = 4
$T65500 = -380						; size = 4
$T65501 = -368						; size = 4
$T65504 = -356						; size = 4
$T65505 = -344						; size = 12
$T65506 = -324						; size = 12
$T65507 = -304						; size = 12
$T65508 = -284						; size = 4
$T65509 = -272						; size = 12
$T65510 = -252						; size = 12
$T65511 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceMulToZero::MakeOptimization, COMDAT
; _this$ = ecx
; Line 195
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 424				; 000001a8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 196
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65501[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T65501[ebp], 0
	je	SHORT $LN3@MakeOptimi@7
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv88[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv88[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	19					; 00000013H
	mov	ecx, DWORD PTR $T65501[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN4@MakeOptimi@7
$LN3@MakeOptimi@7:
	mov	DWORD PTR tv94[ebp], 0
$LN4@MakeOptimi@7:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T65500[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T65500[ebp]
	mov	DWORD PTR $T65499[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv146[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65499[ebp]
	push	edx
	mov	eax, DWORD PTR tv146[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65506[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65505[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv216[ebp], eax
	mov	eax, DWORD PTR tv216[ebp]
	mov	DWORD PTR tv197[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv197[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv217[ebp], eax
	mov	ecx, DWORD PTR tv217[ebp]
	mov	DWORD PTR tv199[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65504[ebp], esp
	mov	edx, DWORD PTR tv199[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv203[ebp], eax
	lea	eax, DWORD PTR $T65507[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv204[ebp], eax
	lea	ecx, DWORD PTR $T65507[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65506[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65505[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 197
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv181[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv181[ebp]
	push	edx
	lea	eax, DWORD PTR $T65510[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65509[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv207[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv207[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv219[ebp], eax
	mov	eax, DWORD PTR tv219[ebp]
	mov	DWORD PTR tv209[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65508[ebp], esp
	mov	edx, DWORD PTR tv209[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv212[ebp], eax
	lea	eax, DWORD PTR $T65511[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv213[ebp], eax
	lea	ecx, DWORD PTR $T65511[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T65510[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65509[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 198
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	mov	eax, DWORD PTR $T65501[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65505[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	lea	ecx, DWORD PTR $T65506[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5:
	lea	ecx, DWORD PTR $T65509[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6:
	lea	ecx, DWORD PTR $T65510[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-440]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceMulToZero@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceMulToZero::MakeOptimization
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
EXTRN	_atoi:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z$1
__ehfuncinfo$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv82 = -348						; size = 4
tv140 = -344						; size = 4
tv136 = -344						; size = 4
tv143 = -340						; size = 4
tv141 = -340						; size = 4
tv129 = -340						; size = 4
$T46771 = -332						; size = 32
$T46785 = -292						; size = 32
$T65530 = -249						; size = 1
$T65533 = -240						; size = 4
_n$46784 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_line$ = 8						; size = 4
?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z PROC	; ReplaceIMUL::CanBeApplied, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65533[ebp], 0
; Line 202
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@CanBeAppli@9
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	esi, esp
	lea	edx, DWORD PTR $T46771[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T65533[ebp]
	or	edx, 1
	mov	DWORD PTR $T65533[ebp], edx
	mov	eax, DWORD PTR tv136[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@CanBeAppli@9
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN8@CanBeAppli@9
$LN7@CanBeAppli@9:
	mov	DWORD PTR tv82[ebp], 0
$LN8@CanBeAppli@9:
	mov	dl, BYTE PTR tv82[ebp]
	mov	BYTE PTR $T65530[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65533[ebp]
	and	eax, 1
	je	SHORT $LN11@CanBeAppli@9
	and	DWORD PTR $T65533[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T46771[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@CanBeAppli@9:
	movzx	ecx, BYTE PTR $T65530[ebp]
	test	ecx, ecx
	je	$LN4@CanBeAppli@9
; Line 204
	mov	esi, esp
	lea	eax, DWORD PTR $T46785[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv140[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv140[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _n$46784[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T46785[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 205
	mov	eax, DWORD PTR _n$46784[ebp]
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR tv129[ebp]
	sub	ecx, 3
	mov	DWORD PTR tv129[ebp], ecx
	cmp	DWORD PTR tv129[ebp], 15		; 0000000fH
	ja	SHORT $LN4@CanBeAppli@9
	mov	edx, DWORD PTR tv129[ebp]
	movzx	eax, BYTE PTR $LN13@CanBeAppli@9[edx]
	jmp	DWORD PTR $LN15@CanBeAppli@9[eax*4]
$LN1@CanBeAppli@9:
; Line 206
	mov	al, 1
	jmp	SHORT $LN5@CanBeAppli@9
$LN4@CanBeAppli@9:
; Line 209
	xor	al, al
$LN5@CanBeAppli@9:
; Line 210
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN15@CanBeAppli@9:
	DD	$LN1@CanBeAppli@9
	DD	$LN4@CanBeAppli@9
$LN13@CanBeAppli@9:
	DB	0
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z$0:
	mov	eax, DWORD PTR $T65533[ebp]
	and	eax, 1
	je	$LN10@CanBeAppli@9
	and	DWORD PTR $T65533[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T46771[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@CanBeAppli@9:
	ret	0
__unwindfunclet$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z$1:
	lea	ecx, DWORD PTR $T46785[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanBeApplied@ReplaceIMUL@@UAE_NPAVAsmCmd@@@Z ENDP	; ReplaceIMUL::CanBeApplied
PUBLIC	??_C@_07DIIAJBHN@?5?$CL?58?5?$CK?5?$AA@		; `string'
PUBLIC	??_C@_07PNHAHMHM@?5?$CL?54?5?$CK?5?$AA@		; `string'
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_01OHGJGJJP@?$FL?$AA@			; `string'
PUBLIC	??_C@_07HCDAIJNM@?5?$CL?52?5?$CK?5?$AA@		; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN?$AA@			; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_07DIIAJBHN@?5?$CL?58?5?$CK?5?$AA@
CONST	SEGMENT
??_C@_07DIIAJBHN@?5?$CL?58?5?$CK?5?$AA@ DB ' + 8 * ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PNHAHMHM@?5?$CL?54?5?$CK?5?$AA@
CONST	SEGMENT
??_C@_07PNHAHMHM@?5?$CL?54?5?$CK?5?$AA@ DB ' + 4 * ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01OHGJGJJP@?$FL?$AA@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL?$AA@ DB '[', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HCDAIJNM@?5?$CL?52?5?$CK?5?$AA@
CONST	SEGMENT
??_C@_07HCDAIJNM@?5?$CL?52?5?$CK?5?$AA@ DB ' + 2 * ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN?$AA@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN?$AA@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	042H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	05H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3
	DD	06H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4
	DD	07H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6
	DD	08H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11
	DD	0eH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12
	DD	0fH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$13
	DD	010H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$15
	DD	011H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$16
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$22
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$20
	DD	017H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$21
	DD	018H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$22
	DD	019H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$24
	DD	01aH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$25
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$28
	DD	01cH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$31
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$29
	DD	020H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$30
	DD	021H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$31
	DD	022H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$33
	DD	023H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$34
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$37
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$39
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$42
	DD	028H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$43
	DD	029H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$44
	DD	02aH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$45
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$43
	DD	02cH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$44
	DD	02dH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$45
	DD	02eH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$47
	DD	02fH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$48
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$51
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$52
	DD	032H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$53
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$56
	DD	034H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$57
	DD	035H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$58
	DD	036H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$59
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$57
	DD	038H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$58
	DD	039H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$59
	DD	03aH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$61
	DD	03bH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$62
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$65
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$66
	DD	03eH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$67
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$70
	DD	040H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$71
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv1111 = -2196						; size = 4
tv1065 = -2196						; size = 4
tv1019 = -2196						; size = 4
tv984 = -2196						; size = 4
tv949 = -2196						; size = 4
tv914 = -2196						; size = 4
tv1110 = -2192						; size = 4
tv1064 = -2192						; size = 4
tv1018 = -2192						; size = 4
tv983 = -2192						; size = 4
tv948 = -2192						; size = 4
tv913 = -2192						; size = 4
tv1106 = -2188						; size = 4
tv1060 = -2188						; size = 4
tv1014 = -2188						; size = 4
tv979 = -2188						; size = 4
tv944 = -2188						; size = 4
tv909 = -2188						; size = 4
tv1199 = -2184						; size = 4
tv1187 = -2184						; size = 4
tv1175 = -2184						; size = 4
tv1166 = -2184						; size = 4
tv1157 = -2184						; size = 4
tv1148 = -2184						; size = 4
tv1104 = -2180						; size = 4
tv1058 = -2180						; size = 4
tv1012 = -2180						; size = 4
tv977 = -2180						; size = 4
tv942 = -2180						; size = 4
tv907 = -2180						; size = 4
tv1198 = -2176						; size = 4
tv1186 = -2176						; size = 4
tv1174 = -2176						; size = 4
tv1165 = -2176						; size = 4
tv1156 = -2176						; size = 4
tv1147 = -2176						; size = 4
tv756 = -2172						; size = 4
tv628 = -2172						; size = 4
tv468 = -2172						; size = 4
tv386 = -2172						; size = 4
tv272 = -2172						; size = 4
tv190 = -2172						; size = 4
tv736 = -2168						; size = 4
tv608 = -2168						; size = 4
tv448 = -2168						; size = 4
tv366 = -2168						; size = 4
tv252 = -2168						; size = 4
tv170 = -2168						; size = 4
tv1128 = -2164						; size = 4
tv1102 = -2164						; size = 4
tv1082 = -2164						; size = 4
tv1056 = -2164						; size = 4
tv1036 = -2164						; size = 4
tv1010 = -2164						; size = 4
tv975 = -2164						; size = 4
tv940 = -2164						; size = 4
tv905 = -2164						; size = 4
tv1137 = -2160						; size = 4
tv1127 = -2160						; size = 4
tv1101 = -2160						; size = 4
tv1081 = -2160						; size = 4
tv1055 = -2160						; size = 4
tv1035 = -2160						; size = 4
tv1009 = -2160						; size = 4
tv974 = -2160						; size = 4
tv939 = -2160						; size = 4
tv904 = -2160						; size = 4
tv1136 = -2156						; size = 4
tv1123 = -2156						; size = 4
tv1099 = -2156						; size = 4
tv1077 = -2156						; size = 4
tv1053 = -2156						; size = 4
tv1031 = -2156						; size = 4
tv1007 = -2156						; size = 4
tv972 = -2156						; size = 4
tv937 = -2156						; size = 4
tv902 = -2156						; size = 4
tv1202 = -2152						; size = 4
tv1196 = -2152						; size = 4
tv1190 = -2152						; size = 4
tv1184 = -2152						; size = 4
tv1178 = -2152						; size = 4
tv1172 = -2152						; size = 4
tv1163 = -2152						; size = 4
tv1154 = -2152						; size = 4
tv1145 = -2152						; size = 4
tv1133 = -2152						; size = 4
tv1204 = -2148						; size = 4
tv1121 = -2148						; size = 4
tv1094 = -2148						; size = 4
tv1075 = -2148						; size = 4
tv1048 = -2148						; size = 4
tv1029 = -2148						; size = 4
tv1002 = -2148						; size = 4
tv967 = -2148						; size = 4
tv932 = -2148						; size = 4
tv897 = -2148						; size = 4
tv1201 = -2144						; size = 4
tv1194 = -2144						; size = 4
tv1189 = -2144						; size = 4
tv1182 = -2144						; size = 4
tv1177 = -2144						; size = 4
tv1170 = -2144						; size = 4
tv1161 = -2144						; size = 4
tv1152 = -2144						; size = 4
tv1143 = -2144						; size = 4
tv1131 = -2144						; size = 4
tv854 = -2144						; size = 4
tv1203 = -2140						; size = 4
tv1139 = -2140						; size = 4
tv1089 = -2140						; size = 4
tv1043 = -2140						; size = 4
tv997 = -2140						; size = 4
tv962 = -2140						; size = 4
tv927 = -2140						; size = 4
tv860 = -2140						; size = 4
tv802 = -2140						; size = 4
tv674 = -2140						; size = 4
tv514 = -2140						; size = 4
tv1192 = -2136						; size = 4
tv1180 = -2136						; size = 4
tv1168 = -2136						; size = 4
tv1159 = -2136						; size = 4
tv1150 = -2136						; size = 4
tv1141 = -2136						; size = 4
tv839 = -2136						; size = 4
tv782 = -2136						; size = 4
tv654 = -2136						; size = 4
tv494 = -2136						; size = 4
tv89 = -2136						; size = 4
tv85 = -2136						; size = 4
tv70 = -2136						; size = 4
$T65549 = -2128						; size = 4
$T65550 = -2116						; size = 4
$T65551 = -2104						; size = 4
$T65552 = -2092						; size = 4
$T65555 = -2080						; size = 4
$T65556 = -2068						; size = 12
$T65557 = -2048						; size = 12
$T65558 = -2028						; size = 12
$T65559 = -2008						; size = 4
$T65560 = -1996						; size = 4
$T65561 = -1984						; size = 4
$T65562 = -1972						; size = 4
$T65565 = -1960						; size = 4
$T65566 = -1948						; size = 12
$T65567 = -1928						; size = 12
$T65568 = -1908						; size = 12
$T65569 = -1888						; size = 4
$T65570 = -1876						; size = 4
$T65571 = -1864						; size = 4
$T65572 = -1852						; size = 4
$T65575 = -1840						; size = 4
$T65576 = -1828						; size = 12
$T65577 = -1808						; size = 12
$T65578 = -1788						; size = 12
$T65579 = -1768						; size = 4
$T65580 = -1756						; size = 4
$T65581 = -1744						; size = 4
$T65582 = -1732						; size = 4
$T65585 = -1720						; size = 4
$T65586 = -1708						; size = 12
$T65587 = -1688						; size = 12
$T65588 = -1668						; size = 12
$T65589 = -1648						; size = 4
$T65590 = -1636						; size = 4
$T65591 = -1624						; size = 4
$T65594 = -1612						; size = 4
$T65595 = -1600						; size = 12
$T65596 = -1580						; size = 12
$T65597 = -1560						; size = 12
$T65598 = -1540						; size = 4
$T65599 = -1528						; size = 4
$T65600 = -1516						; size = 4
$T65601 = -1504						; size = 4
$T65604 = -1492						; size = 4
$T65605 = -1480						; size = 12
$T65606 = -1460						; size = 12
$T65607 = -1440						; size = 12
$T65608 = -1420						; size = 4
$T65609 = -1408						; size = 4
$T65610 = -1396						; size = 4
$T65613 = -1384						; size = 4
$T65614 = -1372						; size = 12
$T65615 = -1352						; size = 12
$T65616 = -1332						; size = 12
$T65617 = -1312						; size = 4
$T65618 = -1300						; size = 4
$T65619 = -1288						; size = 4
$T65620 = -1276						; size = 4
$T65623 = -1264						; size = 4
$T65624 = -1252						; size = 12
$T65625 = -1232						; size = 12
$T65626 = -1212						; size = 12
$T65627 = -1192						; size = 4
$T65628 = -1180						; size = 4
$T65629 = -1168						; size = 4
$T65632 = -1156						; size = 4
$T65633 = -1144						; size = 12
$T65634 = -1124						; size = 12
$T65635 = -1104						; size = 12
$T65636 = -1084						; size = 4
$T65637 = -1072						; size = 12
$T65638 = -1052						; size = 12
$T65639 = -1032						; size = 12
$T65642 = -1012						; size = 4
$T46801 = -1000						; size = 32
$T46836 = -960						; size = 32
$T46863 = -920						; size = 32
$T46928 = -880						; size = 32
$T46943 = -840						; size = 32
$T46944 = -800						; size = 32
$T46945 = -760						; size = 32
$T46959 = -720						; size = 32
$T46960 = -680						; size = 32
$T46961 = -640						; size = 32
$T46975 = -600						; size = 32
$T46976 = -560						; size = 32
$T46977 = -520						; size = 32
$T46999 = -480						; size = 32
$T47000 = -440						; size = 32
$T47001 = -400						; size = 32
$T47023 = -360						; size = 32
$T47024 = -320						; size = 32
$T47025 = -280						; size = 32
_reg$ = -48						; size = 4
_n$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceIMUL::MakeOptimization, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2184				; 00000888H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-2196]
	mov	ecx, 546				; 00000222H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65642[ebp], 0
; Line 214
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv70[ebp], edx
	mov	esi, esp
	lea	eax, DWORD PTR $T46801[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1139[ebp], eax
	mov	ecx, DWORD PTR tv1139[ebp]
	mov	DWORD PTR tv854[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv854[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _n$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T46801[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 215
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv85[ebp], edx
	mov	eax, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv85[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _reg$[ebp], eax
; Line 216
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	sub	ecx, 3
	mov	DWORD PTR tv89[ebp], ecx
	cmp	DWORD PTR tv89[ebp], 15			; 0000000fH
	ja	$LN7@MakeOptimi@8
	mov	edx, DWORD PTR tv89[ebp]
	movzx	eax, BYTE PTR $LN139@MakeOptimi@8[edx]
	jmp	DWORD PTR $LN141@MakeOptimi@8[eax*4]
$LN6@MakeOptimi@8:
; Line 218
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65551[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T65551[ebp], 0
	je	$LN11@MakeOptimi@8
	sub	esp, 32					; 00000020H
	mov	esi, esp
	mov	DWORD PTR $T65552[ebp], esp
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	mov	eax, DWORD PTR _reg$[ebp]
	shl	eax, 5
	add	eax, OFFSET _REG_STR
	push	eax
	push	OFFSET ??_C@_07HCDAIJNM@?5?$CL?52?5?$CK?5?$AA@
	mov	ecx, DWORD PTR _reg$[ebp]
	shl	ecx, 5
	add	ecx, OFFSET _REG_STR
	push	ecx
	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	lea	edx, DWORD PTR $T46836[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1141[ebp], eax
	mov	eax, DWORD PTR tv1141[ebp]
	mov	DWORD PTR tv860[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T65642[ebp]
	or	ecx, 1
	mov	DWORD PTR $T65642[ebp], ecx
	mov	edx, DWORD PTR tv860[ebp]
	push	edx
	lea	eax, DWORD PTR $T46863[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1143[ebp], eax
	mov	ecx, DWORD PTR tv1143[ebp]
	mov	DWORD PTR tv897[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T65642[ebp]
	or	edx, 2
	mov	DWORD PTR $T65642[ebp], edx
	mov	eax, DWORD PTR tv897[ebp]
	push	eax
	lea	ecx, DWORD PTR $T46928[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1145[ebp], eax
	mov	edx, DWORD PTR tv1145[ebp]
	mov	DWORD PTR tv902[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR $T65642[ebp]
	or	eax, 4
	mov	DWORD PTR $T65642[ebp], eax
	mov	ecx, DWORD PTR tv902[ebp]
	push	ecx
	push	esi
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv904[ebp], eax
	mov	edx, DWORD PTR _reg$[ebp]
	push	edx
	push	49					; 00000031H
	mov	ecx, DWORD PTR $T65551[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv905[ebp], eax
	mov	eax, DWORD PTR tv905[ebp]
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN12@MakeOptimi@8
$LN11@MakeOptimi@8:
	mov	DWORD PTR tv170[ebp], 0
$LN12@MakeOptimi@8:
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T65550[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR $T65550[ebp]
	mov	DWORD PTR $T65549[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv190[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65549[ebp]
	push	edx
	mov	eax, DWORD PTR tv190[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65557[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65556[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1147[ebp], eax
	mov	eax, DWORD PTR tv1147[ebp]
	mov	DWORD PTR tv907[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv907[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1148[ebp], eax
	mov	ecx, DWORD PTR tv1148[ebp]
	mov	DWORD PTR tv909[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65555[ebp], esp
	mov	edx, DWORD PTR tv909[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv913[ebp], eax
	lea	eax, DWORD PTR $T65558[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv914[ebp], eax
	lea	ecx, DWORD PTR $T65558[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T65557[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T65556[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR $T65642[ebp]
	and	ecx, 4
	je	SHORT $LN42@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T46928[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN42@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR $T65642[ebp]
	and	edx, 2
	je	SHORT $LN43@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T46863[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN43@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 1
	je	SHORT $LN5@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T46836[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@MakeOptimi@8:
; Line 219
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65561[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T65561[ebp], 0
	je	$LN13@MakeOptimi@8
	sub	esp, 32					; 00000020H
	mov	esi, esp
	mov	DWORD PTR $T65562[ebp], esp
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	mov	eax, DWORD PTR _reg$[ebp]
	shl	eax, 5
	add	eax, OFFSET _REG_STR
	push	eax
	push	OFFSET ??_C@_07PNHAHMHM@?5?$CL?54?5?$CK?5?$AA@
	mov	ecx, DWORD PTR _reg$[ebp]
	shl	ecx, 5
	add	ecx, OFFSET _REG_STR
	push	ecx
	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	lea	edx, DWORD PTR $T46943[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1150[ebp], eax
	mov	eax, DWORD PTR tv1150[ebp]
	mov	DWORD PTR tv927[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR $T65642[ebp]
	or	ecx, 8
	mov	DWORD PTR $T65642[ebp], ecx
	mov	edx, DWORD PTR tv927[ebp]
	push	edx
	lea	eax, DWORD PTR $T46944[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1152[ebp], eax
	mov	ecx, DWORD PTR tv1152[ebp]
	mov	DWORD PTR tv932[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR $T65642[ebp]
	or	edx, 16					; 00000010H
	mov	DWORD PTR $T65642[ebp], edx
	mov	eax, DWORD PTR tv932[ebp]
	push	eax
	lea	ecx, DWORD PTR $T46945[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1154[ebp], eax
	mov	edx, DWORD PTR tv1154[ebp]
	mov	DWORD PTR tv937[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	eax, DWORD PTR $T65642[ebp]
	or	eax, 32					; 00000020H
	mov	DWORD PTR $T65642[ebp], eax
	mov	ecx, DWORD PTR tv937[ebp]
	push	ecx
	push	esi
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv939[ebp], eax
	mov	edx, DWORD PTR _reg$[ebp]
	push	edx
	push	49					; 00000031H
	mov	ecx, DWORD PTR $T65561[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv940[ebp], eax
	mov	eax, DWORD PTR tv940[ebp]
	mov	DWORD PTR tv252[ebp], eax
	jmp	SHORT $LN14@MakeOptimi@8
$LN13@MakeOptimi@8:
	mov	DWORD PTR tv252[ebp], 0
$LN14@MakeOptimi@8:
	mov	ecx, DWORD PTR tv252[ebp]
	mov	DWORD PTR $T65560[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR $T65560[ebp]
	mov	DWORD PTR $T65559[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv272[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65559[ebp]
	push	edx
	mov	eax, DWORD PTR tv272[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65567[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65566[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1156[ebp], eax
	mov	eax, DWORD PTR tv1156[ebp]
	mov	DWORD PTR tv942[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR tv942[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1157[ebp], eax
	mov	ecx, DWORD PTR tv1157[ebp]
	mov	DWORD PTR tv944[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65565[ebp], esp
	mov	edx, DWORD PTR tv944[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv948[ebp], eax
	lea	eax, DWORD PTR $T65568[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv949[ebp], eax
	lea	ecx, DWORD PTR $T65568[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T65567[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T65566[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR $T65642[ebp]
	and	ecx, 32					; 00000020H
	je	SHORT $LN57@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -33		; ffffffdfH
	lea	ecx, DWORD PTR $T46945[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN57@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR $T65642[ebp]
	and	edx, 16					; 00000010H
	je	SHORT $LN58@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -17		; ffffffefH
	lea	ecx, DWORD PTR $T46944[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN58@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 8
	je	SHORT $LN4@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -9		; fffffff7H
	lea	ecx, DWORD PTR $T46943[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@MakeOptimi@8:
; Line 220
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65571[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 19		; 00000013H
	cmp	DWORD PTR $T65571[ebp], 0
	je	$LN15@MakeOptimi@8
	sub	esp, 32					; 00000020H
	mov	esi, esp
	mov	DWORD PTR $T65572[ebp], esp
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	mov	eax, DWORD PTR _reg$[ebp]
	shl	eax, 5
	add	eax, OFFSET _REG_STR
	push	eax
	push	OFFSET ??_C@_07DIIAJBHN@?5?$CL?58?5?$CK?5?$AA@
	mov	ecx, DWORD PTR _reg$[ebp]
	shl	ecx, 5
	add	ecx, OFFSET _REG_STR
	push	ecx
	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	lea	edx, DWORD PTR $T46959[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1159[ebp], eax
	mov	eax, DWORD PTR tv1159[ebp]
	mov	DWORD PTR tv962[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	ecx, DWORD PTR $T65642[ebp]
	or	ecx, 64					; 00000040H
	mov	DWORD PTR $T65642[ebp], ecx
	mov	edx, DWORD PTR tv962[ebp]
	push	edx
	lea	eax, DWORD PTR $T46960[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1161[ebp], eax
	mov	ecx, DWORD PTR tv1161[ebp]
	mov	DWORD PTR tv967[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR $T65642[ebp]
	or	edx, 128				; 00000080H
	mov	DWORD PTR $T65642[ebp], edx
	mov	eax, DWORD PTR tv967[ebp]
	push	eax
	lea	ecx, DWORD PTR $T46961[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1163[ebp], eax
	mov	edx, DWORD PTR tv1163[ebp]
	mov	DWORD PTR tv972[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	eax, DWORD PTR $T65642[ebp]
	or	eax, 256				; 00000100H
	mov	DWORD PTR $T65642[ebp], eax
	mov	ecx, DWORD PTR tv972[ebp]
	push	ecx
	push	esi
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv974[ebp], eax
	mov	edx, DWORD PTR _reg$[ebp]
	push	edx
	push	49					; 00000031H
	mov	ecx, DWORD PTR $T65571[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv975[ebp], eax
	mov	eax, DWORD PTR tv975[ebp]
	mov	DWORD PTR tv366[ebp], eax
	jmp	SHORT $LN16@MakeOptimi@8
$LN15@MakeOptimi@8:
	mov	DWORD PTR tv366[ebp], 0
$LN16@MakeOptimi@8:
	mov	ecx, DWORD PTR tv366[ebp]
	mov	DWORD PTR $T65570[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	edx, DWORD PTR $T65570[ebp]
	mov	DWORD PTR $T65569[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv386[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65569[ebp]
	push	edx
	mov	eax, DWORD PTR tv386[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65577[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65576[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1165[ebp], eax
	mov	eax, DWORD PTR tv1165[ebp]
	mov	DWORD PTR tv977[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	ecx, DWORD PTR tv977[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1166[ebp], eax
	mov	ecx, DWORD PTR tv1166[ebp]
	mov	DWORD PTR tv979[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65575[ebp], esp
	mov	edx, DWORD PTR tv979[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv983[ebp], eax
	lea	eax, DWORD PTR $T65578[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv984[ebp], eax
	lea	ecx, DWORD PTR $T65578[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T65577[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T65576[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	ecx, DWORD PTR $T65642[ebp]
	and	ecx, 256				; 00000100H
	je	SHORT $LN72@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -257		; fffffeffH
	lea	ecx, DWORD PTR $T46961[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN72@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR $T65642[ebp]
	and	edx, 128				; 00000080H
	je	SHORT $LN73@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -129		; ffffff7fH
	lea	ecx, DWORD PTR $T46960[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN73@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 64					; 00000040H
	je	SHORT $LN3@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -65		; ffffffbfH
	lea	ecx, DWORD PTR $T46959[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@MakeOptimi@8:
; Line 223
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65581[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 28		; 0000001cH
	cmp	DWORD PTR $T65581[ebp], 0
	je	$LN17@MakeOptimi@8
	sub	esp, 32					; 00000020H
	mov	esi, esp
	mov	DWORD PTR $T65582[ebp], esp
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	mov	eax, DWORD PTR _reg$[ebp]
	shl	eax, 5
	add	eax, OFFSET _REG_STR
	push	eax
	push	OFFSET ??_C@_07HCDAIJNM@?5?$CL?52?5?$CK?5?$AA@
	mov	ecx, DWORD PTR _reg$[ebp]
	shl	ecx, 5
	add	ecx, OFFSET _REG_STR
	push	ecx
	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	lea	edx, DWORD PTR $T46975[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1168[ebp], eax
	mov	eax, DWORD PTR tv1168[ebp]
	mov	DWORD PTR tv997[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR $T65642[ebp]
	or	ecx, 512				; 00000200H
	mov	DWORD PTR $T65642[ebp], ecx
	mov	edx, DWORD PTR tv997[ebp]
	push	edx
	lea	eax, DWORD PTR $T46976[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1170[ebp], eax
	mov	ecx, DWORD PTR tv1170[ebp]
	mov	DWORD PTR tv1002[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	edx, DWORD PTR $T65642[ebp]
	or	edx, 1024				; 00000400H
	mov	DWORD PTR $T65642[ebp], edx
	mov	eax, DWORD PTR tv1002[ebp]
	push	eax
	lea	ecx, DWORD PTR $T46977[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1172[ebp], eax
	mov	edx, DWORD PTR tv1172[ebp]
	mov	DWORD PTR tv1007[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	eax, DWORD PTR $T65642[ebp]
	or	eax, 2048				; 00000800H
	mov	DWORD PTR $T65642[ebp], eax
	mov	ecx, DWORD PTR tv1007[ebp]
	push	ecx
	push	esi
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1009[ebp], eax
	mov	edx, DWORD PTR _reg$[ebp]
	push	edx
	push	49					; 00000031H
	mov	ecx, DWORD PTR $T65581[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv1010[ebp], eax
	mov	eax, DWORD PTR tv1010[ebp]
	mov	DWORD PTR tv448[ebp], eax
	jmp	SHORT $LN18@MakeOptimi@8
$LN17@MakeOptimi@8:
	mov	DWORD PTR tv448[ebp], 0
$LN18@MakeOptimi@8:
	mov	ecx, DWORD PTR tv448[ebp]
	mov	DWORD PTR $T65580[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	edx, DWORD PTR $T65580[ebp]
	mov	DWORD PTR $T65579[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv468[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65579[ebp]
	push	edx
	mov	eax, DWORD PTR tv468[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65587[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65586[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1174[ebp], eax
	mov	eax, DWORD PTR tv1174[ebp]
	mov	DWORD PTR tv1012[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	ecx, DWORD PTR tv1012[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1175[ebp], eax
	mov	ecx, DWORD PTR tv1175[ebp]
	mov	DWORD PTR tv1014[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65585[ebp], esp
	mov	edx, DWORD PTR tv1014[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv1018[ebp], eax
	lea	eax, DWORD PTR $T65588[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv1019[ebp], eax
	lea	ecx, DWORD PTR $T65588[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T65587[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T65586[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR $T65642[ebp]
	and	ecx, 2048				; 00000800H
	je	SHORT $LN87@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -2049		; fffff7ffH
	lea	ecx, DWORD PTR $T46977[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN87@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	edx, DWORD PTR $T65642[ebp]
	and	edx, 1024				; 00000400H
	je	SHORT $LN88@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -1025		; fffffbffH
	lea	ecx, DWORD PTR $T46976[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN88@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 512				; 00000200H
	je	SHORT $LN89@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -513		; fffffdffH
	lea	ecx, DWORD PTR $T46975[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN89@MakeOptimi@8:
; Line 224
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65591[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 37		; 00000025H
	cmp	DWORD PTR $T65591[ebp], 0
	je	SHORT $LN19@MakeOptimi@8
	mov	eax, DWORD PTR _reg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _reg$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR $T65591[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv494[ebp], eax
	jmp	SHORT $LN20@MakeOptimi@8
$LN19@MakeOptimi@8:
	mov	DWORD PTR tv494[ebp], 0
$LN20@MakeOptimi@8:
	mov	edx, DWORD PTR tv494[ebp]
	mov	DWORD PTR $T65590[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65590[ebp]
	mov	DWORD PTR $T65589[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv514[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx], ecx
	lea	eax, DWORD PTR $T65589[ebp]
	push	eax
	mov	ecx, DWORD PTR tv514[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65596[ebp]
	push	edx
	lea	eax, DWORD PTR $T65595[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1177[ebp], eax
	mov	ecx, DWORD PTR tv1177[ebp]
	mov	DWORD PTR tv1029[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	ecx, DWORD PTR tv1029[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1178[ebp], eax
	mov	edx, DWORD PTR tv1178[ebp]
	mov	DWORD PTR tv1031[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65594[ebp], esp
	mov	eax, DWORD PTR tv1031[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv1035[ebp], eax
	lea	ecx, DWORD PTR $T65597[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv1036[ebp], eax
	lea	ecx, DWORD PTR $T65597[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T65596[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65595[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN2@MakeOptimi@8:
; Line 228
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65600[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 40		; 00000028H
	cmp	DWORD PTR $T65600[ebp], 0
	je	$LN21@MakeOptimi@8
	sub	esp, 32					; 00000020H
	mov	esi, esp
	mov	DWORD PTR $T65601[ebp], esp
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	mov	eax, DWORD PTR _reg$[ebp]
	shl	eax, 5
	add	eax, OFFSET _REG_STR
	push	eax
	push	OFFSET ??_C@_07PNHAHMHM@?5?$CL?54?5?$CK?5?$AA@
	mov	ecx, DWORD PTR _reg$[ebp]
	shl	ecx, 5
	add	ecx, OFFSET _REG_STR
	push	ecx
	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	lea	edx, DWORD PTR $T46999[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1180[ebp], eax
	mov	eax, DWORD PTR tv1180[ebp]
	mov	DWORD PTR tv1043[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	ecx, DWORD PTR $T65642[ebp]
	or	ecx, 4096				; 00001000H
	mov	DWORD PTR $T65642[ebp], ecx
	mov	edx, DWORD PTR tv1043[ebp]
	push	edx
	lea	eax, DWORD PTR $T47000[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1182[ebp], eax
	mov	ecx, DWORD PTR tv1182[ebp]
	mov	DWORD PTR tv1048[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	edx, DWORD PTR $T65642[ebp]
	or	edx, 8192				; 00002000H
	mov	DWORD PTR $T65642[ebp], edx
	mov	eax, DWORD PTR tv1048[ebp]
	push	eax
	lea	ecx, DWORD PTR $T47001[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1184[ebp], eax
	mov	edx, DWORD PTR tv1184[ebp]
	mov	DWORD PTR tv1053[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	eax, DWORD PTR $T65642[ebp]
	or	eax, 16384				; 00004000H
	mov	DWORD PTR $T65642[ebp], eax
	mov	ecx, DWORD PTR tv1053[ebp]
	push	ecx
	push	esi
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1055[ebp], eax
	mov	edx, DWORD PTR _reg$[ebp]
	push	edx
	push	49					; 00000031H
	mov	ecx, DWORD PTR $T65600[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv1056[ebp], eax
	mov	eax, DWORD PTR tv1056[ebp]
	mov	DWORD PTR tv608[ebp], eax
	jmp	SHORT $LN22@MakeOptimi@8
$LN21@MakeOptimi@8:
	mov	DWORD PTR tv608[ebp], 0
$LN22@MakeOptimi@8:
	mov	ecx, DWORD PTR tv608[ebp]
	mov	DWORD PTR $T65599[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 46		; 0000002eH
	mov	edx, DWORD PTR $T65599[ebp]
	mov	DWORD PTR $T65598[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv628[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65598[ebp]
	push	edx
	mov	eax, DWORD PTR tv628[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65606[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65605[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1186[ebp], eax
	mov	eax, DWORD PTR tv1186[ebp]
	mov	DWORD PTR tv1058[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	ecx, DWORD PTR tv1058[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1187[ebp], eax
	mov	ecx, DWORD PTR tv1187[ebp]
	mov	DWORD PTR tv1060[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65604[ebp], esp
	mov	edx, DWORD PTR tv1060[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv1064[ebp], eax
	lea	eax, DWORD PTR $T65607[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv1065[ebp], eax
	lea	ecx, DWORD PTR $T65607[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T65606[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T65605[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	ecx, DWORD PTR $T65642[ebp]
	and	ecx, 16384				; 00004000H
	je	SHORT $LN107@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -16385		; ffffbfffH
	lea	ecx, DWORD PTR $T47001[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN107@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	edx, DWORD PTR $T65642[ebp]
	and	edx, 8192				; 00002000H
	je	SHORT $LN108@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -8193		; ffffdfffH
	lea	ecx, DWORD PTR $T47000[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN108@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 4096				; 00001000H
	je	SHORT $LN109@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -4097		; ffffefffH
	lea	ecx, DWORD PTR $T46999[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN109@MakeOptimi@8:
; Line 229
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65610[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 49		; 00000031H
	cmp	DWORD PTR $T65610[ebp], 0
	je	SHORT $LN23@MakeOptimi@8
	mov	eax, DWORD PTR _reg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _reg$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR $T65610[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv654[ebp], eax
	jmp	SHORT $LN24@MakeOptimi@8
$LN23@MakeOptimi@8:
	mov	DWORD PTR tv654[ebp], 0
$LN24@MakeOptimi@8:
	mov	edx, DWORD PTR tv654[ebp]
	mov	DWORD PTR $T65609[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65609[ebp]
	mov	DWORD PTR $T65608[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv674[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx], ecx
	lea	eax, DWORD PTR $T65608[ebp]
	push	eax
	mov	ecx, DWORD PTR tv674[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65615[ebp]
	push	edx
	lea	eax, DWORD PTR $T65614[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1189[ebp], eax
	mov	ecx, DWORD PTR tv1189[ebp]
	mov	DWORD PTR tv1075[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 50		; 00000032H
	mov	ecx, DWORD PTR tv1075[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1190[ebp], eax
	mov	edx, DWORD PTR tv1190[ebp]
	mov	DWORD PTR tv1077[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65613[ebp], esp
	mov	eax, DWORD PTR tv1077[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv1081[ebp], eax
	lea	ecx, DWORD PTR $T65616[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv1082[ebp], eax
	lea	ecx, DWORD PTR $T65616[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T65615[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65614[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN1@MakeOptimi@8:
; Line 233
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65619[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 52		; 00000034H
	cmp	DWORD PTR $T65619[ebp], 0
	je	$LN25@MakeOptimi@8
	sub	esp, 32					; 00000020H
	mov	esi, esp
	mov	DWORD PTR $T65620[ebp], esp
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	mov	eax, DWORD PTR _reg$[ebp]
	shl	eax, 5
	add	eax, OFFSET _REG_STR
	push	eax
	push	OFFSET ??_C@_07DIIAJBHN@?5?$CL?58?5?$CK?5?$AA@
	mov	ecx, DWORD PTR _reg$[ebp]
	shl	ecx, 5
	add	ecx, OFFSET _REG_STR
	push	ecx
	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	lea	edx, DWORD PTR $T47023[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1192[ebp], eax
	mov	eax, DWORD PTR tv1192[ebp]
	mov	DWORD PTR tv1089[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	ecx, DWORD PTR $T65642[ebp]
	or	ecx, 32768				; 00008000H
	mov	DWORD PTR $T65642[ebp], ecx
	mov	edx, DWORD PTR tv1089[ebp]
	push	edx
	lea	eax, DWORD PTR $T47024[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1194[ebp], eax
	mov	ecx, DWORD PTR tv1194[ebp]
	mov	DWORD PTR tv1094[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	edx, DWORD PTR $T65642[ebp]
	or	edx, 65536				; 00010000H
	mov	DWORD PTR $T65642[ebp], edx
	mov	eax, DWORD PTR tv1094[ebp]
	push	eax
	lea	ecx, DWORD PTR $T47025[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1196[ebp], eax
	mov	edx, DWORD PTR tv1196[ebp]
	mov	DWORD PTR tv1099[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	eax, DWORD PTR $T65642[ebp]
	or	eax, 131072				; 00020000H
	mov	DWORD PTR $T65642[ebp], eax
	mov	ecx, DWORD PTR tv1099[ebp]
	push	ecx
	push	esi
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1101[ebp], eax
	mov	edx, DWORD PTR _reg$[ebp]
	push	edx
	push	49					; 00000031H
	mov	ecx, DWORD PTR $T65619[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv1102[ebp], eax
	mov	eax, DWORD PTR tv1102[ebp]
	mov	DWORD PTR tv736[ebp], eax
	jmp	SHORT $LN26@MakeOptimi@8
$LN25@MakeOptimi@8:
	mov	DWORD PTR tv736[ebp], 0
$LN26@MakeOptimi@8:
	mov	ecx, DWORD PTR tv736[ebp]
	mov	DWORD PTR $T65618[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	edx, DWORD PTR $T65618[ebp]
	mov	DWORD PTR $T65617[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv756[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65617[ebp]
	push	edx
	mov	eax, DWORD PTR tv756[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65625[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65624[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1198[ebp], eax
	mov	eax, DWORD PTR tv1198[ebp]
	mov	DWORD PTR tv1104[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	ecx, DWORD PTR tv1104[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1199[ebp], eax
	mov	ecx, DWORD PTR tv1199[ebp]
	mov	DWORD PTR tv1106[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65623[ebp], esp
	mov	edx, DWORD PTR tv1106[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv1110[ebp], eax
	lea	eax, DWORD PTR $T65626[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv1111[ebp], eax
	lea	ecx, DWORD PTR $T65626[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR $T65625[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T65624[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	ecx, DWORD PTR $T65642[ebp]
	and	ecx, 131072				; 00020000H
	je	SHORT $LN127@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -131073		; fffdffffH
	lea	ecx, DWORD PTR $T47025[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN127@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], 56		; 00000038H
	mov	edx, DWORD PTR $T65642[ebp]
	and	edx, 65536				; 00010000H
	je	SHORT $LN128@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -65537		; fffeffffH
	lea	ecx, DWORD PTR $T47024[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN128@MakeOptimi@8:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 32768				; 00008000H
	je	SHORT $LN129@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -32769		; ffff7fffH
	lea	ecx, DWORD PTR $T47023[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN129@MakeOptimi@8:
; Line 234
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65629[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 61		; 0000003dH
	cmp	DWORD PTR $T65629[ebp], 0
	je	SHORT $LN27@MakeOptimi@8
	mov	eax, DWORD PTR _reg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _reg$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR $T65629[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv782[ebp], eax
	jmp	SHORT $LN28@MakeOptimi@8
$LN27@MakeOptimi@8:
	mov	DWORD PTR tv782[ebp], 0
$LN28@MakeOptimi@8:
	mov	edx, DWORD PTR tv782[ebp]
	mov	DWORD PTR $T65628[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T65628[ebp]
	mov	DWORD PTR $T65627[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv802[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx], ecx
	lea	eax, DWORD PTR $T65627[ebp]
	push	eax
	mov	ecx, DWORD PTR tv802[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65634[ebp]
	push	edx
	lea	eax, DWORD PTR $T65633[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1201[ebp], eax
	mov	ecx, DWORD PTR tv1201[ebp]
	mov	DWORD PTR tv1121[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	ecx, DWORD PTR tv1121[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1202[ebp], eax
	mov	edx, DWORD PTR tv1202[ebp]
	mov	DWORD PTR tv1123[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65632[ebp], esp
	mov	eax, DWORD PTR tv1123[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv1127[ebp], eax
	lea	ecx, DWORD PTR $T65635[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv1128[ebp], eax
	lea	ecx, DWORD PTR $T65635[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR $T65634[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65633[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN7@MakeOptimi@8:
; Line 238
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv839[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv839[ebp]
	push	edx
	lea	eax, DWORD PTR $T65638[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65637[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv1203[ebp], eax
	mov	edx, DWORD PTR tv1203[ebp]
	mov	DWORD PTR tv1131[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	ecx, DWORD PTR tv1131[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv1204[ebp], eax
	mov	eax, DWORD PTR tv1204[ebp]
	mov	DWORD PTR tv1133[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65636[ebp], esp
	mov	edx, DWORD PTR tv1133[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv1136[ebp], eax
	lea	eax, DWORD PTR $T65639[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv1137[ebp], eax
	lea	ecx, DWORD PTR $T65639[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T65638[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65637[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 239
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2196				; 00000894H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN141@MakeOptimi@8:
	DD	$LN6@MakeOptimi@8
	DD	$LN5@MakeOptimi@8
	DD	$LN3@MakeOptimi@8
	DD	$LN4@MakeOptimi@8
	DD	$LN2@MakeOptimi@8
	DD	$LN1@MakeOptimi@8
	DD	$LN7@MakeOptimi@8
$LN139@MakeOptimi@8:
	DB	0
	DB	6
	DB	1
	DB	2
	DB	6
	DB	6
	DB	3
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	lea	ecx, DWORD PTR $T46801[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	mov	eax, DWORD PTR $T65551[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 1
	je	$LN32@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T46836[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN32@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 2
	je	$LN34@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T46863[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN34@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 4
	je	$LN36@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T46928[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN36@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$6:
	lea	ecx, DWORD PTR $T65556[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7:
	lea	ecx, DWORD PTR $T65557[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$10:
	mov	eax, DWORD PTR $T65561[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 8
	je	$LN47@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -9		; fffffff7H
	lea	ecx, DWORD PTR $T46943[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN47@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 16					; 00000010H
	je	$LN49@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -17		; ffffffefH
	lea	ecx, DWORD PTR $T46944[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN49@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$13:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 32					; 00000020H
	je	$LN51@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -33		; ffffffdfH
	lea	ecx, DWORD PTR $T46945[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN51@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$15:
	lea	ecx, DWORD PTR $T65566[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$16:
	lea	ecx, DWORD PTR $T65567[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$19:
	mov	eax, DWORD PTR $T65571[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$20:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 64					; 00000040H
	je	$LN62@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -65		; ffffffbfH
	lea	ecx, DWORD PTR $T46959[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN62@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$21:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 128				; 00000080H
	je	$LN64@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -129		; ffffff7fH
	lea	ecx, DWORD PTR $T46960[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN64@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$22:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 256				; 00000100H
	je	$LN66@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -257		; fffffeffH
	lea	ecx, DWORD PTR $T46961[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN66@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$24:
	lea	ecx, DWORD PTR $T65576[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$25:
	lea	ecx, DWORD PTR $T65577[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$28:
	mov	eax, DWORD PTR $T65581[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$29:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 512				; 00000200H
	je	$LN77@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -513		; fffffdffH
	lea	ecx, DWORD PTR $T46975[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN77@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$30:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 1024				; 00000400H
	je	$LN79@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -1025		; fffffbffH
	lea	ecx, DWORD PTR $T46976[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN79@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$31:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 2048				; 00000800H
	je	$LN81@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -2049		; fffff7ffH
	lea	ecx, DWORD PTR $T46977[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN81@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$33:
	lea	ecx, DWORD PTR $T65586[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$34:
	lea	ecx, DWORD PTR $T65587[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$37:
	mov	eax, DWORD PTR $T65591[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$38:
	lea	ecx, DWORD PTR $T65595[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$39:
	lea	ecx, DWORD PTR $T65596[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$42:
	mov	eax, DWORD PTR $T65600[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$43:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 4096				; 00001000H
	je	$LN97@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -4097		; ffffefffH
	lea	ecx, DWORD PTR $T46999[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN97@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$44:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 8192				; 00002000H
	je	$LN99@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -8193		; ffffdfffH
	lea	ecx, DWORD PTR $T47000[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN99@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$45:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 16384				; 00004000H
	je	$LN101@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -16385		; ffffbfffH
	lea	ecx, DWORD PTR $T47001[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN101@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$47:
	lea	ecx, DWORD PTR $T65605[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$48:
	lea	ecx, DWORD PTR $T65606[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$51:
	mov	eax, DWORD PTR $T65610[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$52:
	lea	ecx, DWORD PTR $T65614[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$53:
	lea	ecx, DWORD PTR $T65615[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$56:
	mov	eax, DWORD PTR $T65619[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$57:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 32768				; 00008000H
	je	$LN117@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -32769		; ffff7fffH
	lea	ecx, DWORD PTR $T47023[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN117@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$58:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 65536				; 00010000H
	je	$LN119@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -65537		; fffeffffH
	lea	ecx, DWORD PTR $T47024[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN119@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$59:
	mov	eax, DWORD PTR $T65642[ebp]
	and	eax, 131072				; 00020000H
	je	$LN121@MakeOptimi@8
	and	DWORD PTR $T65642[ebp], -131073		; fffdffffH
	lea	ecx, DWORD PTR $T47025[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN121@MakeOptimi@8:
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$61:
	lea	ecx, DWORD PTR $T65624[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$62:
	lea	ecx, DWORD PTR $T65625[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$65:
	mov	eax, DWORD PTR $T65629[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$66:
	lea	ecx, DWORD PTR $T65633[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$67:
	lea	ecx, DWORD PTR $T65634[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$70:
	lea	ecx, DWORD PTR $T65637[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$71:
	lea	ecx, DWORD PTR $T65638[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2200]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceIMUL@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceIMUL::MakeOptimization
PUBLIC	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z$1
__ehfuncinfo$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv161 = -344						; size = 4
tv172 = -340						; size = 4
tv179 = -336						; size = 4
tv167 = -332						; size = 4
tv177 = -328						; size = 4
$T65762 = -317						; size = 1
$T65766 = -308						; size = 4
$T47068 = -296						; size = 32
$T47069 = -256						; size = 32
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lines$ = 8						; size = 4
?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z PROC	; DeletePushPop::CanBeApplied, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65766[ebp], 0
; Line 244
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@CanBeAppli@10
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@CanBeAppli@10
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jne	$LN3@CanBeAppli@10
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	$LN4@CanBeAppli@10
	mov	esi, esp
	lea	ecx, DWORD PTR $T47069[ebp]
	push	ecx
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv177[ebp], eax
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR tv167[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T65766[ebp]
	or	edx, 1
	mov	DWORD PTR $T65766[ebp], edx
	mov	eax, DWORD PTR tv167[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR $T47068[ebp]
	push	ecx
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv179[ebp], eax
	mov	ecx, DWORD PTR tv179[ebp]
	mov	DWORD PTR tv172[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T65766[ebp]
	or	edx, 2
	mov	DWORD PTR $T65766[ebp], edx
	mov	eax, DWORD PTR tv172[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@CanBeAppli@10
$LN4@CanBeAppli@10:
	mov	DWORD PTR tv161[ebp], 1
	jmp	SHORT $LN5@CanBeAppli@10
$LN3@CanBeAppli@10:
	mov	DWORD PTR tv161[ebp], 0
$LN5@CanBeAppli@10:
	mov	dl, BYTE PTR tv161[ebp]
	mov	BYTE PTR $T65762[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T65766[ebp]
	and	eax, 2
	je	SHORT $LN10@CanBeAppli@10
	and	DWORD PTR $T65766[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T47068[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@CanBeAppli@10:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T65766[ebp]
	and	ecx, 1
	je	SHORT $LN11@CanBeAppli@10
	and	DWORD PTR $T65766[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T47069[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@CanBeAppli@10:
	mov	al, BYTE PTR $T65762[ebp]
; Line 245
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z$0:
	mov	eax, DWORD PTR $T65766[ebp]
	and	eax, 1
	je	$LN7@CanBeAppli@10
	and	DWORD PTR $T65766[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T47069[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@CanBeAppli@10:
	ret	0
__unwindfunclet$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z$1:
	mov	eax, DWORD PTR $T65766[ebp]
	and	eax, 2
	je	$LN9@CanBeAppli@10
	and	DWORD PTR $T65766[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T47068[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@CanBeAppli@10:
	ret	0
__ehhandler$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanBeApplied@DeletePushPop@@UAE_NQAPAVAsmCmd@@@Z ENDP	; DeletePushPop::CanBeApplied
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5
__ehfuncinfo$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv179 = -388						; size = 4
tv178 = -384						; size = 4
tv170 = -384						; size = 4
tv175 = -380						; size = 4
tv169 = -380						; size = 4
tv184 = -376						; size = 4
tv167 = -376						; size = 4
tv182 = -372						; size = 4
tv173 = -372						; size = 4
tv183 = -368						; size = 4
tv165 = -368						; size = 4
tv181 = -364						; size = 4
tv150 = -364						; size = 4
$T65781 = -356						; size = 4
$T65782 = -344						; size = 12
$T65783 = -324						; size = 12
$T65784 = -304						; size = 12
$T65785 = -284						; size = 4
$T65786 = -272						; size = 12
$T65787 = -252						; size = 12
$T65788 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; DeletePushPop::MakeOptimization, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T65783[ebp]
	push	edx
	lea	eax, DWORD PTR $T65782[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv181[ebp], eax
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv165[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv182[ebp], eax
	mov	edx, DWORD PTR tv182[ebp]
	mov	DWORD PTR tv167[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65781[ebp], esp
	mov	eax, DWORD PTR tv167[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv169[ebp], eax
	lea	ecx, DWORD PTR $T65784[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv170[ebp], eax
	lea	ecx, DWORD PTR $T65784[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T65783[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65782[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 250
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv150[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv150[ebp]
	push	edx
	lea	eax, DWORD PTR $T65787[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65786[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv183[ebp], eax
	mov	edx, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv173[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv173[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65785[ebp], esp
	mov	edx, DWORD PTR tv175[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv178[ebp], eax
	lea	eax, DWORD PTR $T65788[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv179[ebp], eax
	lea	ecx, DWORD PTR $T65788[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T65787[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T65786[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 251
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	lea	ecx, DWORD PTR $T65782[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR $T65783[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4:
	lea	ecx, DWORD PTR $T65786[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5:
	lea	ecx, DWORD PTR $T65787[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@DeletePushPop@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; DeletePushPop::MakeOptimization
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z$1
__ehfuncinfo$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv159 = -344						; size = 4
tv170 = -340						; size = 4
tv177 = -336						; size = 4
tv165 = -332						; size = 4
tv175 = -328						; size = 4
$T47105 = -320						; size = 32
$T47106 = -280						; size = 32
$T65806 = -237						; size = 1
$T65810 = -228						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lines$ = 8						; size = 4
?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z PROC ; ReplacePushPopWithMov::CanBeApplied, COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T65810[ebp], 0
; Line 256
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@CanBeAppli@11
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@CanBeAppli@11
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	je	$LN3@CanBeAppli@11
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	esi, esp
	lea	ecx, DWORD PTR $T47105[ebp]
	push	ecx
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv175[ebp], eax
	mov	ecx, DWORD PTR tv175[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T65810[ebp]
	or	edx, 1
	mov	DWORD PTR $T65810[ebp], edx
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@CanBeAppli@11
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	esi, esp
	lea	edx, DWORD PTR $T47106[ebp]
	push	edx
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv177[ebp], eax
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T65810[ebp]
	or	edx, 2
	mov	DWORD PTR $T65810[ebp], edx
	mov	eax, DWORD PTR tv170[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@CanBeAppli@11
$LN4@CanBeAppli@11:
	mov	DWORD PTR tv159[ebp], 1
	jmp	SHORT $LN5@CanBeAppli@11
$LN3@CanBeAppli@11:
	mov	DWORD PTR tv159[ebp], 0
$LN5@CanBeAppli@11:
	mov	dl, BYTE PTR tv159[ebp]
	mov	BYTE PTR $T65806[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T65810[ebp]
	and	eax, 2
	je	SHORT $LN10@CanBeAppli@11
	and	DWORD PTR $T65810[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T47106[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@CanBeAppli@11:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T65810[ebp]
	and	ecx, 1
	je	SHORT $LN11@CanBeAppli@11
	and	DWORD PTR $T65810[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T47105[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@CanBeAppli@11:
	mov	al, BYTE PTR $T65806[ebp]
; Line 257
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z$0:
	mov	eax, DWORD PTR $T65810[ebp]
	and	eax, 1
	je	$LN7@CanBeAppli@11
	and	DWORD PTR $T65810[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T47105[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@CanBeAppli@11:
	ret	0
__unwindfunclet$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z$1:
	mov	eax, DWORD PTR $T65810[ebp]
	and	eax, 2
	je	$LN9@CanBeAppli@11
	and	DWORD PTR $T65810[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T47106[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@CanBeAppli@11:
	ret	0
__ehhandler$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanBeApplied@ReplacePushPopWithMov@@UAE_NQAPAVAsmCmd@@@Z ENDP ; ReplacePushPopWithMov::CanBeApplied
PUBLIC	??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z ; AsmCmd2::AsmCmd2
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$10
	DD	07H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$14
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$15
	DD	0aH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$16
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$19
	DD	0cH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$20
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$23
	DD	0eH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$24
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv446 = -840						; size = 4
tv461 = -836						; size = 4
tv445 = -836						; size = 4
tv472 = -832						; size = 4
tv460 = -832						; size = 4
tv441 = -832						; size = 4
tv493 = -828						; size = 4
tv471 = -828						; size = 4
tv456 = -828						; size = 4
tv496 = -824						; size = 4
tv467 = -824						; size = 4
tv439 = -824						; size = 4
tv499 = -820						; size = 4
tv492 = -820						; size = 4
tv489 = -820						; size = 4
tv454 = -820						; size = 4
tv495 = -816						; size = 4
tv488 = -816						; size = 4
tv480 = -816						; size = 4
tv465 = -816						; size = 4
tv179 = -816						; size = 4
tv498 = -812						; size = 4
tv485 = -812						; size = 4
tv479 = -812						; size = 4
tv252 = -812						; size = 4
tv159 = -812						; size = 4
tv503 = -808						; size = 4
tv477 = -808						; size = 4
tv437 = -808						; size = 4
tv317 = -808						; size = 4
tv232 = -808						; size = 4
tv501 = -804						; size = 4
tv483 = -804						; size = 4
tv452 = -804						; size = 4
tv436 = -804						; size = 4
tv297 = -804						; size = 4
tv502 = -800						; size = 4
tv475 = -800						; size = 4
tv451 = -800						; size = 4
tv291 = -800						; size = 4
tv72 = -800						; size = 4
tv500 = -796						; size = 4
tv417 = -796						; size = 4
tv280 = -796						; size = 4
tv212 = -796						; size = 4
tv152 = -796						; size = 4
tv81 = -796						; size = 4
tv69 = -796						; size = 4
$T65826 = -788						; size = 4
$T65827 = -776						; size = 4
$T65828 = -764						; size = 4
$T65829 = -752						; size = 4
$T65832 = -740						; size = 4
$T65833 = -728						; size = 12
$T65834 = -708						; size = 12
$T65835 = -688						; size = 12
$T65836 = -668						; size = 4
$T65837 = -656						; size = 4
$T65838 = -644						; size = 4
$T65839 = -632						; size = 4
$T65842 = -620						; size = 4
$T65843 = -608						; size = 12
$T65844 = -588						; size = 12
$T65845 = -568						; size = 12
$T65846 = -548						; size = 4
$T65847 = -536						; size = 4
$T65848 = -524						; size = 4
$T65851 = -512						; size = 4
$T65852 = -500						; size = 12
$T65853 = -480						; size = 12
$T65854 = -460						; size = 12
$T65855 = -440						; size = 4
$T65856 = -428						; size = 12
$T65857 = -408						; size = 12
$T65858 = -388						; size = 12
$T65859 = -368						; size = 4
$T65860 = -356						; size = 12
$T65861 = -336						; size = 12
$T65862 = -316						; size = 12
_immed1$ = -104						; size = 32
_immed0$ = -64						; size = 32
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplacePushPopWithMov::MakeOptimization, COMDAT
; _this$ = ecx
; Line 260
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 828				; 0000033cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-840]
	mov	ecx, 207				; 000000cfH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 261
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], edx
	mov	esi, esp
	lea	eax, DWORD PTR _immed0$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv69[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 262
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv81[ebp], edx
	mov	esi, esp
	lea	eax, DWORD PTR _immed1$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv81[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 266
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _immed0$[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@MakeOptimi@9
; Line 267
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65828[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T65828[ebp], 0
	je	$LN7@MakeOptimi@9
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv152[ebp], edx
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65829[ebp], esp
	lea	eax, DWORD PTR _immed0$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv436[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	edx, DWORD PTR tv152[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv152[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	7
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T65828[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv437[ebp], eax
	mov	eax, DWORD PTR tv437[ebp]
	mov	DWORD PTR tv159[ebp], eax
	jmp	SHORT $LN8@MakeOptimi@9
$LN7@MakeOptimi@9:
	mov	DWORD PTR tv159[ebp], 0
$LN8@MakeOptimi@9:
	mov	ecx, DWORD PTR tv159[ebp]
	mov	DWORD PTR $T65827[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T65827[ebp]
	mov	DWORD PTR $T65826[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv179[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65826[ebp]
	push	edx
	mov	eax, DWORD PTR tv179[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65834[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65833[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv492[ebp], eax
	mov	eax, DWORD PTR tv492[ebp]
	mov	DWORD PTR tv439[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv439[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv493[ebp], eax
	mov	ecx, DWORD PTR tv493[ebp]
	mov	DWORD PTR tv441[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65832[ebp], esp
	mov	edx, DWORD PTR tv441[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv445[ebp], eax
	lea	eax, DWORD PTR $T65835[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv446[ebp], eax
	lea	ecx, DWORD PTR $T65835[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T65834[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65833[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	jmp	$LN3@MakeOptimi@9
$LN4@MakeOptimi@9:
; Line 268
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _immed1$[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@MakeOptimi@9
; Line 269
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65838[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T65838[ebp], 0
	je	SHORT $LN9@MakeOptimi@9
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv212[ebp], edx
	mov	eax, DWORD PTR tv212[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv212[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65839[ebp], esp
	lea	edx, DWORD PTR _immed1$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv451[ebp], eax
	push	7
	mov	ecx, DWORD PTR $T65838[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z ; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv452[ebp], eax
	mov	eax, DWORD PTR tv452[ebp]
	mov	DWORD PTR tv232[ebp], eax
	jmp	SHORT $LN10@MakeOptimi@9
$LN9@MakeOptimi@9:
	mov	DWORD PTR tv232[ebp], 0
$LN10@MakeOptimi@9:
	mov	ecx, DWORD PTR tv232[ebp]
	mov	DWORD PTR $T65837[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T65837[ebp]
	mov	DWORD PTR $T65836[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv252[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65836[ebp]
	push	edx
	mov	eax, DWORD PTR tv252[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65844[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65843[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv495[ebp], eax
	mov	eax, DWORD PTR tv495[ebp]
	mov	DWORD PTR tv454[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv454[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv496[ebp], eax
	mov	ecx, DWORD PTR tv496[ebp]
	mov	DWORD PTR tv456[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65842[ebp], esp
	mov	edx, DWORD PTR tv456[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv460[ebp], eax
	lea	eax, DWORD PTR $T65845[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv461[ebp], eax
	lea	ecx, DWORD PTR $T65845[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T65844[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65843[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 270
	jmp	$LN3@MakeOptimi@9
$LN2@MakeOptimi@9:
; Line 271
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65848[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T65848[ebp], 0
	je	SHORT $LN11@MakeOptimi@9
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv280[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv291[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv280[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv280[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv291[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv291[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	7
	mov	ecx, DWORD PTR $T65848[ebp]
	call	??0AsmCmd2@@QAE@W4OPCODE@@W4REG@@1@Z	; AsmCmd2::AsmCmd2
	mov	DWORD PTR tv297[ebp], eax
	jmp	SHORT $LN12@MakeOptimi@9
$LN11@MakeOptimi@9:
	mov	DWORD PTR tv297[ebp], 0
$LN12@MakeOptimi@9:
	mov	ecx, DWORD PTR tv297[ebp]
	mov	DWORD PTR $T65847[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T65847[ebp]
	mov	DWORD PTR $T65846[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv317[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65846[ebp]
	push	edx
	mov	eax, DWORD PTR tv317[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65853[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65852[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv498[ebp], eax
	mov	eax, DWORD PTR tv498[ebp]
	mov	DWORD PTR tv465[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv465[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv499[ebp], eax
	mov	ecx, DWORD PTR tv499[ebp]
	mov	DWORD PTR tv467[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65851[ebp], esp
	mov	edx, DWORD PTR tv467[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv471[ebp], eax
	lea	eax, DWORD PTR $T65854[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
	mov	DWORD PTR tv472[ebp], eax
	lea	ecx, DWORD PTR $T65854[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T65853[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65852[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN3@MakeOptimi@9:
; Line 273
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T65857[ebp]
	push	edx
	lea	eax, DWORD PTR $T65856[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv500[ebp], eax
	mov	ecx, DWORD PTR tv500[ebp]
	mov	DWORD PTR tv475[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv475[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv501[ebp], eax
	mov	edx, DWORD PTR tv501[ebp]
	mov	DWORD PTR tv477[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65855[ebp], esp
	mov	eax, DWORD PTR tv477[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv479[ebp], eax
	lea	ecx, DWORD PTR $T65858[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv480[ebp], eax
	lea	ecx, DWORD PTR $T65858[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T65857[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65856[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 274
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv417[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv417[ebp]
	push	edx
	lea	eax, DWORD PTR $T65861[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65860[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv502[ebp], eax
	mov	edx, DWORD PTR tv502[ebp]
	mov	DWORD PTR tv483[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR tv483[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv503[ebp], eax
	mov	eax, DWORD PTR tv503[ebp]
	mov	DWORD PTR tv485[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65859[ebp], esp
	mov	edx, DWORD PTR tv485[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv488[ebp], eax
	lea	eax, DWORD PTR $T65862[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv489[ebp], eax
	lea	ecx, DWORD PTR $T65862[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T65861[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T65860[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 275
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _immed1$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _immed0$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@MakeOptimi@9
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 840				; 00000348H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN44@MakeOptimi@9:
	DD	2
	DD	$LN43@MakeOptimi@9
$LN43@MakeOptimi@9:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN40@MakeOptimi@9
	DD	-104					; ffffff98H
	DD	32					; 00000020H
	DD	$LN41@MakeOptimi@9
$LN41@MakeOptimi@9:
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	49					; 00000031H
	DB	0
$LN40@MakeOptimi@9:
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	48					; 00000030H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	lea	ecx, DWORD PTR _immed0$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	lea	ecx, DWORD PTR _immed1$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$2:
	mov	eax, DWORD PTR $T65828[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3:
	mov	ecx, DWORD PTR $T65829[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4:
	lea	ecx, DWORD PTR $T65833[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$5:
	lea	ecx, DWORD PTR $T65834[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8:
	mov	eax, DWORD PTR $T65838[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$10:
	lea	ecx, DWORD PTR $T65843[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$11:
	lea	ecx, DWORD PTR $T65844[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$14:
	mov	eax, DWORD PTR $T65848[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$15:
	lea	ecx, DWORD PTR $T65852[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$16:
	lea	ecx, DWORD PTR $T65853[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$19:
	lea	ecx, DWORD PTR $T65856[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$20:
	lea	ecx, DWORD PTR $T65857[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$23:
	lea	ecx, DWORD PTR $T65860[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$24:
	lea	ecx, DWORD PTR $T65861[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-844]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplacePushPopWithMov@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplacePushPopWithMov::MakeOptimization
PUBLIC	??0AsmCmd1@@QAE@W4OPCODE@@@Z			; AsmCmd1::AsmCmd1
;	COMDAT xdata$x
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\asmcommands.h
xdata$x	SEGMENT
__unwindtable$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z$2
__ehfuncinfo$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_op$ = 8						; size = 4
_immed$ = 12						; size = 32
_oper2$ = 44						; size = 4
??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z PROC ; AsmCmd2::AsmCmd2, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@@Z		; AsmCmd1::AsmCmd1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AsmCmd2@@6B@
	lea	eax, DWORD PTR _immed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _oper2$[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _immed$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@AsmCmd2@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
	npad	1
$LN10@AsmCmd2@2:
	DD	1
	DD	$LN9@AsmCmd2@2
$LN9@AsmCmd2@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@AsmCmd2@2
$LN7@AsmCmd2@2:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z$0:
	lea	ecx, DWORD PTR _immed$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AsmCmd1@@QAE@XZ
__unwindfunclet$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AsmCmd2@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4REG@@@Z ENDP ; AsmCmd2::AsmCmd2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0AsmCmd1@@QAE@W4OPCODE@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_op$ = 8						; size = 4
??0AsmCmd1@@QAE@W4OPCODE@@@Z PROC			; AsmCmd1::AsmCmd1, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AsmCmd@@QAE@W4OPCODE@@@Z		; AsmCmd::AsmCmd
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AsmCmd1@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0AsmCmd1@@QAE@W4OPCODE@@@Z ENDP			; AsmCmd1::AsmCmd1
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CanBeApplied@ReplaceMovPushWithPush@@UAE_NQAPAVAsmCmd@@@Z
_TEXT	SEGMENT
tv136 = -208						; size = 4
_this$ = -8						; size = 4
_lines$ = 8						; size = 4
?CanBeApplied@ReplaceMovPushWithPush@@UAE_NQAPAVAsmCmd@@@Z PROC ; ReplaceMovPushWithPush::CanBeApplied, COMDAT
; _this$ = ecx
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\ll_optimizer.cpp
; Line 278
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@CanBeAppli@12
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanBeAppli@12
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jne	SHORT $LN3@CanBeAppli@12
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lines$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN3@CanBeAppli@12
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN4@CanBeAppli@12
$LN3@CanBeAppli@12:
	mov	DWORD PTR tv136[ebp], 0
$LN4@CanBeAppli@12:
	mov	al, BYTE PTR tv136[ebp]
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanBeApplied@ReplaceMovPushWithPush@@UAE_NQAPAVAsmCmd@@@Z ENDP ; ReplaceMovPushWithPush::CanBeApplied
_TEXT	ENDS
PUBLIC	??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd1::AsmCmd1
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12
	DD	07H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$13
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$16
	DD	09H
	DD	FLAT:__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$17
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
_TEXT	SEGMENT
tv307 = -684						; size = 4
tv306 = -680						; size = 4
tv318 = -676						; size = 4
tv302 = -676						; size = 4
tv338 = -672						; size = 4
tv335 = -672						; size = 4
tv317 = -672						; size = 4
tv334 = -668						; size = 4
tv326 = -668						; size = 4
tv313 = -668						; size = 4
tv300 = -668						; size = 4
tv341 = -664						; size = 4
tv337 = -664						; size = 4
tv331 = -664						; size = 4
tv325 = -664						; size = 4
tv345 = -660						; size = 4
tv323 = -660						; size = 4
tv311 = -660						; size = 4
tv166 = -660						; size = 4
tv343 = -656						; size = 4
tv340 = -656						; size = 4
tv329 = -656						; size = 4
tv146 = -656						; size = 4
tv344 = -652						; size = 4
tv321 = -652						; size = 4
tv298 = -652						; size = 4
tv212 = -652						; size = 4
tv342 = -648						; size = 4
tv297 = -648						; size = 4
tv280 = -648						; size = 4
tv192 = -648						; size = 4
tv81 = -648						; size = 4
tv69 = -648						; size = 4
$T65926 = -640						; size = 4
$T65927 = -628						; size = 4
$T65928 = -616						; size = 4
$T65929 = -604						; size = 4
$T65932 = -592						; size = 4
$T65933 = -580						; size = 12
$T65934 = -560						; size = 12
$T65935 = -540						; size = 12
$T65936 = -520						; size = 4
$T65937 = -508						; size = 4
$T65938 = -496						; size = 4
$T65941 = -484						; size = 4
$T65942 = -472						; size = 12
$T65943 = -452						; size = 12
$T65944 = -432						; size = 12
$T65945 = -412						; size = 4
$T65946 = -400						; size = 12
$T65947 = -380						; size = 12
$T65948 = -360						; size = 12
$T65949 = -340						; size = 4
$T65950 = -328						; size = 12
$T65951 = -308						; size = 12
$T65952 = -288						; size = 12
_right_reg$ = -76					; size = 4
_right_op$ = -64					; size = 32
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_commands$ = 8						; size = 4
_i$ = 12						; size = 4
?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z PROC ; ReplaceMovPushWithPush::MakeOptimization, COMDAT
; _this$ = ecx
; Line 284
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 672				; 000002a0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-684]
	mov	ecx, 168				; 000000a8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 285
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], edx
	mov	esi, esp
	lea	eax, DWORD PTR _right_op$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv69[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 286
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv81[ebp], edx
	mov	eax, DWORD PTR tv81[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv81[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _right_reg$[ebp], eax
; Line 288
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _right_op$[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@MakeOptimi@10
; Line 289
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65928[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T65928[ebp], 0
	je	SHORT $LN6@MakeOptimi@10
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T65929[ebp], esp
	lea	eax, DWORD PTR _right_op$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv297[ebp], eax
	push	5
	mov	ecx, DWORD PTR $T65928[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; AsmCmd1::AsmCmd1
	mov	DWORD PTR tv298[ebp], eax
	mov	ecx, DWORD PTR tv298[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	jmp	SHORT $LN7@MakeOptimi@10
$LN6@MakeOptimi@10:
	mov	DWORD PTR tv146[ebp], 0
$LN7@MakeOptimi@10:
	mov	edx, DWORD PTR tv146[ebp]
	mov	DWORD PTR $T65927[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T65927[ebp]
	mov	DWORD PTR $T65926[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv166[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx], ecx
	lea	eax, DWORD PTR $T65926[ebp]
	push	eax
	mov	ecx, DWORD PTR tv166[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65934[ebp]
	push	edx
	lea	eax, DWORD PTR $T65933[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv337[ebp], eax
	mov	ecx, DWORD PTR tv337[ebp]
	mov	DWORD PTR tv300[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv300[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv338[ebp], eax
	mov	edx, DWORD PTR tv338[ebp]
	mov	DWORD PTR tv302[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65932[ebp], esp
	mov	eax, DWORD PTR tv302[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv306[ebp], eax
	lea	ecx, DWORD PTR $T65935[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
	mov	DWORD PTR tv307[ebp], eax
	lea	ecx, DWORD PTR $T65935[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T65934[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T65933[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	jmp	$LN2@MakeOptimi@10
$LN3@MakeOptimi@10:
; Line 290
	cmp	DWORD PTR _right_reg$[ebp], -1
	je	$LN2@MakeOptimi@10
; Line 291
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T65938[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T65938[ebp], 0
	je	SHORT $LN8@MakeOptimi@10
	mov	eax, DWORD PTR _right_reg$[ebp]
	push	eax
	push	5
	mov	ecx, DWORD PTR $T65938[ebp]
	call	??0AsmCmd1@@QAE@W4OPCODE@@W4REG@@@Z	; AsmCmd1::AsmCmd1
	mov	DWORD PTR tv192[ebp], eax
	jmp	SHORT $LN9@MakeOptimi@10
$LN8@MakeOptimi@10:
	mov	DWORD PTR tv192[ebp], 0
$LN9@MakeOptimi@10:
	mov	ecx, DWORD PTR tv192[ebp]
	mov	DWORD PTR $T65937[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T65937[ebp]
	mov	DWORD PTR $T65936[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv212[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	edx, DWORD PTR $T65936[ebp]
	push	edx
	mov	eax, DWORD PTR tv212[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65943[ebp]
	push	ecx
	lea	edx, DWORD PTR $T65942[ebp]
	push	edx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv340[ebp], eax
	mov	eax, DWORD PTR tv340[ebp]
	mov	DWORD PTR tv311[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv311[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv341[ebp], eax
	mov	ecx, DWORD PTR tv341[ebp]
	mov	DWORD PTR tv313[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65941[ebp], esp
	mov	edx, DWORD PTR tv313[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv317[ebp], eax
	lea	eax, DWORD PTR $T65944[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
	mov	DWORD PTR tv318[ebp], eax
	lea	ecx, DWORD PTR $T65944[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T65943[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T65942[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN2@MakeOptimi@10:
; Line 293
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T65947[ebp]
	push	edx
	lea	eax, DWORD PTR $T65946[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv342[ebp], eax
	mov	ecx, DWORD PTR tv342[ebp]
	mov	DWORD PTR tv321[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv321[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv343[ebp], eax
	mov	edx, DWORD PTR tv343[ebp]
	mov	DWORD PTR tv323[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65945[ebp], esp
	mov	eax, DWORD PTR tv323[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv325[ebp], eax
	lea	ecx, DWORD PTR $T65948[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv326[ebp], eax
	lea	ecx, DWORD PTR $T65948[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T65947[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T65946[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 294
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv280[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv280[ebp]
	push	edx
	lea	eax, DWORD PTR $T65951[ebp]
	push	eax
	lea	ecx, DWORD PTR $T65950[ebp]
	push	ecx
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv344[ebp], eax
	mov	edx, DWORD PTR tv344[ebp]
	mov	DWORD PTR tv329[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv329[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv345[ebp], eax
	mov	eax, DWORD PTR tv345[ebp]
	mov	DWORD PTR tv331[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T65949[ebp], esp
	mov	edx, DWORD PTR tv331[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv334[ebp], eax
	lea	eax, DWORD PTR $T65952[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv335[ebp], eax
	lea	ecx, DWORD PTR $T65952[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T65951[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T65950[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 295
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _right_op$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@MakeOptimi@10
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 684				; 000002acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN33@MakeOptimi@10:
	DD	1
	DD	$LN32@MakeOptimi@10
$LN32@MakeOptimi@10:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN30@MakeOptimi@10
$LN30@MakeOptimi@10:
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$0:
	lea	ecx, DWORD PTR _right_op$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$1:
	mov	eax, DWORD PTR $T65928[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$3:
	lea	ecx, DWORD PTR $T65933[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$4:
	lea	ecx, DWORD PTR $T65934[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$7:
	mov	eax, DWORD PTR $T65938[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$8:
	lea	ecx, DWORD PTR $T65942[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$9:
	lea	ecx, DWORD PTR $T65943[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$12:
	lea	ecx, DWORD PTR $T65946[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$13:
	lea	ecx, DWORD PTR $T65947[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$16:
	lea	ecx, DWORD PTR $T65950[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z$17:
	lea	ecx, DWORD PTR $T65951[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-688]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeOptimization@ReplaceMovPushWithPush@@UAEXPAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@AAI@Z ENDP ; ReplaceMovPushWithPush::MakeOptimization
;	COMDAT xdata$x
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\asmcommands.h
xdata$x	SEGMENT
__unwindtable$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_op$ = 8						; size = 4
_imm$ = 12						; size = 32
??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; AsmCmd1::AsmCmd1, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AsmCmd@@QAE@W4OPCODE@@@Z		; AsmCmd::AsmCmd
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AsmCmd1@@6B@
	lea	eax, DWORD PTR _imm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _imm$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@AsmCmd1
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	1
$LN8@AsmCmd1:
	DD	1
	DD	$LN7@AsmCmd1
$LN7@AsmCmd1:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@AsmCmd1
$LN5@AsmCmd1:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _imm$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AsmCmd1@@QAE@W4OPCODE@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; AsmCmd1::AsmCmd1
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T65998 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 28					; 0000001cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T65998[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 544
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 545
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 546
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T66008 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T66008[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 551
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 552
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T66018 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T66018[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 593
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 594
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 595
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T66028 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	mov	ecx, esp
	mov	DWORD PTR $T66028[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 704
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 705
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 753
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 754
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 755
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1496
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
PUBLIC	??0?$allocator@PAVAsmCmd@@@std@@QAE@XZ		; std::allocator<AsmCmd *>::allocator<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T66049 = -212						; size = 4
_this$ = -8						; size = 4
??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T66049[ebp], esp
	call	??0?$allocator@PAVAsmCmd@@@std@@QAE@XZ	; std::allocator<AsmCmd *>::allocator<AsmCmd *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::~_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
PUBLIC	?_Tidy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Tidy
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
PUBLIC	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
PUBLIC	?_Buy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAE_NI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Buy
PUBLIC	??0?$allocator@PAVAsmCmd@@@std@@QAE@ABV01@@Z	; std::allocator<AsmCmd *>::allocator<AsmCmd *>
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$5
__unwindtable$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$3
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv177 = -272						; size = 4
tv180 = -268						; size = 4
tv176 = -264						; size = 4
tv69 = -260						; size = 4
$T66053 = -252						; size = 4
$T66054 = -240						; size = 4
$T66055 = -228						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >, COMDAT
; _this$ = ecx
; Line 535
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 16					; 00000010H
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T66053[ebp], esp
	push	eax
	call	??0?$allocator@PAVAsmCmd@@@std@@QAE@ABV01@@Z ; std::allocator<AsmCmd *>::allocator<AsmCmd *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 536
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAE_NI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Buy
	movzx	eax, al
	test	eax, eax
	je	$LN3@vector
; Line 537
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 539
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T66054[ebp], esp
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv176[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66055[ebp], esp
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	mov	DWORD PTR tv177[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv177[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN5@vector
__catch$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$0:
; Line 541
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Tidy
; Line 542
	push	0
	push	0
	call	__CxxThrowException@8
; Line 543
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN3@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector:
; Line 544
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::~_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
__unwindfunclet$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z$3:
	mov	ecx, DWORD PTR $T66054[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::vector<AsmCmd *,std::allocator<AsmCmd *> >
PUBLIC	?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Assign_rv
PUBLIC	??$forward@V?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YA$$QAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@0@AAV10@@Z ; std::forward<std::vector<AsmCmd *,std::allocator<AsmCmd *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator=, COMDAT
; _this$ = ecx
; Line 600
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 601
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YA$$QAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@0@AAV10@@Z ; std::forward<std::vector<AsmCmd *,std::allocator<AsmCmd *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Assign_rv
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
; Line 603
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::~vector<AsmCmd *,std::allocator<AsmCmd *> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::~_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::~_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
__ehhandler$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::~vector<AsmCmd *,std::allocator<AsmCmd *> >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T66087 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66087[ebp], 0
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	mov	eax, DWORD PTR $T66087[ebp]
	or	eax, 1
	mov	DWORD PTR $T66087[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 880
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
_TEXT	ENDS
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JO@CPPMMLLF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAA?$AAs?$AAm?$AAC?$AAm?$AAd?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
EXTRN	__invalid_parameter:PROC
EXTRN	__CrtDbgReportW:PROC
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@CPPMMLLF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAA?$AAs?$AAm?$AAC?$AAm?$AAd?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
CONST	SEGMENT
??_C@_1JO@CPPMMLLF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAA?$AAs?$AAm?$AAC?$AAm?$AAd?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 's', 00H
	DB	'm', 00H, 'C', 00H, 'm', 00H, 'd', 00H, ' ', 00H, '*', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 'A', 00H, 's', 00H, 'm', 00H, 'C', 00H, 'm', 00H
	DB	'd', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
CONST	SEGMENT
??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H
	DB	'v', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator@2
; Line 932
	push	932					; 000003a4H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 933
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator@2
	xor	ecx, ecx
	jne	SHORT $LN5@operator@2
$LN4@operator@2:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	933					; 000003a5H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN5@operator@2
	int	3
$LN5@operator@2:
	push	0
	push	933					; 000003a5H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1JO@CPPMMLLF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAA?$AAs?$AAm?$AAC?$AAm?$AAd?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator@2:
; Line 940
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEAAPAVAsmCmd@@I@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::operator[]
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Make_iter
PUBLIC	?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
PUBLIC	?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Destroy
PUBLIC	??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00@Z ; std::_Move<AsmCmd * *,AsmCmd * *>
PUBLIC	??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ ; `string'
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
;	COMDAT ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -248						; size = 4
tv181 = -244						; size = 4
$T66097 = -236						; size = 4
$T66101 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase, COMDAT
; _this$ = ecx
; Line 1165
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66101[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1168
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@erase
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@erase
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Where$[ebp+8]
	ja	SHORT $LN2@erase
$LN1@erase:
; Line 1169
	push	1169					; 00000491H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@erase:
; Line 1170
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	add	eax, 4
	push	eax
	call	??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00@Z ; std::_Move<AsmCmd * *,AsmCmd * *>
	add	esp, 12					; 0000000cH
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Destroy
; Line 1172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
; Line 1173
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1174
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66097[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv181[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Make_iter
	mov	DWORD PTR tv182[ebp], eax
	mov	edx, DWORD PTR $T66101[ebp]
	or	edx, 1
	mov	DWORD PTR $T66101[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1175
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$2:
	mov	eax, DWORD PTR $T66101[ebp]
	and	eax, 1
	je	$LN8@erase
	and	DWORD PTR $T66101[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN8@erase:
	ret	0
__ehhandler$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv66[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv66[ebp]
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::_Vector_val<Optimization *,std::allocator<Optimization *> >
PUBLIC	??0?$allocator@PAVOptimization@@@std@@QAE@XZ	; std::allocator<Optimization *>::allocator<Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T66115 = -212						; size = 4
_this$ = -8						; size = 4
??0?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::vector<Optimization *,std::allocator<Optimization *> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T66115[ebp], esp
	call	??0?$allocator@PAVOptimization@@@std@@QAE@XZ ; std::allocator<Optimization *>::allocator<Optimization *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::_Vector_val<Optimization *,std::allocator<Optimization *> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::vector<Optimization *,std::allocator<Optimization *> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVOptimization@@@std@@PAVOptimization@@PAV3@@std@@YAXAAV?$allocator@PAVOptimization@@@0@PAPAVOptimization@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<Optimization *>,Optimization *,Optimization *>
PUBLIC	??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z ; std::forward<Optimization *>
PUBLIC	?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Orphan_range
PUBLIC	?_Reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXI@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Reserve
PUBLIC	?_Inside@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBE_NPBQAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Inside
PUBLIC	??$addressof@PAVOptimization@@@std@@YAPAPAVOptimization@@AAPAV1@@Z ; std::addressof<Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z
_TEXT	SEGMENT
__Idx$48878 = -20					; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@PAVOptimization@@@std@@YAPAPAVOptimization@@AAPAV1@@Z ; std::addressof<Optimization *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBE_NPBQAVOptimization@@@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 634
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@PAVOptimization@@@std@@YAPAPAVOptimization@@AAPAV1@@Z ; std::addressof<Optimization *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
	mov	DWORD PTR __Idx$48878[ebp], eax
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@push_back
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXI@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Reserve
$LN3@push_back:
; Line 637
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$48878[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z ; std::forward<Optimization *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$_Cons_val@V?$allocator@PAVOptimization@@@std@@PAVOptimization@@PAV3@@std@@YAXAAV?$allocator@PAVOptimization@@@0@PAPAVOptimization@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<Optimization *>,Optimization *,Optimization *>
	add	esp, 12					; 0000000cH
; Line 641
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 643
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 645
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN1@push_back
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXI@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Reserve
$LN1@push_back:
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z ; std::forward<Optimization *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$_Cons_val@V?$allocator@PAVOptimization@@@std@@PAVOptimization@@PAV3@@std@@YAXAAV?$allocator@PAVOptimization@@@0@PAPAVOptimization@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<Optimization *>,Optimization *,Optimization *>
	add	esp, 12					; 0000000cH
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEX$$QAPAVOptimization@@@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::push_back
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::~_Vector_val<Optimization *,std::allocator<Optimization *> >
PUBLIC	?_Tidy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::~vector<Optimization *,std::allocator<Optimization *> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::~_Vector_val<Optimization *,std::allocator<Optimization *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::~_Vector_val<Optimization *,std::allocator<Optimization *> >
__ehhandler$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::~vector<Optimization *,std::allocator<Optimization *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 880
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::size
_TEXT	ENDS
PUBLIC	??_C@_1LG@KNLEGFGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CK@ ; `string'
;	COMDAT ??_C@_1LG@KNLEGFGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CK@
CONST	SEGMENT
??_C@_1LG@KNLEGFGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CK@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '*', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'O', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'i'
	DB	00H, 'z', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator@3
; Line 932
	push	932					; 000003a4H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 933
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator@3
	xor	ecx, ecx
	jne	SHORT $LN5@operator@3
$LN4@operator@3:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	933					; 000003a5H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN5@operator@3
	int	3
$LN5@operator@3:
	push	0
	push	933					; 000003a5H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1LG@KNLEGFGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CK@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator@3:
; Line 940
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEAAPAVOptimization@@I@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::operator[]
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T66138 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+, COMDAT
; _this$ = ecx
; Line 363
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66138[ebp], 0
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 365
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T66138[ebp]
	or	ecx, 1
	mov	DWORD PTR $T66138[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 366
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@operator@4:
	DD	1
	DD	$LN8@operator@4
$LN8@operator@4:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator@4
$LN6@operator@4:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T66138[ebp]
	and	eax, 1
	je	$LN5@operator@4
	and	DWORD PTR $T66138[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN5@operator@4:
	ret	0
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
$T66154 = -221						; size = 1
$T66155 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 714
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@assign
; Line 716
	jmp	$LN5@assign
$LN6@assign:
; Line 717
	lea	eax, DWORD PTR $T66154[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	lea	ecx, DWORD PTR $T66155[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	call	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator!=<char,char>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@assign
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN4@assign
; Line 718
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 719
	jmp	SHORT $LN5@assign
$LN4@assign:
; Line 721
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 722
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jae	SHORT $LN2@assign
; Line 724
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign
$LN2@assign:
; Line 727
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 728
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN1@assign:
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 731
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 733
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 734
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+24], 0
$LN5@assign:
; Line 736
	mov	eax, DWORD PTR _this$[ebp]
; Line 737
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	_memmove:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 517
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 763
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 764
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 765
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 887
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 888
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 889
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@2
; Line 895
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign@2:
; Line 896
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 897
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@2
; Line 898
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
$LN4@assign@2:
; Line 900
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@2
; Line 901
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign@2
$LN3@assign@2:
; Line 902
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@2
; Line 904
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 905
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign@2:
; Line 907
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign@2:
; Line 908
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 496
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 497
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$47272 = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1109
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase@2
; Line 1111
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@erase@2:
; Line 1112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase@2
; Line 1113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN2@erase@2:
; Line 1114
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase@2
; Line 1117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1118
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$47272[ebp], ecx
; Line 1119
	mov	eax, DWORD PTR __Newsize$47272[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase@2:
; Line 1121
	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase@2:
; Line 1122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1511
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1512
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1513
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
;	COMDAT ??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
CONST	SEGMENT
??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H
	DB	'v', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 929
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	push	930					; 000003a2H
	push	OFFSET ??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 931
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 932
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
; Line 492
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T66176 = -209						; size = 1
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1953
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1954
	mov	BYTE PTR $T66176[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T66176[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1955
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 526
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 527
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 528
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$49102 = -20					; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1988
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1989
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 1991
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 1993
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$49102[ebp], ecx
; Line 1994
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 1995
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$49102[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 1996
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$49102[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy:
; Line 1998
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 1999
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2000
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2003
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2005
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2006
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2009
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2011
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2012
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2020
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2021
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2022
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
$T66193 = -240						; size = 8
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 466
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
; Line 469
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 470
	lea	ecx, DWORD PTR $T66193[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 471
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 472
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@String_val:
	DD	1
	DD	$LN6@String_val
$LN6@String_val:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@String_val
$LN4@String_val:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$11525 = -32					; size = 4
__Lock$11524 = -20					; size = 4
_this$ = -8						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all
; Line 198
	push	3
	lea	ecx, DWORD PTR __Lock$11524[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$11525[ebp], ecx
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
; Line 201
	mov	eax, DWORD PTR __Pnext$11525[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$11525[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	eax, DWORD PTR __Pnext$11525[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_all
; Line 202
	mov	eax, DWORD PTR __Pnext$11525[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0
; Line 204
	lea	ecx, DWORD PTR __Lock$11524[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:
; Line 206
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 475
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
; Line 478
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 479
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8
; Line 480
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 482
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@String_val@2:
	DD	1
	DD	$LN6@String_val@2
$LN6@String_val@2:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@String_val@2
$LN4@String_val@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z	; std::_Container_base12::_Swap_all
PUBLIC	?push_back@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::push_back
PUBLIC	??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::forward<AsmCmd *>
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEAAPAVAsmCmd@@XZ ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
PUBLIC	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++
PUBLIC	?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::clear
PUBLIC	??$?9PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z ; std::operator!=<AsmCmd *,AsmCmd *>
PUBLIC	?get_allocator@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$allocator@PAVAsmCmd@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::get_allocator
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z$1
__ehfuncinfo$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
tv196 = -300						; size = 4
tv78 = -296						; size = 4
$T66234 = -285						; size = 1
$T66235 = -273						; size = 1
$T66236 = -261						; size = 1
$T66237 = -252						; size = 12
__Next$50109 = -40					; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Assign_rv, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv
	jmp	$LN8@Assign_rv
$LN7@Assign_rv:
; Line 609
	lea	eax, DWORD PTR $T66234[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$allocator@PAVAsmCmd@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::get_allocator
	push	eax
	lea	ecx, DWORD PTR $T66235[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$allocator@PAVAsmCmd@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::get_allocator
	push	eax
	call	??$?9PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z ; std::operator!=<AsmCmd *,AsmCmd *>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN5@Assign_rv
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::clear
; Line 612
	lea	eax, DWORD PTR __Next$50109[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN4@Assign_rv
$LN3@Assign_rv:
; Line 613
	lea	ecx, DWORD PTR __Next$50109[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++
$LN4@Assign_rv:
	lea	eax, DWORD PTR $T66237[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv196[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv196[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$50109[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	mov	BYTE PTR $T66236[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T66237[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T66236[ebp]
	test	eax, eax
	je	SHORT $LN2@Assign_rv
; Line 614
	lea	ecx, DWORD PTR __Next$50109[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEAAPAVAsmCmd@@XZ ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*
	push	eax
	call	??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::forward<AsmCmd *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::push_back
	jmp	SHORT $LN3@Assign_rv
$LN2@Assign_rv:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Next$50109[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 616
	jmp	SHORT $LN8@Assign_rv
$LN5@Assign_rv:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Tidy
; Line 619
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_all
; Line 620
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 621
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 622
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 624
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 626
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN8@Assign_rv:
; Line 628
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@Assign_rv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN15@Assign_rv:
	DD	1
	DD	$LN14@Assign_rv
$LN14@Assign_rv:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN12@Assign_rv
$LN12@Assign_rv:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z$0:
	lea	ecx, DWORD PTR __Next$50109[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z$1:
	lea	ecx, DWORD PTR $T66237[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Assign_rv@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Assign_rv
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -32						; size = 4
__Lock$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z PROC	; std::_Container_base12::_Swap_all, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 211
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 216
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Swap_all
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@Swap_all:
; Line 220
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Swap_all
; Line 221
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN1@Swap_all:
; Line 222
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Swap_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN8@Swap_all:
	DD	1
	DD	$LN7@Swap_all
$LN7@Swap_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@Swap_all
$LN6@Swap_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ENDP	; std::_Container_base12::_Swap_all
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T66258 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 786
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66258[ebp], 0
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	mov	eax, DWORD PTR $T66258[ebp]
	or	eax, 1
	mov	DWORD PTR $T66258[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 788
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T66263 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end, COMDAT
; _this$ = ecx
; Line 796
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66263[ebp], 0
; Line 797
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	mov	eax, DWORD PTR $T66263[ebp]
	or	eax, 1
	mov	DWORD PTR $T66263[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 798
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T66269 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Make_iter, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66269[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	mov	edx, DWORD PTR $T66269[ebp]
	or	edx, 1
	mov	DWORD PTR $T66269[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z$1:
	mov	eax, DWORD PTR $T66269[ebp]
	and	eax, 1
	je	$LN5@Make_iter
	and	DWORD PTR $T66269[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN5@Make_iter:
	ret	0
__ehhandler$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Make_iter
PUBLIC	?allocate@?$allocator@PAVAsmCmd@@@std@@QAEPAPAVAsmCmd@@I@Z ; std::allocator<AsmCmd *>::allocate
PUBLIC	?_Xlen@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Xlen
PUBLIC	?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Buy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAE_NI@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Buy, COMDAT
; _this$ = ecx
; Line 1250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1252
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1253
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 1255
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1256
	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1257
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Xlen
; Line 1259
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1261
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?allocate@?$allocator@PAVAsmCmd@@@std@@QAEPAPAVAsmCmd@@I@Z ; std::allocator<AsmCmd *>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1262
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 1263
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN3@Buy:
; Line 1265
	mov	al, 1
$LN6@Buy:
; Line 1266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Buy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@@Z ; std::_Destroy_range<std::allocator<AsmCmd *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@@Z ; std::_Destroy_range<std::allocator<AsmCmd *> >
	add	esp, 12					; 0000000cH
; Line 1271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Destroy
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@I@Z ; std::allocator<AsmCmd *>::deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXXZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@2
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1305
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Destroy
; Line 1307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@I@Z ; std::allocator<AsmCmd *>::deallocate
$LN1@Tidy@2:
; Line 1309
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1310
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 1312
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXXZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1438
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1439
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1440
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1441
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1442
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Last$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1443
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1444
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1446
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1447
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1448
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1449
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv66[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv66[ebp]
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
PUBLIC	??$?0PAVAsmCmd@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVAsmCmd@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><AsmCmd *>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z
_TEXT	SEGMENT
$T66305 = -240						; size = 8
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z PROC ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >, COMDAT
; _this$ = ecx
; Line 439
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@PAVAsmCmd@@@std@@QAE@ABV01@@Z ; std::allocator<AsmCmd *>::allocator<AsmCmd *>
; Line 441
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0PAVAsmCmd@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVAsmCmd@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><AsmCmd *>
; Line 442
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 443
	lea	ecx, DWORD PTR $T66305[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 444
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 447
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 449
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Vector_val
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@Vector_val:
	DD	1
	DD	$LN6@Vector_val
$LN6@Vector_val:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Vector_val
$LN4@Vector_val:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@V?$allocator@PAVAsmCmd@@@1@@Z ENDP ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::~_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >, COMDAT
; _this$ = ecx
; Line 452
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 454
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0PAVAsmCmd@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVAsmCmd@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><AsmCmd *>
; Line 455
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8
; Line 457
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 459
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Vector_val@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Vector_val@2:
	DD	1
	DD	$LN6@Vector_val@2
$LN6@Vector_val@2:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Vector_val@2
$LN4@Vector_val@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >::~_Vector_val<AsmCmd *,std::allocator<AsmCmd *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@PAVAsmCmd@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@PAVAsmCmd@@@std@@QAE@XZ PROC		; std::allocator<AsmCmd *>::allocator<AsmCmd *>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVAsmCmd@@@std@@QAE@XZ ENDP		; std::allocator<AsmCmd *>::allocator<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVAsmCmd@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVAsmCmd@@@std@@QAE@ABV01@@Z PROC	; std::allocator<AsmCmd *>::allocator<AsmCmd *>, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVAsmCmd@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<AsmCmd *>::allocator<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBE_NPBQAVOptimization@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBE_NPBQAVOptimization@@@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBE_NPBQAVOptimization@@@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Inside
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::reserve
PUBLIC	?_Grow_to@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEII@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Grow_to
PUBLIC	?capacity@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::capacity
PUBLIC	?_Xlen@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::_Xlen
PUBLIC	?max_size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -20						; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXI@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::_Xlen
	jmp	SHORT $LN6@Reserve
$LN4@Reserve:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve
; Line 1296
	jmp	SHORT $LN6@Reserve
$LN2@Reserve:
; Line 1297
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEII@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::reserve
$LN6@Reserve:
; Line 1298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Reserve
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@I@Z ; std::allocator<Optimization *>::deallocate
PUBLIC	?_Destroy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXPAPAVOptimization@@0@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXXZ PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@3
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1305
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXPAPAVOptimization@@0@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Destroy
; Line 1307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@I@Z ; std::allocator<Optimization *>::deallocate
$LN1@Tidy@3:
; Line 1309
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1310
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 1312
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXXZ ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Tidy
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z
_TEXT	SEGMENT
__Pnext$ = -44						; size = 4
__Lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1438
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1439
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1440
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran@2
$LN5@Orphan_ran@2:
; Line 1441
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran@2
; Line 1442
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran@2
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Last$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN3@Orphan_ran@2
$LN2@Orphan_ran@2:
; Line 1443
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1444
	jmp	SHORT $LN1@Orphan_ran@2
$LN3@Orphan_ran@2:
; Line 1446
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1447
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran@2:
; Line 1448
	jmp	SHORT $LN5@Orphan_ran@2
$LN6@Orphan_ran@2:
; Line 1449
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran@2:
	DD	1
	DD	$LN12@Orphan_ran@2
$LN12@Orphan_ran@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@Orphan_ran@2
$LN10@Orphan_ran@2:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXPAPAVOptimization@@0@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Orphan_range
PUBLIC	??$?0PAVOptimization@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVOptimization@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Optimization *>
PUBLIC	??0?$allocator@PAVOptimization@@@std@@QAE@ABV01@@Z ; std::allocator<Optimization *>::allocator<Optimization *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z
_TEXT	SEGMENT
$T66354 = -240						; size = 8
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z PROC ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::_Vector_val<Optimization *,std::allocator<Optimization *> >, COMDAT
; _this$ = ecx
; Line 439
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@PAVOptimization@@@std@@QAE@ABV01@@Z ; std::allocator<Optimization *>::allocator<Optimization *>
; Line 441
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0PAVOptimization@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVOptimization@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Optimization *>
; Line 442
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 443
	lea	ecx, DWORD PTR $T66354[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 444
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 447
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 449
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Vector_val@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@Vector_val@3:
	DD	1
	DD	$LN6@Vector_val@3
$LN6@Vector_val@3:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Vector_val@3
$LN4@Vector_val@3:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@V?$allocator@PAVOptimization@@@1@@Z ENDP ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::_Vector_val<Optimization *,std::allocator<Optimization *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::~_Vector_val<Optimization *,std::allocator<Optimization *> >, COMDAT
; _this$ = ecx
; Line 452
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 454
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0PAVOptimization@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVOptimization@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Optimization *>
; Line 455
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8
; Line 457
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 459
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Vector_val@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Vector_val@4:
	DD	1
	DD	$LN6@Vector_val@4
$LN6@Vector_val@4:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Vector_val@4
$LN4@Vector_val@4:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Optimization *,std::allocator<Optimization *> >::~_Vector_val<Optimization *,std::allocator<Optimization *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@PAVOptimization@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@PAVOptimization@@@std@@QAE@XZ PROC	; std::allocator<Optimization *>::allocator<Optimization *>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVOptimization@@@std@@QAE@XZ ENDP	; std::allocator<Optimization *>::allocator<Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=, COMDAT
; _this$ = ecx
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 358
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
; Line 359
	mov	eax, DWORD PTR _this$[ebp]
; Line 360
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 911
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 913
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign@3
; Line 914
	push	914					; 00000392H
	push	OFFSET ??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign@3:
; Line 917
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@3
; Line 918
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign@3
$LN2@assign@3:
; Line 920
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign@3
; Line 922
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 923
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign@3:
; Line 925
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign@3:
; Line 926
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; Line 1906
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1907
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1908
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; Line 1959
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1960
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 1961
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 1962
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 1963
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 1964
	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 1966
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 1967
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 1968
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 1969
	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow:
; Line 1970
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2015
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2016
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2017
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd *>
PUBLIC	?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Reserve
PUBLIC	?_Inside@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBE_NPBQAVAsmCmd@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Inside
PUBLIC	??$addressof@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@AAPAV1@@Z ; std::addressof<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd@@@Z
_TEXT	SEGMENT
__Idx$52100 = -20					; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@AAPAV1@@Z ; std::addressof<AsmCmd *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBE_NPBQAVAsmCmd@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@2
; Line 634
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@AAPAV1@@Z ; std::addressof<AsmCmd *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
	mov	DWORD PTR __Idx$52100[ebp], eax
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@push_back@2
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Reserve
$LN3@push_back@2:
; Line 637
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$52100[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::forward<AsmCmd *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd *>
	add	esp, 12					; 0000000cH
; Line 641
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 643
	jmp	SHORT $LN5@push_back@2
$LN4@push_back@2:
; Line 645
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN1@push_back@2
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Reserve
$LN1@push_back@2:
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::forward<AsmCmd *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd *>
	add	esp, 12					; 0000000cH
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back@2:
; Line 653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::push_back
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBE_NPBQAVAsmCmd@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBE_NPBQAVAsmCmd@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@2
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@2
$LN3@Inside@2:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@2:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBE_NPBQAVAsmCmd@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Inside
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::reserve
PUBLIC	?_Grow_to@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEII@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Grow_to
PUBLIC	?capacity@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::capacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -20						; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@2
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Xlen
	jmp	SHORT $LN6@Reserve@2
$LN4@Reserve@2:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@2
; Line 1296
	jmp	SHORT $LN6@Reserve@2
$LN2@Reserve@2:
; Line 1297
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEII@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::reserve
$LN6@Reserve@2:
; Line 1298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Reserve
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVAsmCmd@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@PAPAV2@00@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Umove<AsmCmd * *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$52126 = -48					; size = 4
__Ptr$52119 = -36					; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Xlen
	jmp	$LN7@reserve
$LN5@reserve:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?allocate@?$allocator@PAVAsmCmd@@@std@@QAEPAPAVAsmCmd@@I@Z ; std::allocator<AsmCmd *>::allocate
	mov	DWORD PTR __Ptr$52119[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	eax, DWORD PTR __Ptr$52119[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAVAsmCmd@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@PAPAV2@00@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Umove<AsmCmd * *>
	jmp	SHORT $LN8@reserve
__catch$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$52119[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@I@Z ; std::allocator<AsmCmd *>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	mov	DWORD PTR __Size$52126[ebp], eax
; Line 761
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@reserve
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Destroy
; Line 765
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@I@Z ; std::allocator<AsmCmd *>::deallocate
$LN1@reserve:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$52119[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 770
	mov	eax, DWORD PTR __Size$52126[ebp]
	mov	ecx, DWORD PTR __Ptr$52119[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 771
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$52119[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN7@reserve:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXI@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::reserve
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 778
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::capacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T66424 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66424[ebp], 0
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	mov	eax, DWORD PTR $T66424[ebp]
	or	eax, 1
	mov	DWORD PTR $T66424[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVAsmCmd@@@std@@QBEIXZ	; std::allocator<AsmCmd *>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?max_size@?$allocator@PAVAsmCmd@@@std@@QBEIXZ ; std::allocator<AsmCmd *>::max_size
; Line 885
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$allocator@PAVAsmCmd@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$allocator@PAVAsmCmd@@@2@XZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@PAVAsmCmd@@@std@@QAE@ABV01@@Z ; std::allocator<AsmCmd *>::allocator<AsmCmd *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$allocator@PAVAsmCmd@@@2@XZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::get_allocator
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ$2
__ehfuncinfo$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv149 = -332						; size = 4
tv154 = -328						; size = 4
tv151 = -324						; size = 4
tv158 = -320						; size = 4
tv148 = -316						; size = 4
tv157 = -312						; size = 4
tv146 = -308						; size = 4
tv156 = -304						; size = 4
$T66432 = -296						; size = 4
$T66433 = -284						; size = 12
$T66434 = -264						; size = 4
$T66435 = -252						; size = 12
$T66436 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	lea	eax, DWORD PTR $T66433[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66432[ebp], esp
	mov	edx, DWORD PTR tv146[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv157[ebp], eax
	mov	eax, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T66435[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv158[ebp], eax
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66434[ebp], esp
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv154[ebp], eax
	lea	ecx, DWORD PTR $T66436[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
	mov	DWORD PTR tv149[ebp], eax
	lea	ecx, DWORD PTR $T66436[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T66435[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T66433[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 1219
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T66433[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ$1:
	mov	ecx, DWORD PTR $T66432[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T66435[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEXXZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEII@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	eax, DWORD PTR __Capacity$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1280
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEII@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Grow_to
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXXZ PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen@2:
; Line 1428
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXXZ ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Xlen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@I@Z PROC ; std::allocator<AsmCmd *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@I@Z ENDP ; std::allocator<AsmCmd *>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@IPAPAV1@@Z ; std::_Allocate<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@PAVAsmCmd@@@std@@QAEPAPAVAsmCmd@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVAsmCmd@@@std@@QAEPAPAVAsmCmd@@I@Z PROC ; std::allocator<AsmCmd *>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@IPAPAV1@@Z ; std::_Allocate<AsmCmd *>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVAsmCmd@@@std@@QAEPAPAVAsmCmd@@I@Z ENDP ; std::allocator<AsmCmd *>::allocate
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVOptimization@@@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEPAPAVOptimization@@PAPAV2@00@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Umove<Optimization * *>
PUBLIC	?allocate@?$allocator@PAVOptimization@@@std@@QAEPAPAVOptimization@@I@Z ; std::allocator<Optimization *>::allocate
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$52714 = -48					; size = 4
__Ptr$52707 = -36					; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@2
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::_Xlen
	jmp	$LN7@reserve@2
$LN5@reserve@2:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@2
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?allocate@?$allocator@PAVOptimization@@@std@@QAEPAPAVOptimization@@I@Z ; std::allocator<Optimization *>::allocate
	mov	DWORD PTR __Ptr$52707[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	eax, DWORD PTR __Ptr$52707[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAVOptimization@@@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEPAPAVOptimization@@PAPAV2@00@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Umove<Optimization * *>
	jmp	SHORT $LN8@reserve@2
__catch$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$52707[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@I@Z ; std::allocator<Optimization *>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::size
	mov	DWORD PTR __Size$52714[ebp], eax
; Line 761
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@reserve@2
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXPAPAVOptimization@@0@Z ; std::vector<Optimization *,std::allocator<Optimization *> >::_Destroy
; Line 765
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@I@Z ; std::allocator<Optimization *>::deallocate
$LN1@reserve@2:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$52707[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 770
	mov	eax, DWORD PTR __Size$52714[ebp]
	mov	ecx, DWORD PTR __Ptr$52707[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 771
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$52707[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN7@reserve@2:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::reserve
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 778
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::capacity
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVOptimization@@@std@@QBEIXZ ; std::allocator<Optimization *>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?max_size@?$allocator@PAVOptimization@@@std@@QBEIXZ ; std::allocator<Optimization *>::max_size
; Line 885
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::max_size
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@@Z ; std::_Destroy_range<std::allocator<Optimization *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXPAPAVOptimization@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXPAPAVOptimization@@0@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@@Z ; std::_Destroy_range<std::allocator<Optimization *> >
	add	esp, 12					; 0000000cH
; Line 1271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEXPAPAVOptimization@@0@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEII@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@QBEIXZ ; std::vector<Optimization *,std::allocator<Optimization *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@2
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@2:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	eax, DWORD PTR __Capacity$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@2
; Line 1280
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to@2:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEII@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Grow_to
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXXZ PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen@3:
; Line 1428
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IBEXXZ ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Xlen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVOptimization@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVOptimization@@@std@@QAE@ABV01@@Z PROC	; std::allocator<Optimization *>::allocator<Optimization *>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVOptimization@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<Optimization *>::allocator<Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@I@Z PROC ; std::allocator<Optimization *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@I@Z ENDP ; std::allocator<Optimization *>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEABQAVAsmCmd@@XZ ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEAAPAVAsmCmd@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEAAPAVAsmCmd@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEABQAVAsmCmd@@XZ ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEAAPAVAsmCmd@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 46
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 47
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@PAPAVAsmCmd@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
PUBLIC	??_C@_1PA@NAAAKPOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
;	COMDAT ??_C@_1PA@NAAAKPOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@NAAAKPOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 's', 00H
	DB	'm', 00H, 'C', 00H, 'm', 00H, 'd', 00H, ' ', 00H, '*', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 'A', 00H, 's', 00H, 'm', 00H, 'C', 00H, 'm', 00H
	DB	'd', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+'
	DB	00H, '=', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=, COMDAT
; _this$ = ecx
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	esi, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator@5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [edx+ecx*4]
	cmp	DWORD PTR [eax+8], edx
	jae	SHORT $LN2@operator@5
$LN1@operator@5:
; Line 157
	push	157					; 0000009dH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 158
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@5
	xor	ecx, ecx
	jne	SHORT $LN6@operator@5
$LN5@operator@5:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	158					; 0000009eH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@5
	int	3
$LN6@operator@5:
	push	0
	push	158					; 0000009eH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1PA@NAAAKPOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@5:
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
; Line 170
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVAsmCmd@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,AsmCmd *,int,AsmCmd * const *,AsmCmd * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1516
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1517
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1518
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1519
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv185 = -248						; size = 4
tv184 = -248						; size = 4
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; Line 1919
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1920
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1921
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 1922
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 1923
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 1925
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy
; Line 1927
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 1928
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 1929
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 1932
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1933
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1934
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1935
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1936
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1937
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv185[ebp], eax
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1939
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1940
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1941
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 1942
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 1944
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 1945
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 1946
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1947
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1948
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 1949
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 1950
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; Line 1973
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1974
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@3
$LN2@Inside@3:
; Line 1975
	xor	al, al
	jmp	SHORT $LN4@Inside@3
; Line 1976
	jmp	SHORT $LN4@Inside@3
$LN3@Inside@3:
; Line 1977
	mov	al, 1
$LN4@Inside@3:
; Line 1978
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??M?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator<
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv253 = -312						; size = 4
tv249 = -312						; size = 4
tv252 = -308						; size = 4
tv248 = -308						; size = 4
$T66545 = -300						; size = 4
$T66546 = -288						; size = 4
$T66554 = -276						; size = 4
__Ptr$53445 = -72					; size = 4
__Last$ = -60						; size = 12
__First$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 12
__Last_arg$ = 24					; size = 12
?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase, COMDAT
; _this$ = ecx
; Line 1190
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66554[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1191
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66545[ebp], esp
	lea	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv248[ebp], eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Make_iter
	mov	DWORD PTR tv249[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1192
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66546[ebp], esp
	lea	eax, DWORD PTR __Last_arg$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv252[ebp], eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Make_iter
	mov	DWORD PTR tv253[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1194
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@erase@3
; Line 1199
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator<
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@erase@3
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@erase@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __First$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@erase@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Last$[ebp+8]
	jae	SHORT $LN2@erase@3
$LN1@erase@3:
; Line 1200
	push	1200					; 000004b0H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@erase@3:
; Line 1202
	mov	eax, DWORD PTR __First$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp+8]
	push	eax
	call	??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00@Z ; std::_Move<AsmCmd * *,AsmCmd * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$53445[ebp], eax
; Line 1203
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
; Line 1210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Ptr$53445[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Destroy
; Line 1211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$53445[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@erase@3:
; Line 1213
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T66554[ebp]
	or	ecx, 1
	mov	DWORD PTR $T66554[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First_arg$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1214
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@erase@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN18@erase@3:
	DD	2
	DD	$LN17@erase@3
$LN17@erase@3:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN14@erase@3
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN15@erase@3
$LN15@erase@3:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN14@erase@3:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First_arg$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$3:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$5:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z$6:
	mov	eax, DWORD PTR $T66554[ebp]
	and	eax, 1
	je	$LN13@erase@3
	and	DWORD PTR $T66554[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN13@erase@3:
	ret	0
__ehhandler$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@0@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::erase
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@PAVAsmCmd@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Count$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$allocator@PAVAsmCmd@@@std@@QBEIXZ PROC	; std::allocator<AsmCmd *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVAsmCmd@@@std@@QBEIXZ ENDP	; std::allocator<AsmCmd *>::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVOptimization@@@std@@YAPAPAVOptimization@@IPAPAV1@@Z ; std::_Allocate<Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@PAVOptimization@@@std@@QAEPAPAVOptimization@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVOptimization@@@std@@QAEPAPAVOptimization@@I@Z PROC ; std::allocator<Optimization *>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVOptimization@@@std@@YAPAPAVOptimization@@IPAPAV1@@Z ; std::_Allocate<Optimization *>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVOptimization@@@std@@QAEPAPAVOptimization@@I@Z ENDP ; std::allocator<Optimization *>::allocate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVOptimization@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Count$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$allocator@PAVOptimization@@@std@@QBEIXZ PROC ; std::allocator<Optimization *>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@3
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@3
$LN3@max_size@3:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@3:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVOptimization@@@std@@QBEIXZ ENDP ; std::allocator<Optimization *>::max_size
_TEXT	ENDS
PUBLIC	??_C@_1OO@NLMHBPEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
;	COMDAT ??_C@_1OO@NLMHBPEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_1OO@NLMHBPEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 's', 00H
	DB	'm', 00H, 'C', 00H, 'm', 00H, 'd', 00H, ' ', 00H, '*', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 'A', 00H, 's', 00H, 'm', 00H, 'C', 00H, 'm', 00H
	DB	'd', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEABQAVAsmCmd@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEABQAVAsmCmd@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@6
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator@6
$LN1@operator@6:
; Line 70
	push	70					; 00000046H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 71
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@6
	xor	ecx, ecx
	jne	SHORT $LN6@operator@6
$LN5@operator@6:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	71					; 00000047H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@6
	int	3
$LN6@operator@6:
	push	0
	push	71					; 00000047H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1OO@NLMHBPEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@6:
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEABQAVAsmCmd@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*
_TEXT	ENDS
PUBLIC	??_C@_1PA@KFHCKHKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
;	COMDAT ??_C@_1PA@KFHCKHKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@KFHCKHKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 's', 00H
	DB	'm', 00H, 'C', 00H, 'm', 00H, 'd', 00H, ' ', 00H, '*', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 'A', 00H, 's', 00H, 'm', 00H, 'C', 00H, 'm', 00H
	DB	'd', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+'
	DB	00H, '+', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@7
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator@7
$LN1@operator@7:
; Line 99
	push	99					; 00000063H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 100
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@7
	xor	ecx, ecx
	jne	SHORT $LN6@operator@7
$LN5@operator@7:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	100					; 00000064H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@7
	int	3
$LN6@operator@7:
	push	0
	push	100					; 00000064H
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1PA@KFHCKHKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@7:
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Compat
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Compat
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+8]
	sete	al
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator==
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Count$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], -1
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@4
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@4
$LN3@max_size@4:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@4:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??M?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??M?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator<, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Compat
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	sbb	eax, eax
	neg	eax
; Line 215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??M?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator<
_TEXT	ENDS
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1OI@OJEJGHEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@OJEJGHEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OI@OJEJGHEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 's', 00H
	DB	'm', 00H, 'C', 00H, 'm', 00H, 'd', 00H, ' ', 00H, '*', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 'A', 00H, 's', 00H, 'm', 00H, 'C', 00H, 'm', 00H
	DB	'd', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Compat, COMDAT
; _this$ = ecx
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 236
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@Compat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN3@Compat
$LN1@Compat:
; Line 238
	push	238					; 000000eeH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 239
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@Compat
	xor	ecx, ecx
	jne	SHORT $LN6@Compat
$LN5@Compat:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@Compat
	int	3
$LN6@Compat:
	push	0
	push	239					; 000000efH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1OI@OJEJGHEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN3@Compat:
; Line 241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Compat
_TEXT	ENDS
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?width@ios_base@std@@QAE_J_J@Z			; std::ios_base::width
PUBLIC	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::basic_ios<char,std::char_traits<char> >::fill
PUBLIC	?flags@ios_base@std@@QBEHXZ			; std::ios_base::flags
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	?width@ios_base@std@@QBE_JXZ			; std::ios_base::width
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -352						; size = 8
tv293 = -345						; size = 1
tv286 = -345						; size = 1
tv341 = -344						; size = 8
tv292 = -344						; size = 4
tv285 = -344						; size = 4
tv291 = -340						; size = 4
tv288 = -340						; size = 8
tv284 = -340						; size = 4
tv329 = -336						; size = 8
tv290 = -336						; size = 4
tv283 = -336						; size = 4
tv287 = -332						; size = 4
tv137 = -332						; size = 4
tv289 = -329						; size = 1
tv282 = -329						; size = 1
$T66602 = -324						; size = 4
$T66603 = -312						; size = 4
$T66604 = -300						; size = 4
$T66605 = -288						; size = 4
$T66606 = -276						; size = 4
__Ok$ = -72						; size = 8
__Pad$ = -56						; size = 8
__Count$ = -40						; size = 8
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; Line 767
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 770
	mov	DWORD PTR __State$[ebp], 0
; Line 771
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 773
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?width@ios_base@std@@QBE_JXZ		; std::ios_base::width
	mov	DWORD PTR tv329[ebp], eax
	mov	DWORD PTR tv329[ebp+4], edx
	cmp	DWORD PTR tv329[ebp+4], 0
	jl	SHORT $LN17@operator@8
	jg	SHORT $LN25@operator@8
	cmp	DWORD PTR tv329[ebp], 0
	jbe	SHORT $LN17@operator@8
$LN25@operator@8:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?width@ios_base@std@@QBE_JXZ		; std::ios_base::width
	mov	DWORD PTR tv341[ebp], eax
	mov	DWORD PTR tv341[ebp+4], edx
	mov	eax, DWORD PTR tv341[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator@8
	jg	SHORT $LN26@operator@8
	mov	ecx, DWORD PTR tv341[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator@8
$LN26@operator@8:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	?width@ios_base@std@@QBE_JXZ		; std::ios_base::width
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator@8
$LN17@operator@8:
	mov	DWORD PTR tv135[ebp], 0
	mov	DWORD PTR tv135[ebp+4], 0
$LN18@operator@8:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 774
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 776
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
	cmp	eax, -1
	jne	SHORT $LN14@operator@8
; Line 777
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 778
	jmp	$LN13@operator@8
$LN14@operator@8:
; Line 780
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 781
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?flags@ios_base@std@@QBEHXZ		; std::ios_base::flags
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator@8
	jmp	SHORT $LN10@operator@8
$LN9@operator@8:
; Line 782
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN10@operator@8:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator@8
	jg	SHORT $LN27@operator@8
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator@8
$LN27@operator@8:
; Line 784
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::basic_ios<char,std::char_traits<char> >::fill
	mov	BYTE PTR tv282[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	mov	DWORD PTR tv283[ebp], eax
	movzx	eax, BYTE PTR tv282[ebp]
	push	eax
	mov	ecx, DWORD PTR tv283[ebp]
	call	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
	mov	DWORD PTR tv284[ebp], eax
	mov	ecx, DWORD PTR tv284[ebp]
	mov	DWORD PTR $T66602[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv285[ebp], eax
	mov	edx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T66603[ebp], edx
	lea	eax, DWORD PTR $T66602[ebp]
	push	eax
	lea	ecx, DWORD PTR $T66603[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	mov	BYTE PTR tv286[ebp], al
	movzx	edx, BYTE PTR tv286[ebp]
	test	edx, edx
	je	SHORT $LN7@operator@8
; Line 786
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 787
	jmp	SHORT $LN11@operator@8
$LN7@operator@8:
; Line 790
	jmp	$LN9@operator@8
$LN11@operator@8:
; Line 791
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator@8
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	mov	DWORD PTR tv287[ebp], eax
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv287[ebp]
	call	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
	mov	DWORD PTR tv288[ebp], eax
	mov	DWORD PTR tv288[ebp+4], edx
	mov	eax, DWORD PTR tv288[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN28@operator@8
	mov	ecx, DWORD PTR tv288[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN6@operator@8
$LN28@operator@8:
; Line 792
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN6@operator@8:
; Line 794
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN5@operator@8
	jmp	SHORT $LN4@operator@8
$LN3@operator@8:
; Line 795
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator@8:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN5@operator@8
	jg	SHORT $LN29@operator@8
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN5@operator@8
$LN29@operator@8:
; Line 797
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::basic_ios<char,std::char_traits<char> >::fill
	mov	BYTE PTR tv289[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	mov	DWORD PTR tv290[ebp], eax
	movzx	eax, BYTE PTR tv289[ebp]
	push	eax
	mov	ecx, DWORD PTR tv290[ebp]
	call	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
	mov	DWORD PTR tv291[ebp], eax
	mov	ecx, DWORD PTR tv291[ebp]
	mov	DWORD PTR $T66604[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv292[ebp], eax
	mov	edx, DWORD PTR tv292[ebp]
	mov	DWORD PTR $T66605[ebp], edx
	lea	eax, DWORD PTR $T66604[ebp]
	push	eax
	lea	ecx, DWORD PTR $T66605[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	mov	BYTE PTR tv293[ebp], al
	movzx	edx, BYTE PTR tv293[ebp]
	test	edx, edx
	je	SHORT $LN1@operator@8
; Line 799
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 800
	jmp	SHORT $LN5@operator@8
$LN1@operator@8:
; Line 801
	jmp	$LN3@operator@8
$LN5@operator@8:
; Line 802
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?width@ios_base@std@@QAE_J_J@Z		; std::ios_base::width
	jmp	SHORT $LN19@operator@8
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 803
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN13@operator@8
	ret	0
$LN19@operator@8:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator@8:
; Line 806
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
; Line 807
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T66606[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T66606[ebp]
; Line 808
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@operator@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN33@operator@8:
	DD	1
	DD	$LN32@operator@8
$LN32@operator@8:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN30@operator@8
$LN30@operator@8:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 552
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 553
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 554
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; Line 562
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 563
	or	eax, -1
; Line 564
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flags@ios_base@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?flags@ios_base@std@@QBEHXZ PROC			; std::ios_base::flags, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 395
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 396
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?flags@ios_base@std@@QBEHXZ ENDP			; std::ios_base::flags
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?width@ios_base@std@@QBE_JXZ PROC			; std::ios_base::width, COMDAT
; _this$ = ecx
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 440
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx+36]
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?width@ios_base@std@@QBE_JXZ ENDP			; std::ios_base::width
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QAE_J_J@Z
_TEXT	SEGMENT
__Oldwidth$ = -24					; size = 8
_this$ = -8						; size = 4
__Newwidth$ = 8						; size = 8
?width@ios_base@std@@QAE_J_J@Z PROC			; std::ios_base::width, COMDAT
; _this$ = ecx
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR __Oldwidth$[ebp], ecx
	mov	edx, DWORD PTR [eax+36]
	mov	DWORD PTR __Oldwidth$[ebp+4], edx
; Line 446
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newwidth$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	edx, DWORD PTR __Newwidth$[ebp+4]
	mov	DWORD PTR [eax+36], edx
; Line 447
	mov	eax, DWORD PTR __Oldwidth$[ebp]
	mov	edx, DWORD PTR __Oldwidth$[ebp+4]
; Line 448
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?width@ios_base@std@@QAE_J_J@Z ENDP			; std::ios_base::width
_TEXT	ENDS
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?rdstate@ios_base@std@@QBEHXZ			; std::ios_base::rdstate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	cmp	DWORD PTR __State$[ebp], 0
	je	SHORT $LN2@setstate
; Line 56
	movzx	eax, BYTE PTR __Reraise$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?rdstate@ios_base@std@@QBEHXZ		; std::ios_base::rdstate
	or	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
$LN2@setstate:
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?rdstate@ios_base@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?rdstate@ios_base@std@@QBEHXZ PROC			; std::ios_base::rdstate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 337
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?rdstate@ios_base@std@@QBEHXZ ENDP			; std::ios_base::rdstate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
_TEXT	ENDS
PUBLIC	?clear@ios_base@std@@QAEXH_N@Z			; std::ios_base::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jne	SHORT $LN3@clear
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@clear
$LN3@clear:
	mov	edx, DWORD PTR __State$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN4@clear:
	movzx	eax, BYTE PTR __Reraise$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
_TEXT	ENDS
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ ; `string'
PUBLIC	__TI4?AVfailure@ios_base@std@@
PUBLIC	??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@	; `string'
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ; std::make_error_code
PUBLIC	??1failure@ios_base@std@@UAE@XZ			; std::ios_base::failure::~failure
PUBLIC	__CTA4?AVfailure@ios_base@std@@
PUBLIC	__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	??0failure@ios_base@std@@QAE@ABV012@@Z		; std::ios_base::failure::failure
PUBLIC	__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	??0system_error@std@@QAE@ABV01@@Z		; std::system_error::system_error
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
_DATA	SEGMENT
??_R0?AVsystem_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsystem_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
xdata$x	SEGMENT
__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20 DD 00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0system_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVfailure@ios_base@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
xdata$x	SEGMENT
__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20 DD 00H
	DD	FLAT:??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0failure@ios_base@std@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT __CTA4?AVfailure@ios_base@std@@
xdata$x	SEGMENT
__CTA4?AVfailure@ios_base@std@@ DD 04H
	DD	FLAT:__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
	DD	FLAT:__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ DB 'ios_base::failbit se'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT __TI4?AVfailure@ios_base@std@@
xdata$x	SEGMENT
__TI4?AVfailure@ios_base@std@@ DD 00H
	DD	FLAT:??1failure@ios_base@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@ DB 'ios_base::badbit set', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?clear@ios_base@std@@QAEXH_N@Z
_TEXT	SEGMENT
$T66651 = -332						; size = 20
$T66652 = -304						; size = 8
$T66653 = -288						; size = 20
$T66654 = -260						; size = 8
$T66655 = -244						; size = 20
$T66656 = -216						; size = 8
_this$ = -8						; size = 4
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?clear@ios_base@std@@QAEXH_N@Z PROC			; std::ios_base::clear, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR __State$[ebp]
	and	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 312
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	and	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN8@clear@2
	jmp	$LN10@clear@2
$LN8@clear@2:
; Line 314
	movzx	eax, BYTE PTR __Reraise$[ebp]
	test	eax, eax
	je	SHORT $LN6@clear@2
; Line 315
	push	0
	push	0
	call	__CxxThrowException@8
	jmp	$LN10@clear@2
$LN6@clear@2:
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	and	edx, DWORD PTR [ecx+16]
	and	edx, 4
	je	SHORT $LN4@clear@2
; Line 317
	push	1
	lea	eax, DWORD PTR $T66652[ebp]
	push	eax
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ; std::make_error_code
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
	lea	ecx, DWORD PTR $T66651[ebp]
	call	??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ; std::ios_base::failure::failure
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	ecx, DWORD PTR $T66651[ebp]
	push	ecx
	call	__CxxThrowException@8
	jmp	SHORT $LN10@clear@2
$LN4@clear@2:
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	and	edx, DWORD PTR [ecx+16]
	and	edx, 2
	je	SHORT $LN2@clear@2
; Line 319
	push	1
	lea	eax, DWORD PTR $T66654[ebp]
	push	eax
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ; std::make_error_code
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
	lea	ecx, DWORD PTR $T66653[ebp]
	call	??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ; std::ios_base::failure::failure
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	ecx, DWORD PTR $T66653[ebp]
	push	ecx
	call	__CxxThrowException@8
; Line 320
	jmp	SHORT $LN10@clear@2
$LN2@clear@2:
; Line 321
	push	1
	lea	eax, DWORD PTR $T66656[ebp]
	push	eax
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ; std::make_error_code
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
	lea	ecx, DWORD PTR $T66655[ebp]
	call	??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ; std::ios_base::failure::failure
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	ecx, DWORD PTR $T66655[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN10@clear@2:
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?clear@ios_base@std@@QAEXH_N@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
PUBLIC	??0error_code@std@@QAE@HABVerror_category@1@@Z	; std::error_code::error_code
EXTRN	?iostream_category@std@@YAABVerror_category@1@XZ:PROC ; std::iostream_category
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Errno$ = 12						; size = 4
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z PROC ; std::make_error_code, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\system_error
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 447
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	push	eax
	mov	eax, DWORD PTR __Errno$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_code@std@@QAE@HABVerror_category@1@@Z ; std::error_code::error_code
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 448
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ENDP ; std::make_error_code
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0error_code@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_code@std@@QAE@HABVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_code@std@@QAE@HABVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	??0system_error@std@@QAE@Verror_code@1@PBD@Z	; std::system_error::system_error
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
EXTRN	??_Efailure@ios_base@std@@UAEPAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
;	COMDAT ??_R2system_error@std@@8
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
rdata$r	SEGMENT
??_R2system_error@std@@8 DD FLAT:??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD FLAT:??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD FLAT:??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@system_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 00H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVfailure@ios_base@std@@@8
	DD	FLAT:??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DD FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DD	FLAT:??_Efailure@ios_base@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
__Errcode$ = 12						; size = 4
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z PROC	; std::ios_base::failure::failure, COMDAT
; _this$ = ecx
; Line 237
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errcode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0system_error@std@@QAE@Verror_code@1@PBD@Z ; std::system_error::system_error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7failure@ios_base@std@@6B@
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ENDP	; std::ios_base::failure::failure
_TEXT	ENDS
PUBLIC	?_Makestr@system_error@std@@AAEXXZ		; std::system_error::_Makestr
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
EXTRN	??_Esystem_error@std@@UAEPAXI@Z:PROC		; std::system_error::`vector deleting destructor'
;	COMDAT ??_R4system_error@std@@6B@
; File c:\program files\microsoft visual studio 10.0\vc\include\system_error
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 00H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DD FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DD	FLAT:??_Esystem_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0system_error@std@@QAE@Verror_code@1@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@PBD@Z$0
__ehfuncinfo$??0system_error@std@@QAE@Verror_code@1@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0system_error@std@@QAE@Verror_code@1@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0system_error@std@@QAE@Verror_code@1@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Errcode$ = 8						; size = 8
__Message$ = 16						; size = 4
??0system_error@std@@QAE@Verror_code@1@PBD@Z PROC	; std::system_error::system_error, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0system_error@std@@QAE@Verror_code@1@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Errcode$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR __Errcode$[ebp+4]
	mov	DWORD PTR [eax+16], edx
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Makestr@system_error@std@@AAEXXZ	; std::system_error::_Makestr
; Line 518
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1runtime_error@std@@UAE@XZ
__ehhandler$??0system_error@std@@QAE@Verror_code@1@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0system_error@std@@QAE@Verror_code@1@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0system_error@std@@QAE@Verror_code@1@PBD@Z ENDP	; std::system_error::system_error
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\stdexcept
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7runtime_error@std@@6B@
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Makestr@system_error@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Makestr@system_error@std@@AAEXXZ PROC			; std::system_error::_Makestr, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\system_error
; Line 562
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 567
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Makestr@system_error@std@@AAEXXZ ENDP			; std::system_error::_Makestr
_TEXT	ENDS
PUBLIC	??1system_error@std@@UAE@XZ			; std::system_error::~system_error
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gsystem_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gsystem_error@std@@UAEPAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1system_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gsystem_error@std@@UAEPAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1system_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1system_error@std@@UAE@XZ PROC			; std::system_error::~system_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1system_error@std@@UAE@XZ ENDP			; std::system_error::~system_error
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gfailure@ios_base@std@@UAEPAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1failure@ios_base@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gfailure@ios_base@std@@UAEPAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1failure@ios_base@std@@UAE@XZ PROC			; std::ios_base::failure::~failure, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1system_error@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1failure@ios_base@std@@UAE@XZ ENDP			; std::ios_base::failure::~failure
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0failure@ios_base@std@@QAE@ABV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0system_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7failure@ios_base@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0failure@ios_base@std@@QAE@ABV012@@Z ENDP		; std::ios_base::failure::failure
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0system_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0system_error@std@@QAE@ABV01@@Z PROC			; std::system_error::system_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0runtime_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0system_error@std@@QAE@ABV01@@Z ENDP			; std::system_error::system_error
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ PROC ; std::basic_ios<char,std::char_traits<char> >::fill, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+64]
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ENDP ; std::basic_ios<char,std::char_traits<char> >::fill
_TEXT	ENDS
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
_TEXT	SEGMENT
tv78 = -228						; size = 4
tv85 = -224						; size = 8
$T66706 = -212						; size = 4
_this$ = -8						; size = 4
__Ch$ = 8						; size = 1
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputc, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
	mov	DWORD PTR tv85[ebp], eax
	mov	DWORD PTR tv85[ebp+4], edx
	cmp	DWORD PTR tv85[ebp+4], 0
	jl	SHORT $LN3@sputc
	jg	SHORT $LN5@sputc
	cmp	DWORD PTR tv85[ebp], 0
	jbe	SHORT $LN3@sputc
$LN5@sputc:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
	mov	DWORD PTR $T66706[ebp], eax
	mov	eax, DWORD PTR $T66706[ebp]
	mov	cl, BYTE PTR __Ch$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR $T66706[ebp]
	push	edx
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@sputc
$LN3@sputc:
	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
$LN4@sputc:
	mov	eax, DWORD PTR tv78[ebp]
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 546
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 547
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 548
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR [ecx], edx
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR tv76[ebp]
; Line 306
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT
; _this$ = ecx
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Pnavail
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@Pnavail
$LN3@Pnavail:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Pnavail:
	mov	eax, DWORD PTR tv69[ebp]
	cdq
; Line 311
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
_TEXT	ENDS
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	?good@ios_base@std@@QBE_NXZ			; std::ios_base::good
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 115
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?good@ios_base@std@@QBE_NXZ		; std::ios_base::good
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
	test	eax, eax
	je	SHORT $LN1@sentry
; Line 116
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN1@sentry:
; Line 117
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?good@ios_base@std@@QBE_NXZ		; std::ios_base::good
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 118
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?good@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?good@ios_base@std@@QBE_NXZ PROC			; std::ios_base::good, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 358
	mov	ecx, DWORD PTR _this$[ebp]
	call	?rdstate@ios_base@std@@QBEHXZ		; std::ios_base::rdstate
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?good@ios_base@std@@QBE_NXZ ENDP			; std::ios_base::good
_TEXT	ENDS
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?fail@ios_base@std@@QBE_NXZ			; std::ios_base::fail
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT
__State$ = -20						; size = 4
_this$ = -8						; size = 4
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 570
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 571
	mov	DWORD PTR __State$[ebp], 0
; Line 572
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?fail@ios_base@std@@QBE_NXZ		; std::ios_base::fail
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@flush
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	mov	ecx, eax
	call	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
	cmp	eax, -1
	jne	SHORT $LN1@flush
; Line 573
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN1@flush:
; Line 574
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
; Line 575
	mov	eax, DWORD PTR _this$[ebp]
; Line 576
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?fail@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?fail@ios_base@std@@QBE_NXZ PROC			; std::ios_base::fail, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 369
	mov	ecx, DWORD PTR _this$[ebp]
	call	?rdstate@ios_base@std@@QBEHXZ		; std::ios_base::rdstate
	and	eax, 6
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 370
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?fail@ios_base@std@@QBE_NXZ ENDP			; std::ios_base::fail
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
_TEXT	ENDS
PUBLIC	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 123
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry@2
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN2@sentry@2:
; Line 129
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+4]
	neg	eax
	sbb	eax, eax
	neg	eax
	sub	eax, 1
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$0
__unwindtable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$2
__ehfuncinfo$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv79 = -224						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Osfx, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	?flags@ios_base@std@@QBEHXZ		; std::ios_base::flags
	mov	DWORD PTR tv79[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	and	eax, 2
	je	SHORT $LN1@Osfx
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN1@Osfx:
	jmp	SHORT $LN5@Osfx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$0:
; Line 161
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN3@Osfx
	ret	0
$LN5@Osfx:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Osfx:
; Line 162
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv90 = -208						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+4]
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+4]
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas:
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv90 = -208						; size = 4
_this$ = -8						; size = 4
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+4]
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	test	eax, eax
	je	SHORT $LN2@Sentry_bas@2
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+4]
	call	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas@2:
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\string
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 167
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1853
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1854
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Line 1855
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
tv133 = -224						; size = 4
tv134 = -220						; size = 4
tv90 = -220						; size = 4
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; Line 1888
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1890
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@compare
; Line 1891
	push	1891					; 00000763H
	push	OFFSET ??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@compare:
; Line 1894
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN2@compare
; Line 1895
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN2@compare:
; Line 1896
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __N0$[ebp]
	jae	SHORT $LN1@compare
; Line 1897
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __N0$[ebp], ecx
$LN1@compare:
; Line 1900
	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN6@compare
	mov	ecx, DWORD PTR __N0$[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	jmp	SHORT $LN7@compare
$LN6@compare:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv90[ebp], edx
$LN7@compare:
	mov	eax, DWORD PTR tv90[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ans$[ebp], eax
; Line 1902
	cmp	DWORD PTR __Ans$[ebp], 0
	je	SHORT $LN10@compare
	mov	eax, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN11@compare
$LN10@compare:
	mov	ecx, DWORD PTR __N0$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN8@compare
	mov	DWORD PTR tv133[ebp], -1
	jmp	SHORT $LN9@compare
$LN8@compare:
	mov	edx, DWORD PTR __N0$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Count$[ebp]
	setne	al
	mov	DWORD PTR tv133[ebp], eax
$LN9@compare:
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv134[ebp], ecx
$LN11@compare:
	mov	eax, DWORD PTR tv134[ebp]
$LN5@compare:
; Line 1903
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 486
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
; Line 487
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\string
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 187
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1875
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1876
	push	1876					; 00000754H
	push	OFFSET ??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1877
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Line 1878
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd2 *>
PUBLIC	??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z ; std::forward<AsmCmd2 *>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$0
__ehfuncinfo$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
_TEXT	SEGMENT
tv90 = -248						; size = 4
tv89 = -244						; size = 4
$T66787 = -236						; size = 4
$T66791 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>, COMDAT
; _this$ = ecx
; Line 673
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66791[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 675
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z ; std::forward<AsmCmd2 *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66787[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd2 *>
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR $T66791[ebp]
	or	ecx, 1
	mov	DWORD PTR $T66791[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 676
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$2:
	mov	eax, DWORD PTR $T66791[ebp]
	and	eax, 1
	je	$LN6@insert
	and	DWORD PTR $T66791[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN6@insert:
	ret	0
__ehhandler$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$insert@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd2 *>
PUBLIC	??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd1 *>
PUBLIC	??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z ; std::forward<AsmCmd1 *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$0
__ehfuncinfo$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
_TEXT	SEGMENT
tv90 = -248						; size = 4
tv89 = -244						; size = 4
$T66801 = -236						; size = 4
$T66805 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>, COMDAT
; _this$ = ecx
; Line 673
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T66805[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 675
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z ; std::forward<AsmCmd1 *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66801[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd1 *>
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR $T66805[ebp]
	or	ecx, 1
	mov	DWORD PTR $T66805[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 676
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$2:
	mov	eax, DWORD PTR $T66805[ebp]
	and	eax, 1
	je	$LN6@insert@2
	and	DWORD PTR $T66805[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN6@insert@2:
	ret	0
__ehhandler$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$insert@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::insert<AsmCmd1 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\string
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 217
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T66820 = -256						; size = 4
__Ans$ = -52						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T66820[ebp], 0
; Line 37
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 38
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	esi, eax
	push	esi
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Line 39
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 40
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 41
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T66820[ebp]
	or	ecx, 1
	mov	DWORD PTR $T66820[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 42
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@9
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@operator@9:
	DD	1
	DD	$LN8@operator@9
$LN8@operator@9:
	DD	-52					; ffffffccH
	DD	32					; 00000020H
	DD	$LN6@operator@9
$LN6@operator@9:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$1:
	mov	eax, DWORD PTR $T66820[ebp]
	and	eax, 1
	je	$LN5@operator@9
	and	DWORD PTR $T66820[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@operator@9:
	ret	0
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z
_TEXT	SEGMENT
$T66834 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T66834[ebp], 0
; Line 147
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T66834[ebp]
	or	ecx, 1
	mov	DWORD PTR $T66834[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z
_TEXT	SEGMENT
$T66839 = -200						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T66839[ebp], 0
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T66839[ebp]
	or	ecx, 1
	mov	DWORD PTR $T66839[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; Line 689
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 690
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 691
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 692
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z$2
__ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z
_TEXT	SEGMENT
tv139 = -268						; size = 4
tv142 = -264						; size = 4
tv138 = -260						; size = 4
tv145 = -256						; size = 4
$T66851 = -248						; size = 4
$T66852 = -236						; size = 4
$T66853 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Ptr$ = 32						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; _this$ = ecx
; Line 1315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66852[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv145[ebp], eax
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T66853[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv139[ebp], eax
	mov	eax, DWORD PTR tv139[ebp]
	mov	DWORD PTR $T66851[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T66851[ebp]
; Line 1319
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z$2:
	mov	ecx, DWORD PTR $T66852[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@0PAPAV2@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YA$$QAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YA$$QAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YA$$QAV?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<AsmCmd *,std::allocator<AsmCmd *> > >
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<AsmCmd * *,AsmCmd * *>
PUBLIC	??$_Ptr_cat@PAVAsmCmd@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAsmCmd@@0@Z ; std::_Ptr_cat<AsmCmd *,AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00@Z
_TEXT	SEGMENT
$T66868 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00@Z PROC ; std::_Move<AsmCmd * *,AsmCmd * *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 2533
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2535
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVAsmCmd@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAsmCmd@@0@Z ; std::_Ptr_cat<AsmCmd *,AsmCmd *>
	add	esp, 8
	mov	BYTE PTR $T66868[ebp], al
	movzx	edx, BYTE PTR $T66868[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<AsmCmd * *,AsmCmd * *>
	add	esp, 16					; 00000010H
; Line 2536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00@Z ENDP ; std::_Move<AsmCmd * *,AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$addressof@PAVOptimization@@@std@@YAPAPAVOptimization@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAVOptimization@@@std@@YAPAPAVOptimization@@AAPAV1@@Z PROC ; std::addressof<Optimization *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAVOptimization@@@std@@YAPAPAVOptimization@@AAPAV1@@Z ENDP ; std::addressof<Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z PROC ; std::forward<Optimization *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z ENDP ; std::forward<Optimization *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z ; std::allocator<Optimization *>::construct
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAVOptimization@@@std@@PAVOptimization@@PAV3@@std@@YAXAAV?$allocator@PAVOptimization@@@0@PAPAVOptimization@@$$QAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVOptimization@@@std@@PAVOptimization@@PAV3@@std@@YAXAAV?$allocator@PAVOptimization@@@0@PAPAVOptimization@@$$QAPAV2@@Z PROC ; std::_Cons_val<std::allocator<Optimization *>,Optimization *,Optimization *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z ; std::forward<Optimization *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z ; std::allocator<Optimization *>::construct
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVOptimization@@@std@@PAVOptimization@@PAV3@@std@@YAXAAV?$allocator@PAVOptimization@@@0@PAPAVOptimization@@$$QAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<Optimization *>,Optimization *,Optimization *>
_TEXT	ENDS
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator==<char,char>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$?8PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z ; std::operator==<AsmCmd *,AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?9PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z PROC ; std::operator!=<AsmCmd *,AsmCmd *>, COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z ; std::operator==<AsmCmd *,AsmCmd *>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z ENDP ; std::operator!=<AsmCmd *,AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z PROC ; std::forward<AsmCmd *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ENDP ; std::forward<AsmCmd *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<AsmCmd *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@@Z
_TEXT	SEGMENT
$T66889 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@@Z PROC ; std::_Destroy_range<std::allocator<AsmCmd *> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVAsmCmd@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAsmCmd@@0@Z ; std::_Ptr_cat<AsmCmd *,AsmCmd *>
	add	esp, 8
	mov	BYTE PTR $T66889[ebp], al
	movzx	edx, BYTE PTR $T66889[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<AsmCmd *> >
	add	esp, 16					; 00000010H
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<AsmCmd *> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?0PAVAsmCmd@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVAsmCmd@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0PAVAsmCmd@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVAsmCmd@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><AsmCmd *>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAVAsmCmd@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVAsmCmd@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?0PAVOptimization@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVOptimization@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0PAVOptimization@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVOptimization@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Optimization *>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAVOptimization@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVOptimization@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$addressof@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@AAPAV1@@Z PROC ; std::addressof<AsmCmd *>, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@AAPAV1@@Z ENDP ; std::addressof<AsmCmd *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z ; std::allocator<AsmCmd *>::construct
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAV2@@Z PROC ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd *>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::forward<AsmCmd *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z ; std::allocator<AsmCmd *>::construct
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVAsmCmd@@PAPAV1@V?$allocator@PAVAsmCmd@@@std@@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@@Z ; std::_Uninitialized_move<AsmCmd * *,AsmCmd * *,std::allocator<AsmCmd *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAPAVAsmCmd@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVAsmCmd@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@PAPAV2@00@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Umove<AsmCmd * *>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAPAVAsmCmd@@PAPAV1@V?$allocator@PAVAsmCmd@@@std@@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@@Z ; std::_Uninitialized_move<AsmCmd * *,AsmCmd * *,std::allocator<AsmCmd *> >
	add	esp, 16					; 00000010H
; Line 1326
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVAsmCmd@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEPAPAVAsmCmd@@PAPAV2@00@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Umove<AsmCmd * *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@IPAPAV1@@Z
_TEXT	SEGMENT
$T66902 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@IPAPAV1@@Z PROC ; std::_Allocate<AsmCmd *>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T66902[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T66902[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVAsmCmd@@@std@@YAPAPAVAsmCmd@@IPAPAV1@@Z ENDP ; std::_Allocate<AsmCmd *>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
; File c:\program files\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVOptimization@@PAPAV1@V?$allocator@PAVOptimization@@@std@@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@@Z ; std::_Uninitialized_move<Optimization * *,Optimization * *,std::allocator<Optimization *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAPAVOptimization@@@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEPAPAVOptimization@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVOptimization@@@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEPAPAVOptimization@@PAPAV2@00@Z PROC ; std::vector<Optimization *,std::allocator<Optimization *> >::_Umove<Optimization * *>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAPAVOptimization@@PAPAV1@V?$allocator@PAVOptimization@@@std@@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@@Z ; std::_Uninitialized_move<Optimization * *,Optimization * *,std::allocator<Optimization *> >
	add	esp, 16					; 00000010H
; Line 1326
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVOptimization@@@?$vector@PAVOptimization@@V?$allocator@PAVOptimization@@@std@@@std@@IAEPAPAVOptimization@@PAPAV2@00@Z ENDP ; std::vector<Optimization *,std::allocator<Optimization *> >::_Umove<Optimization * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Optimization *> >
PUBLIC	??$_Ptr_cat@PAVOptimization@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVOptimization@@0@Z ; std::_Ptr_cat<Optimization *,Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@@Z
_TEXT	SEGMENT
$T66913 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Optimization *> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVOptimization@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVOptimization@@0@Z ; std::_Ptr_cat<Optimization *,Optimization *>
	add	esp, 8
	mov	BYTE PTR $T66913[ebp], al
	movzx	edx, BYTE PTR $T66913[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Optimization *> >
	add	esp, 16					; 00000010H
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Optimization *> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T66916 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T66916[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T66916[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate@2:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAVOptimization@@@std@@YAPAPAVOptimization@@IPAPAV1@@Z
_TEXT	SEGMENT
$T66919 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVOptimization@@@std@@YAPAPAVOptimization@@IPAPAV1@@Z PROC ; std::_Allocate<Optimization *>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@3
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@3
$LN4@Allocate@3:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate@3
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@3
$LN1@Allocate@3:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T66919[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T66919[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate@3:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@3:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVOptimization@@@std@@YAPAPAVOptimization@@IPAPAV1@@Z ENDP ; std::_Allocate<Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T66922 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@4
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@4
$LN4@Allocate@4:
; Line 36
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate@4
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@4
$LN1@Allocate@4:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T66922[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T66922[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate@4:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@4:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 780
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; Line 783
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 784
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 785
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 793
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 794
	push	-1
	push	0
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 795
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 799
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 800
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN4@append
; Line 801
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@append:
; Line 802
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 803
	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@append
; Line 804
	mov	eax, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
$LN3@append:
; Line 805
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append
; Line 806
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:
; Line 808
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@append
; Line 811
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 812
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append:
; Line 814
	mov	eax, DWORD PTR _this$[ebp]
$LN6@append:
; Line 815
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	push	840					; 00000348H
	push	OFFSET ??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 841
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 842
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 818
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 820
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN4@append@2
; Line 821
	push	821					; 00000335H
	push	OFFSET ??_C@_1IC@FFBOGIDA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN4@append@2:
; Line 824
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append@2
; Line 825
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	SHORT $LN6@append@2
$LN3@append@2:
; Line 826
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append@2
; Line 827
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append@2:
; Line 830
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@append@2
; Line 832
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+20]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 833
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@2:
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
$LN6@append@2:
; Line 836
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$58466 = -20					; size = 4
_this$ = -8						; size = 4
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx
; Line 1540
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1541
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newcap$[ebp]
	ja	SHORT $LN3@reserve@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newcap$[ebp]
	je	SHORT $LN3@reserve@3
; Line 1543
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Size$58466[ebp], ecx
; Line 1544
	push	1
	mov	eax, DWORD PTR __Newcap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@reserve@3
; Line 1545
	mov	eax, DWORD PTR __Size$58466[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@reserve@3:
; Line 1547
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputn, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputn
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z$0
__ehfuncinfo$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
$T66944 = -236						; size = 4
$T66945 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z PROC ; std::allocator<AsmCmd *>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T66945[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66945[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@PAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::forward<AsmCmd *>
	add	esp, 4
	mov	edx, DWORD PTR $T66945[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T66945[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T66944[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T66945[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAV3@@Z ENDP ; std::allocator<AsmCmd *>::construct
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z$0
__ehfuncinfo$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
$T66961 = -236						; size = 4
$T66962 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z PROC ; std::allocator<Optimization *>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T66962[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66962[ebp], 0
	je	SHORT $LN3@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@PAVOptimization@@@std@@YA$$QAPAVOptimization@@AAPAV1@@Z ; std::forward<Optimization *>
	add	esp, 4
	mov	edx, DWORD PTR $T66962[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T66962[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct@2
$LN3@construct@2:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct@2:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T66961[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T66962[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@PAVOptimization@@@std@@QAEXPAPAVOptimization@@$$QAPAV3@@Z ENDP ; std::allocator<Optimization *>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T66974 = -236						; size = 4
$T66975 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T66975[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66975[ebp], 0
	je	SHORT $LN3@construct@3
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T66975[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T66975[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct@3
$LN3@construct@3:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct@3:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T66974[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T66975[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
	add	esp, 4
; Line 214
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z PROC ; std::forward<AsmCmd2 *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z ENDP ; std::forward<AsmCmd2 *>
_TEXT	ENDS
PUBLIC	??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z ; std::rotate<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
PUBLIC	??$emplace_back@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd2 *>
PUBLIC	??_C@_1EM@ENACFCMB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@ ; `string'
;	COMDAT ??_C@_1EM@ENACFCMB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
??_C@_1EM@ENACFCMB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'c', 00H, 'e'
	DB	00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, 's', 00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$2
	DD	06H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
_TEXT	SEGMENT
tv182 = -396						; size = 4
tv192 = -392						; size = 4
tv189 = -388						; size = 4
tv204 = -384						; size = 4
tv187 = -380						; size = 4
tv203 = -376						; size = 4
tv184 = -372						; size = 4
tv202 = -368						; size = 4
tv195 = -364						; size = 4
tv181 = -364						; size = 4
tv206 = -360						; size = 4
tv201 = -360						; size = 4
$T66991 = -352						; size = 4
$T66992 = -340						; size = 4
$T66993 = -328						; size = 12
$T66994 = -308						; size = 4
$T66995 = -296						; size = 12
$T66996 = -276						; size = 12
$T66997 = -256						; size = 12
$T67007 = -236						; size = 4
__Off$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd2 *>, COMDAT
; _this$ = ecx
; Line 679
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T67007[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR __Off$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	cmp	eax, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@emplace
; Line 685
	push	685					; 000002adH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EM@ENACFCMB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@emplace:
; Line 688
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z ; std::forward<AsmCmd2 *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_back@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd2@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd2 *>
; Line 689
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T66991[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
	mov	DWORD PTR tv201[ebp], eax
	mov	ecx, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T66992[ebp], esp
	push	1
	push	edx
	lea	eax, DWORD PTR $T66993[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
	mov	DWORD PTR tv202[ebp], eax
	mov	ecx, DWORD PTR tv202[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv184[ebp]
	call	??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
	mov	DWORD PTR tv203[ebp], eax
	mov	edx, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv187[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T66994[ebp], esp
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	push	eax
	lea	edx, DWORD PTR $T66995[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv204[ebp], eax
	mov	eax, DWORD PTR tv204[ebp]
	mov	DWORD PTR tv189[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv189[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv192[ebp], eax
	lea	ecx, DWORD PTR $T66996[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z ; std::rotate<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 40					; 00000028H
	mov	DWORD PTR tv182[ebp], eax
	lea	ecx, DWORD PTR $T66996[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T66995[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T66993[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 690
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T66997[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv195[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv195[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	ecx, DWORD PTR $T67007[ebp]
	or	ecx, 1
	mov	DWORD PTR $T67007[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T66997[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 691
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$1:
	mov	ecx, DWORD PTR $T66991[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$2:
	lea	ecx, DWORD PTR $T66993[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$3:
	mov	ecx, DWORD PTR $T66992[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$4:
	lea	ecx, DWORD PTR $T66995[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$7:
	lea	ecx, DWORD PTR $T66997[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z$8:
	mov	eax, DWORD PTR $T67007[ebp]
	and	eax, 1
	je	$LN13@emplace
	and	DWORD PTR $T67007[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN13@emplace:
	ret	0
__ehhandler$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd2@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd2 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z PROC ; std::forward<AsmCmd1 *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z ENDP ; std::forward<AsmCmd1 *>
_TEXT	ENDS
PUBLIC	??$emplace_back@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd1 *>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__ehfuncinfo$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$2
	DD	06H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
_TEXT	SEGMENT
tv182 = -396						; size = 4
tv192 = -392						; size = 4
tv189 = -388						; size = 4
tv204 = -384						; size = 4
tv187 = -380						; size = 4
tv203 = -376						; size = 4
tv184 = -372						; size = 4
tv202 = -368						; size = 4
tv195 = -364						; size = 4
tv181 = -364						; size = 4
tv206 = -360						; size = 4
tv201 = -360						; size = 4
$T67019 = -352						; size = 4
$T67020 = -340						; size = 4
$T67021 = -328						; size = 12
$T67022 = -308						; size = 4
$T67023 = -296						; size = 12
$T67024 = -276						; size = 12
$T67025 = -256						; size = 12
$T67035 = -236						; size = 4
__Off$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd1 *>, COMDAT
; _this$ = ecx
; Line 679
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T67035[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR __Off$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QBEIXZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::size
	cmp	eax, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@emplace@2
; Line 685
	push	685					; 000002adH
	push	OFFSET ??_C@_1IA@ICDDLEIF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	push	OFFSET ??_C@_1EM@ENACFCMB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@emplace@2:
; Line 688
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z ; std::forward<AsmCmd1 *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_back@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd1@@@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd1 *>
; Line 689
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T67019[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
	mov	DWORD PTR tv201[ebp], eax
	mov	ecx, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T67020[ebp], esp
	push	1
	push	edx
	lea	eax, DWORD PTR $T67021[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::end
	mov	DWORD PTR tv202[ebp], eax
	mov	ecx, DWORD PTR tv202[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv184[ebp]
	call	??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
	mov	DWORD PTR tv203[ebp], eax
	mov	edx, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv187[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T67022[ebp], esp
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	push	eax
	lea	edx, DWORD PTR $T67023[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv204[ebp], eax
	mov	eax, DWORD PTR tv204[ebp]
	mov	DWORD PTR tv189[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv189[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	DWORD PTR tv192[ebp], eax
	lea	ecx, DWORD PTR $T67024[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z ; std::rotate<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 40					; 00000028H
	mov	DWORD PTR tv182[ebp], eax
	lea	ecx, DWORD PTR $T67024[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T67023[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T67021[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
; Line 690
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67025[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@2@XZ ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::begin
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv195[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv195[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+
	mov	ecx, DWORD PTR $T67035[ebp]
	or	ecx, 1
	mov	DWORD PTR $T67035[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T67025[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 691
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$1:
	mov	ecx, DWORD PTR $T67019[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$2:
	lea	ecx, DWORD PTR $T67021[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$3:
	mov	ecx, DWORD PTR $T67020[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$4:
	lea	ecx, DWORD PTR $T67023[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$7:
	lea	ecx, DWORD PTR $T67025[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z$8:
	mov	eax, DWORD PTR $T67035[ebp]
	and	eax, 1
	je	$LN13@emplace@2
	and	DWORD PTR $T67035[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN13@emplace@2:
	ret	0
__ehhandler$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@$$QAPAVAsmCmd1@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace<AsmCmd1 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@AAPAPAVAsmCmd@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z$2
__ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z
_TEXT	SEGMENT
tv139 = -268						; size = 4
tv142 = -264						; size = 4
tv138 = -260						; size = 4
tv145 = -256						; size = 4
$T67047 = -248						; size = 4
$T67048 = -233						; size = 1
$T67049 = -224						; size = 4
$T67050 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Dest$ = 32						; size = 4
__Al$ = 36						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >, COMDAT
; Line 412
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 414
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@AAPAPAVAsmCmd@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *>
	add	esp, 8
	mov	BYTE PTR $T67048[ebp], al
	movzx	edx, BYTE PTR $T67048[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67049[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv145[ebp], eax
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67050[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv139[ebp], eax
	mov	eax, DWORD PTR tv139[ebp]
	mov	DWORD PTR $T67047[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T67047[ebp]
; Line 415
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z$2:
	mov	ecx, DWORD PTR $T67049[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@PAVAsmCmd@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAsmCmd@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVAsmCmd@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAsmCmd@@0@Z PROC ; std::_Ptr_cat<AsmCmd *,AsmCmd *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 518
	mov	al, BYTE PTR __Cat$[ebp]
; Line 519
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@PAVAsmCmd@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAsmCmd@@0@Z ENDP ; std::_Ptr_cat<AsmCmd *,AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<AsmCmd * *,AsmCmd * *>, COMDAT
; Line 2522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2523
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 2525
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 2526
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
; Line 2527
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVAsmCmd@@PAPAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<AsmCmd * *,AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 263
	mov	al, 1
; Line 264
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?8PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z PROC ; std::operator==<AsmCmd *,AsmCmd *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 263
	mov	al, 1
; Line 264
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8PAVAsmCmd@@PAV0@@std@@YA_NABV?$allocator@PAVAsmCmd@@@0@0@Z ENDP ; std::operator==<AsmCmd *,AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<AsmCmd *> >, COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVAsmCmd@@@std@@@std@@YAXPAPAVAsmCmd@@0AAV?$allocator@PAVAsmCmd@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<AsmCmd *> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVAsmCmd@@PAV1@PAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<AsmCmd *,AsmCmd *,AsmCmd *>
PUBLIC	??$_Val_type@PAPAVAsmCmd@@@std@@YAPAPAVAsmCmd@@PAPAV1@@Z ; std::_Val_type<AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAPAVAsmCmd@@PAPAV1@V?$allocator@PAVAsmCmd@@@std@@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@@Z
_TEXT	SEGMENT
$T67078 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVAsmCmd@@PAPAV1@V?$allocator@PAVAsmCmd@@@std@@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@@Z PROC ; std::_Uninitialized_move<AsmCmd * *,AsmCmd * *,std::allocator<AsmCmd *> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVAsmCmd@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAsmCmd@@0@Z ; std::_Ptr_cat<AsmCmd *,AsmCmd *>
	add	esp, 8
	mov	BYTE PTR $T67078[ebp], al
	movzx	edx, BYTE PTR $T67078[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAVAsmCmd@@@std@@YAPAPAVAsmCmd@@PAPAV1@@Z ; std::_Val_type<AsmCmd * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAVAsmCmd@@PAV1@PAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<AsmCmd *,AsmCmd *,AsmCmd *>
	add	esp, 24					; 00000018H
; Line 472
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVAsmCmd@@PAPAV1@V?$allocator@PAVAsmCmd@@@std@@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@@Z ENDP ; std::_Uninitialized_move<AsmCmd * *,AsmCmd * *,std::allocator<AsmCmd *> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVOptimization@@PAV1@PAV1@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Optimization *,Optimization *,Optimization *>
PUBLIC	??$_Val_type@PAPAVOptimization@@@std@@YAPAPAVOptimization@@PAPAV1@@Z ; std::_Val_type<Optimization * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAPAVOptimization@@PAPAV1@V?$allocator@PAVOptimization@@@std@@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@@Z
_TEXT	SEGMENT
$T67081 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVOptimization@@PAPAV1@V?$allocator@PAVOptimization@@@std@@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@@Z PROC ; std::_Uninitialized_move<Optimization * *,Optimization * *,std::allocator<Optimization *> >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVOptimization@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVOptimization@@0@Z ; std::_Ptr_cat<Optimization *,Optimization *>
	add	esp, 8
	mov	BYTE PTR $T67081[ebp], al
	movzx	edx, BYTE PTR $T67081[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAVOptimization@@@std@@YAPAPAVOptimization@@PAPAV1@@Z ; std::_Val_type<Optimization * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAVOptimization@@PAV1@PAV1@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Optimization *,Optimization *,Optimization *>
	add	esp, 24					; 00000018H
; Line 472
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVOptimization@@PAPAV1@V?$allocator@PAVOptimization@@@std@@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@@Z ENDP ; std::_Uninitialized_move<Optimization * *,Optimization * *,std::allocator<Optimization *> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAVOptimization@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVOptimization@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVOptimization@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVOptimization@@0@Z PROC ; std::_Ptr_cat<Optimization *,Optimization *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 518
	mov	al, BYTE PTR __Cat$[ebp]
; Line 519
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Ptr_cat@2:
	DD	1
	DD	$LN4@Ptr_cat@2
$LN4@Ptr_cat@2:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat@2
$LN3@Ptr_cat@2:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@PAVOptimization@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVOptimization@@0@Z ENDP ; std::_Ptr_cat<Optimization *,Optimization *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<Optimization *> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVOptimization@@@std@@@std@@YAXPAPAVOptimization@@0AAV?$allocator@PAVOptimization@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<Optimization *> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-=
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T67095 = -244						; size = 4
__Tmp$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-, COMDAT
; _this$ = ecx
; Line 374
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T67095[ebp], 0
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 376
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Z?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T67095[ebp]
	or	ecx, 1
	mov	DWORD PTR $T67095[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 377
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@10
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@operator@10:
	DD	1
	DD	$LN8@operator@10
$LN8@operator@10:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@operator@10
$LN6@operator@10:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T67095[ebp]
	and	eax, 1
	je	$LN5@operator@10
	and	DWORD PTR $T67095[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN5@operator@10:
	ret	0
__ehhandler$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
??Z?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-=, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR __Off$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Z?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-=
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd2@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd2 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$emplace_back@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd2@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
??$emplace_back@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd2@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd2 *>, COMDAT
; _this$ = ecx
; Line 661
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 663
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN1@emplace_ba
; Line 664
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Reserve
$LN1@emplace_ba:
; Line 665
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
; Line 668
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z ; std::forward<AsmCmd2 *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd2@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd2 *>
	add	esp, 12					; 0000000cH
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 670
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@PAVAsmCmd2@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd2@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd2 *>
_TEXT	ENDS
PUBLIC	??$advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@H@Z ; std::advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
PUBLIC	??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z ; std::distance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	??$_Rotate@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@00Urandom_access_iterator_tag@0@@Z ; std::_Rotate<AsmCmd * *>
PUBLIC	??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
PUBLIC	??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__ehfuncinfo$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
tv297 = -360						; size = 4
tv296 = -356						; size = 4
tv300 = -352						; size = 4
tv293 = -352						; size = 4
tv303 = -348						; size = 4
tv292 = -348						; size = 4
tv285 = -348						; size = 4
tv278 = -348						; size = 4
tv299 = -344						; size = 4
tv289 = -344						; size = 4
tv282 = -344						; size = 4
tv275 = -344						; size = 4
tv315 = -340						; size = 4
tv313 = -340						; size = 4
tv311 = -340						; size = 4
tv288 = -340						; size = 4
$T67112 = -332						; size = 4
$T67113 = -320						; size = 4
$T67114 = -308						; size = 4
$T67115 = -296						; size = 4
$T67116 = -281						; size = 1
$T67117 = -272						; size = 4
$T67118 = -260						; size = 4
$T67119 = -248						; size = 4
$T67120 = -236						; size = 4
$T67121 = -224						; size = 4
$T67135 = -212						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Mid$ = 24						; size = 12
__Last$ = 36						; size = 12
??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z PROC ; std::rotate<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; Line 3294
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T67135[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 3295
	push	3295					; 00000cdfH
	push	OFFSET ??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67112[ebp], esp
	lea	eax, DWORD PTR __Mid$[ebp]
	push	eax
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv311[ebp], eax
	mov	ecx, DWORD PTR tv311[ebp]
	mov	DWORD PTR tv275[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67113[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv278[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 32					; 00000020H
; Line 3296
	push	3296					; 00000ce0H
	push	OFFSET ??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67114[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv313[ebp], eax
	mov	ecx, DWORD PTR tv313[ebp]
	mov	DWORD PTR tv282[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67115[ebp], esp
	lea	edx, DWORD PTR __Mid$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv285[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 32					; 00000020H
; Line 3297
	lea	eax, DWORD PTR __Mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@rotate
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Mid$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@rotate
; Line 3300
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67116[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67117[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv288[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv289[ebp], eax
	mov	ecx, DWORD PTR tv289[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67118[ebp], esp
	lea	edx, DWORD PTR __Mid$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv292[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv293[ebp], eax
	mov	eax, DWORD PTR tv293[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67119[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv296[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv297[ebp], eax
	mov	eax, DWORD PTR tv297[ebp]
	push	eax
	call	??$_Rotate@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@00Urandom_access_iterator_tag@0@@Z ; std::_Rotate<AsmCmd * *>
	add	esp, 16					; 00000010H
; Line 3301
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67120[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv315[ebp], eax
	mov	ecx, DWORD PTR tv315[ebp]
	mov	DWORD PTR tv299[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67121[ebp], esp
	lea	edx, DWORD PTR __Mid$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv303[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z ; std::distance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv300[ebp], eax
	mov	eax, DWORD PTR tv300[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@H@Z ; std::advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
	add	esp, 8
$LN1@rotate:
; Line 3303
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T67135[ebp]
	or	ecx, 1
	mov	DWORD PTR $T67135[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Mid$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 3304
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$1:
	lea	ecx, DWORD PTR __Mid$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$2:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$3:
	mov	ecx, DWORD PTR $T67112[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$5:
	mov	ecx, DWORD PTR $T67114[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$10:
	mov	ecx, DWORD PTR $T67120[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z$12:
	mov	eax, DWORD PTR $T67135[ebp]
	and	eax, 1
	je	$LN17@rotate
	and	DWORD PTR $T67135[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
$LN17@rotate:
	ret	0
__ehhandler$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$rotate@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@V10@00@Z ENDP ; std::rotate<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd1@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd1 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$emplace_back@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd1@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
??$emplace_back@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd1@@@Z PROC ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd1 *>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 661
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 663
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN1@emplace_ba@2
; Line 664
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IAEXI@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Reserve
$LN1@emplace_ba@2:
; Line 665
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@IBEXPAPAVAsmCmd@@0@Z ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::_Orphan_range
; Line 668
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z ; std::forward<AsmCmd1 *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd1@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd1 *>
	add	esp, 12					; 0000000cH
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 670
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@PAVAsmCmd1@@@?$vector@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@QAEX$$QAPAVAsmCmd1@@@Z ENDP ; std::vector<AsmCmd *,std::allocator<AsmCmd *> >::emplace_back<AsmCmd1 *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@AAPAPAVAsmCmd@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@AAPAPAVAsmCmd@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 487
	mov	al, BYTE PTR __Cat$[ebp]
; Line 488
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Ptr_cat@3:
	DD	1
	DD	$LN4@Ptr_cat@3
$LN4@Ptr_cat@3:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat@3
$LN3@Ptr_cat@3:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@AAPAPAVAsmCmd@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@@Z ; std::_Dest_val<std::allocator<AsmCmd *>,AsmCmd *>
PUBLIC	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@ABQAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@ABQAV2@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd * const &>
PUBLIC	??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z ; std::_Debug_pointer<AsmCmd *>
PUBLIC	??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
;	COMDAT ??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
; File c:\program files\microsoft visual studio 10.0\vc\include\memory
CONST	SEGMENT
??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H
	DB	'v', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'm', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$6
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$4
	DD	01H
	DD	00H
	DD	01H
	DD	00H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
tv156 = -268						; size = 4
tv153 = -264						; size = 4
tv163 = -260						; size = 4
tv160 = -260						; size = 4
tv162 = -257						; size = 1
$T67152 = -252						; size = 4
$T67153 = -240						; size = 4
$T67154 = -228						; size = 4
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Dest$ = 32						; size = 4
__Al$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >, COMDAT
; Line 369
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 370
	push	370					; 00000172H
	push	OFFSET ??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67152[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv153[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67153[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv156[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 32					; 00000020H
; Line 371
	push	371					; 00000173H
	push	OFFSET ??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z ; std::_Debug_pointer<AsmCmd *>
	add	esp, 12					; 0000000cH
; Line 372
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 374
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
; Line 375
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 4
	mov	DWORD PTR __Dest$[ebp], eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator++
$LN6@Uninit_cop:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	mov	BYTE PTR tv162[ebp], al
	movzx	ecx, BYTE PTR tv162[ebp]
	test	ecx, ecx
	je	SHORT $LN4@Uninit_cop
; Line 376
	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEABQAVAsmCmd@@XZ ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator*
	mov	DWORD PTR tv163[ebp], eax
	mov	eax, DWORD PTR tv163[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@ABQAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@ABQAV2@@Z ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd * const &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 377
	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
; Line 378
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_cop:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop
; Line 379
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@@Z ; std::_Dest_val<std::allocator<AsmCmd *>,AsmCmd *>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:
; Line 380
	push	0
	push	0
	call	__CxxThrowException@8
; Line 381
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 382
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T67154[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T67154[ebp]
$LN9@Uninit_cop:
; Line 383
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$3:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$4:
	mov	ecx, DWORD PTR $T67152[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@PAPAVAsmCmd@@V?$allocator@PAVAsmCmd@@@2@@std@@YAPAPAVAsmCmd@@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PAPAV1@AAV?$allocator@PAVAsmCmd@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,AsmCmd * *,std::allocator<AsmCmd *> >
PUBLIC	?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@ABQAV3@@Z ; std::allocator<AsmCmd *>::construct
PUBLIC	??$forward@ABQAVAsmCmd@@@std@@YAABQAVAsmCmd@@ABQAV1@@Z ; std::forward<AsmCmd * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@ABQAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@ABQAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd * const &>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABQAVAsmCmd@@@std@@YAABQAVAsmCmd@@ABQAV1@@Z ; std::forward<AsmCmd * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@ABQAV3@@Z ; std::allocator<AsmCmd *>::construct
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@ABQAV3@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd * const &>
_TEXT	ENDS
PUBLIC	??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z ; std::_Construct<AsmCmd *,AsmCmd * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@ABQAV3@@Z PROC ; std::allocator<AsmCmd *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z ; std::_Construct<AsmCmd *,AsmCmd * const &>
	add	esp, 8
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@ABQAV3@@Z ENDP ; std::allocator<AsmCmd *>::construct
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@ABQAVAsmCmd@@@std@@YAABQAVAsmCmd@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVAsmCmd@@@std@@YAABQAVAsmCmd@@ABQAV1@@Z PROC ; std::forward<AsmCmd * const &>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABQAVAsmCmd@@@std@@YAABQAVAsmCmd@@ABQAV1@@Z ENDP ; std::forward<AsmCmd * const &>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z$0
__ehfuncinfo$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
$T67180 = -236						; size = 4
$T67181 = -224						; size = 4
__Vptr$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z PROC ; std::_Construct<AsmCmd *,AsmCmd * const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T67181[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T67181[ebp], 0
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@ABQAVAsmCmd@@@std@@YAABQAVAsmCmd@@ABQAV1@@Z ; std::forward<AsmCmd * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T67181[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T67181[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@Construct
$LN3@Construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T67180[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T67181[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAVAsmCmd@@ABQAV1@@std@@YAXPAPAVAsmCmd@@ABQAV1@@Z ENDP ; std::_Construct<AsmCmd *,AsmCmd * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAPAVAsmCmd@@@std@@YAPAPAVAsmCmd@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVAsmCmd@@@std@@YAPAPAVAsmCmd@@PAPAV1@@Z PROC ; std::_Val_type<AsmCmd * *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 789
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 790
	xor	eax, eax
; Line 791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Val_type@PAPAVAsmCmd@@@std@@YAPAPAVAsmCmd@@PAPAV1@@Z ENDP ; std::_Val_type<AsmCmd * *>
_TEXT	ENDS
PUBLIC	??$_Debug_range@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WI@Z ; std::_Debug_range<AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVAsmCmd@@PAV1@PAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVAsmCmd@@PAV1@PAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<AsmCmd *,AsmCmd *,AsmCmd *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\memory
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 457
	push	457					; 000001c9H
	push	OFFSET ??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WI@Z ; std::_Debug_range<AsmCmd * *>
	add	esp, 16					; 00000010H
; Line 458
	push	458					; 000001caH
	push	OFFSET ??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z ; std::_Debug_pointer<AsmCmd *>
	add	esp, 12					; 0000000cH
; Line 459
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 461
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 462
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAVAsmCmd@@PAV1@PAV1@@std@@YAPAPAVAsmCmd@@PAPAV1@00AAV?$allocator@PAVAsmCmd@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<AsmCmd *,AsmCmd *,AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAPAVOptimization@@@std@@YAPAPAVOptimization@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVOptimization@@@std@@YAPAPAVOptimization@@PAPAV1@@Z PROC ; std::_Val_type<Optimization * *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 789
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 790
	xor	eax, eax
; Line 791
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Val_type@PAPAVOptimization@@@std@@YAPAPAVOptimization@@PAPAV1@@Z ENDP ; std::_Val_type<Optimization * *>
_TEXT	ENDS
PUBLIC	??$_Debug_pointer@PAVOptimization@@@std@@YAXPAPAVOptimization@@PB_WI@Z ; std::_Debug_pointer<Optimization *>
PUBLIC	??$_Debug_range@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WI@Z ; std::_Debug_range<Optimization * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVOptimization@@PAV1@PAV1@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVOptimization@@PAV1@PAV1@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Optimization *,Optimization *,Optimization *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\memory
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 457
	push	457					; 000001c9H
	push	OFFSET ??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WI@Z ; std::_Debug_range<Optimization * *>
	add	esp, 16					; 00000010H
; Line 458
	push	458					; 000001caH
	push	OFFSET ??_C@_1IA@PMOIDIIO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVOptimization@@@std@@YAXPAPAVOptimization@@PB_WI@Z ; std::_Debug_pointer<Optimization *>
	add	esp, 12					; 0000000cH
; Line 459
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 461
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 462
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAVOptimization@@PAV1@PAV1@@std@@YAPAPAVOptimization@@PAPAV1@00AAV?$allocator@PAVOptimization@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Optimization *,Optimization *,Optimization *>
_TEXT	ENDS
PUBLIC	??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z ; std::allocator<AsmCmd *>::construct<AsmCmd2 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd2@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd2@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z PROC ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd2 *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z ; std::forward<AsmCmd2 *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z ; std::allocator<AsmCmd *>::construct<AsmCmd2 *>
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd2@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z ENDP ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd2 *>
_TEXT	ENDS
PUBLIC	??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$2
__ehfuncinfo$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
tv140 = -252						; size = 4
tv137 = -248						; size = 4
tv143 = -244						; size = 4
$T67203 = -233						; size = 1
$T67204 = -224						; size = 4
$T67205 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; Line 727
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 728
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67203[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67204[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv137[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67205[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 36					; 00000024H
; Line 729
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$2:
	mov	ecx, DWORD PTR $T67204[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEPAPAVAsmCmd@@XZ ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Unchecked
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T67218 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >, COMDAT
; Line 393
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 394
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEPAPAVAsmCmd@@XZ ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Unchecked
	mov	DWORD PTR $T67218[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T67218[ebp]
; Line 395
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Iter$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@YAPAPAVAsmCmd@@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 478
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 479
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
_TEXT	ENDS
PUBLIC	??$_Rotate@PAPAVAsmCmd@@HPAV1@@std@@YAXPAPAVAsmCmd@@00PAH0@Z ; std::_Rotate<AsmCmd * *,int,AsmCmd *>
PUBLIC	??$_Dist_type@PAPAVAsmCmd@@@std@@YAPAHPAPAVAsmCmd@@@Z ; std::_Dist_type<AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rotate@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@00Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Rotate@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@00Urandom_access_iterator_tag@0@@Z PROC ; std::_Rotate<AsmCmd * *>, COMDAT
; Line 3288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3289
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAVAsmCmd@@@std@@YAPAPAVAsmCmd@@PAPAV1@@Z ; std::_Val_type<AsmCmd * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Dist_type@PAPAVAsmCmd@@@std@@YAPAHPAPAVAsmCmd@@@Z ; std::_Dist_type<AsmCmd * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Rotate@PAPAVAsmCmd@@HPAV1@@std@@YAXPAPAVAsmCmd@@00PAH0@Z ; std::_Rotate<AsmCmd * *,int,AsmCmd *>
	add	esp, 20					; 00000014H
; Line 3290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Rotate@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@00Urandom_access_iterator_tag@0@@Z ENDP ; std::_Rotate<AsmCmd * *>
_TEXT	ENDS
PUBLIC	??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z$2
__ehfuncinfo$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv138 = -276						; size = 4
tv135 = -272						; size = 4
tv141 = -268						; size = 4
$T67235 = -257						; size = 1
$T67236 = -248						; size = 4
$T67237 = -236						; size = 4
$T67238 = -224						; size = 4
__Off$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; Line 900
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 901
	mov	DWORD PTR __Off$[ebp], 0
; Line 902
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67235[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	lea	eax, DWORD PTR __Off$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67236[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67237[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
	add	esp, 32					; 00000020H
; Line 903
	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR $T67238[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T67238[ebp]
; Line 904
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@distance
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@distance:
	DD	1
	DD	$LN9@distance
$LN9@distance:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@distance
$LN7@distance:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z$2:
	mov	ecx, DWORD PTR $T67236[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$distance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@HUrandom_access_iterator_tag@0@@Z ; std::_Advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@H@Z
_TEXT	SEGMENT
$T67254 = -197						; size = 1
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
??$advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@H@Z PROC ; std::advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>, COMDAT
; Line 797
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 798
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67254[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@HUrandom_access_iterator_tag@0@@Z ; std::_Advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
	add	esp, 12					; 0000000cH
; Line 799
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@H@Z ENDP ; std::advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
_TEXT	ENDS
PUBLIC	??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z ; std::allocator<AsmCmd *>::construct<AsmCmd1 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd1@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd1@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z PROC ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd1 *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z ; std::forward<AsmCmd1 *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z ; std::allocator<AsmCmd *>::construct<AsmCmd1 *>
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@PAVAsmCmd1@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z ENDP ; std::_Cons_val<std::allocator<AsmCmd *>,AsmCmd *,AsmCmd1 *>
_TEXT	ENDS
PUBLIC	??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
PUBLIC	??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$2
__ehfuncinfo$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
tv140 = -252						; size = 4
tv137 = -248						; size = 4
tv143 = -244						; size = 4
$T67259 = -233						; size = 1
$T67260 = -224						; size = 4
$T67261 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; Line 727
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 728
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67259[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67260[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv137[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T67261[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 36					; 00000024H
; Line 729
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z$2:
	mov	ecx, DWORD PTR $T67260[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z PROC ; std::_Debug_pointer<AsmCmd *>, COMDAT
; Line 696
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 697
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin@2
; Line 698
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin@2:
; Line 699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z ENDP ; std::_Debug_pointer<AsmCmd *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@@Z ; std::allocator<AsmCmd *>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Dest_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@@Z PROC ; std::_Dest_val<std::allocator<AsmCmd *>,AsmCmd *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@@Z ; std::allocator<AsmCmd *>::destroy
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@PAVAsmCmd@@@std@@PAVAsmCmd@@@std@@YAXAAV?$allocator@PAVAsmCmd@@@0@PAPAVAsmCmd@@@Z ENDP ; std::_Dest_val<std::allocator<AsmCmd *>,AsmCmd *>
_TEXT	ENDS
PUBLIC	??$_Debug_range2@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<AsmCmd * *>
PUBLIC	??$_Iter_cat@PAPAVAsmCmd@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVAsmCmd@@@Z ; std::_Iter_cat<AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WI@Z
_TEXT	SEGMENT
$T67278 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WI@Z PROC ; std::_Debug_range<AsmCmd * *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 727
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 728
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67278[ebp]
	push	ecx
	call	??$_Iter_cat@PAPAVAsmCmd@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVAsmCmd@@@Z ; std::_Iter_cat<AsmCmd * *>
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_range2@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<AsmCmd * *>
	add	esp, 20					; 00000014H
; Line 729
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WI@Z ENDP ; std::_Debug_range<AsmCmd * *>
_TEXT	ENDS
PUBLIC	??$_Debug_range2@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Optimization * *>
PUBLIC	??$_Iter_cat@PAPAVOptimization@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVOptimization@@@Z ; std::_Iter_cat<Optimization * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WI@Z
_TEXT	SEGMENT
$T67281 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WI@Z PROC ; std::_Debug_range<Optimization * *>, COMDAT
; Line 727
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 728
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67281[ebp]
	push	ecx
	call	??$_Iter_cat@PAPAVOptimization@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVOptimization@@@Z ; std::_Iter_cat<Optimization * *>
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_range2@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Optimization * *>
	add	esp, 20					; 00000014H
; Line 729
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WI@Z ENDP ; std::_Debug_range<Optimization * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Debug_pointer@PAVOptimization@@@std@@YAXPAPAVOptimization@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVOptimization@@@std@@YAXPAPAVOptimization@@PB_WI@Z PROC ; std::_Debug_pointer<Optimization *>, COMDAT
; Line 696
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 697
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin@3
; Line 698
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin@3:
; Line 699
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@PAVOptimization@@@std@@YAXPAPAVOptimization@@PB_WI@Z ENDP ; std::_Debug_pointer<Optimization *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@@Z	; std::_Destroy<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?destroy@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@@Z PROC ; std::allocator<AsmCmd *>::destroy, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@@Z ; std::_Destroy<AsmCmd *>
	add	esp, 4
; Line 214
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@@Z ENDP ; std::allocator<AsmCmd *>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEPAPAVAsmCmd@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEPAPAVAsmCmd@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Unchecked, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 317
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 318
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEPAPAVAsmCmd@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Unchecked
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z$0
__ehfuncinfo$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z
_TEXT	SEGMENT
tv77 = -244						; size = 4
$T67290 = -236						; size = 4
$T67291 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z PROC ; std::allocator<AsmCmd *>::construct<AsmCmd2 *>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T67291[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T67291[ebp], 0
	je	SHORT $LN3@construct@4
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@PAVAsmCmd2@@@std@@YA$$QAPAVAsmCmd2@@AAPAV1@@Z ; std::forward<AsmCmd2 *>
	add	esp, 4
	mov	edx, DWORD PTR $T67291[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T67291[ebp]
	mov	DWORD PTR tv77[ebp], ecx
	jmp	SHORT $LN4@construct@4
$LN3@construct@4:
	mov	DWORD PTR tv77[ebp], 0
$LN4@construct@4:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T67290[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T67291[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAVAsmCmd2@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd2@@@Z ENDP ; std::allocator<AsmCmd *>::construct<AsmCmd2 *>
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; Line 714
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 715
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang
; Line 717
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 12					; 0000000cH
; Line 718
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 12					; 0000000cH
; Line 719
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang
; Line 720
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_rang:
; Line 722
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Dist_type@PAPAVAsmCmd@@@std@@YAPAHPAPAVAsmCmd@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Dist_type@PAPAVAsmCmd@@@std@@YAPAHPAPAVAsmCmd@@@Z PROC ; std::_Dist_type<AsmCmd * *>, COMDAT
; Line 849
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 850
	xor	eax, eax
; Line 851
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Dist_type@PAPAVAsmCmd@@@std@@YAPAHPAPAVAsmCmd@@@Z ENDP ; std::_Dist_type<AsmCmd * *>
_TEXT	ENDS
PUBLIC	??$iter_swap@PAPAVAsmCmd@@PAPAV1@@std@@YAXPAPAVAsmCmd@@0@Z ; std::iter_swap<AsmCmd * *,AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rotate@PAPAVAsmCmd@@HPAV1@@std@@YAXPAPAVAsmCmd@@00PAH0@Z
_TEXT	SEGMENT
tv95 = -280						; size = 4
tv82 = -280						; size = 4
__Next1$60387 = -80					; size = 4
__Next$60386 = -68					; size = 4
__Hole$60385 = -56					; size = 4
__Tmp$60380 = -44					; size = 4
__Factor$60376 = -32					; size = 4
__Count$ = -20						; size = 4
__Shift$ = -8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
??$_Rotate@PAPAVAsmCmd@@HPAV1@@std@@YAXPAPAVAsmCmd@@00PAH0@Z PROC ; std::_Rotate<AsmCmd * *,int,AsmCmd *>, COMDAT
; Line 3256
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3257
	mov	eax, DWORD PTR __Mid$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Shift$[ebp], eax
; Line 3258
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 3260
	mov	eax, DWORD PTR __Shift$[ebp]
	mov	DWORD PTR __Factor$60376[ebp], eax
$LN9@Rotate:
	cmp	DWORD PTR __Factor$60376[ebp], 0
	je	SHORT $LN8@Rotate
; Line 3262
	mov	eax, DWORD PTR __Count$[ebp]
	cdq
	idiv	DWORD PTR __Factor$60376[ebp]
	mov	DWORD PTR __Tmp$60380[ebp], edx
; Line 3263
	mov	eax, DWORD PTR __Factor$60376[ebp]
	mov	DWORD PTR __Count$[ebp], eax
; Line 3264
	mov	eax, DWORD PTR __Tmp$60380[ebp]
	mov	DWORD PTR __Factor$60376[ebp], eax
; Line 3265
	jmp	SHORT $LN9@Rotate
$LN8@Rotate:
; Line 3267
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	cmp	DWORD PTR __Count$[ebp], eax
	jge	$LN10@Rotate
	jmp	SHORT $LN6@Rotate
$LN5@Rotate:
; Line 3268
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
$LN6@Rotate:
	cmp	DWORD PTR __Count$[ebp], 0
	jle	$LN10@Rotate
; Line 3270
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Hole$60385[ebp], edx
; Line 3271
	mov	eax, DWORD PTR __Hole$60385[ebp]
	mov	DWORD PTR __Next$60386[ebp], eax
; Line 3272
	mov	eax, DWORD PTR __Shift$[ebp]
	mov	ecx, DWORD PTR __Next$60386[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	cmp	edx, DWORD PTR __Last$[ebp]
	jne	SHORT $LN12@Rotate
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN13@Rotate
$LN12@Rotate:
	mov	ecx, DWORD PTR __Shift$[ebp]
	mov	edx, DWORD PTR __Next$60386[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv82[ebp], eax
$LN13@Rotate:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR __Next1$60387[ebp], ecx
$LN3@Rotate:
; Line 3275
	mov	eax, DWORD PTR __Next1$60387[ebp]
	push	eax
	mov	ecx, DWORD PTR __Next$60386[ebp]
	push	ecx
	call	??$iter_swap@PAPAVAsmCmd@@PAPAV1@@std@@YAXPAPAVAsmCmd@@0@Z ; std::iter_swap<AsmCmd * *,AsmCmd * *>
	add	esp, 8
; Line 3276
	mov	eax, DWORD PTR __Next1$60387[ebp]
	mov	DWORD PTR __Next$60386[ebp], eax
; Line 3278
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __Next1$60387[ebp]
	sar	eax, 2
	cmp	DWORD PTR __Shift$[ebp], eax
	jge	SHORT $LN14@Rotate
	mov	ecx, DWORD PTR __Shift$[ebp]
	mov	edx, DWORD PTR __Next1$60387[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN15@Rotate
$LN14@Rotate:
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, DWORD PTR __Next1$60387[ebp]
	sar	ecx, 2
	mov	edx, DWORD PTR __Shift$[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR __First$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv95[ebp], ecx
$LN15@Rotate:
	mov	edx, DWORD PTR tv95[ebp]
	mov	DWORD PTR __Next1$60387[ebp], edx
; Line 3279
	mov	eax, DWORD PTR __Next1$60387[ebp]
	cmp	eax, DWORD PTR __Hole$60385[ebp]
	jne	SHORT $LN1@Rotate
; Line 3280
	jmp	SHORT $LN2@Rotate
$LN1@Rotate:
; Line 3281
	jmp	SHORT $LN3@Rotate
$LN2@Rotate:
; Line 3282
	jmp	$LN5@Rotate
$LN10@Rotate:
; Line 3283
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Rotate@PAPAVAsmCmd@@HPAV1@@std@@YAXPAPAVAsmCmd@@00PAH0@Z ENDP ; std::_Rotate<AsmCmd * *,int,AsmCmd *>
_TEXT	ENDS
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Off$ = 32						; size = 4
___formal$ = 36						; size = 1
??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>, COMDAT
; Line 885
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 887
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Distance2
; Line 889
	push	889					; 00000379H
	push	OFFSET ??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 12					; 0000000cH
; Line 890
	push	890					; 0000037aH
	push	OFFSET ??_C@_1IE@MNKNPHOP@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 12					; 0000000cH
$LN1@Distance2:
; Line 894
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
	mov	ecx, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [edx], eax
; Line 895
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@HUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@HUrandom_access_iterator_tag@0@@Z PROC ; std::_Advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>, COMDAT
; Line 840
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 841
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator+=
; Line 842
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@HUrandom_access_iterator_tag@0@@Z ENDP ; std::_Advance<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >,int>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z$0
__ehfuncinfo$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z
_TEXT	SEGMENT
tv77 = -244						; size = 4
$T67333 = -236						; size = 4
$T67334 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z PROC ; std::allocator<AsmCmd *>::construct<AsmCmd1 *>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T67334[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T67334[ebp], 0
	je	SHORT $LN3@construct@5
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@PAVAsmCmd1@@@std@@YA$$QAPAVAsmCmd1@@AAPAV1@@Z ; std::forward<AsmCmd1 *>
	add	esp, 4
	mov	edx, DWORD PTR $T67334[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T67334[ebp]
	mov	DWORD PTR tv77[ebp], ecx
	jmp	SHORT $LN4@construct@5
$LN3@construct@5:
	mov	DWORD PTR tv77[ebp], 0
$LN4@construct@5:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T67333[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T67334[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAVAsmCmd1@@@?$allocator@PAVAsmCmd@@@std@@QAEXPAPAVAsmCmd@@$$QAPAVAsmCmd1@@@Z ENDP ; std::allocator<AsmCmd *>::construct<AsmCmd1 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 478
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 479
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Iter_cat@2:
	DD	1
	DD	$LN4@Iter_cat@2
$LN4@Iter_cat@2:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat@2
$LN3@Iter_cat@2:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
_TEXT	ENDS
PUBLIC	??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; Line 714
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 715
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang@2
; Line 717
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 12					; 0000000cH
; Line 718
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
	add	esp, 12					; 0000000cH
; Line 719
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang@2
; Line 720
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_rang@2:
; Line 722
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAPAVAsmCmd@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVAsmCmd@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVAsmCmd@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVAsmCmd@@@Z PROC ; std::_Iter_cat<AsmCmd * *>, COMDAT
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 478
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 479
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Iter_cat@3:
	DD	1
	DD	$LN4@Iter_cat@3
$LN4@Iter_cat@3:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat@3
$LN3@Iter_cat@3:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAPAVAsmCmd@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVAsmCmd@@@Z ENDP ; std::_Iter_cat<AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Debug_range2@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<AsmCmd * *>, COMDAT
; Line 714
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 715
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang@3
; Line 717
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z ; std::_Debug_pointer<AsmCmd *>
	add	esp, 12					; 0000000cH
; Line 718
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@PB_WI@Z ; std::_Debug_pointer<AsmCmd *>
	add	esp, 12					; 0000000cH
; Line 719
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang@3
; Line 720
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang@3:
; Line 722
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range2@PAPAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@PAPAVOptimization@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVOptimization@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVOptimization@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVOptimization@@@Z PROC ; std::_Iter_cat<Optimization * *>, COMDAT
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 478
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 479
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Iter_cat@4:
	DD	1
	DD	$LN4@Iter_cat@4
$LN4@Iter_cat@4:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat@4
$LN3@Iter_cat@4:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAPAVOptimization@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVOptimization@@@Z ENDP ; std::_Iter_cat<Optimization * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Debug_range2@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<Optimization * *>, COMDAT
; Line 714
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 715
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang@4
; Line 717
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVOptimization@@@std@@YAXPAPAVOptimization@@PB_WI@Z ; std::_Debug_pointer<Optimization *>
	add	esp, 12					; 0000000cH
; Line 718
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVOptimization@@@std@@YAXPAPAVOptimization@@PB_WI@Z ; std::_Debug_pointer<Optimization *>
	add	esp, 12					; 0000000cH
; Line 719
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang@4
; Line 720
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang@4:
; Line 722
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range2@PAPAVOptimization@@@std@@YAXPAPAVOptimization@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<Optimization * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@@Z PROC	; std::_Destroy<AsmCmd *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy@PAVAsmCmd@@@std@@YAXPAPAVAsmCmd@@@Z ENDP	; std::_Destroy<AsmCmd *>
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\vector
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 381
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??G?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
; Line 382
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??G?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::_Compat
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > >::operator-
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 684
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 685
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@V?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_Vector_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
_TEXT	ENDS
PUBLIC	??$swap@PAVAsmCmd@@@std@@YAXAAPAVAsmCmd@@0@Z	; std::swap<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$iter_swap@PAPAVAsmCmd@@PAPAV1@@std@@YAXPAPAVAsmCmd@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@PAPAVAsmCmd@@PAPAV1@@std@@YAXPAPAVAsmCmd@@0@Z PROC ; std::iter_swap<AsmCmd * *,AsmCmd * *>, COMDAT
; Line 2133
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2134
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAVAsmCmd@@@std@@YAXAAPAVAsmCmd@@0@Z ; std::swap<AsmCmd *>
	add	esp, 8
; Line 2135
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$iter_swap@PAPAVAsmCmd@@PAPAV1@@std@@YAXPAPAVAsmCmd@@0@Z ENDP ; std::iter_swap<AsmCmd * *,AsmCmd * *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >, COMDAT
; Line 684
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 685
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@PAVAsmCmd@@V?$allocator@PAVAsmCmd@@@std@@@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<AsmCmd *,std::allocator<AsmCmd *> > > >
_TEXT	ENDS
PUBLIC	??$_Move@AAPAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::_Move<AsmCmd * &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$swap@PAVAsmCmd@@@std@@YAXAAPAVAsmCmd@@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAVAsmCmd@@@std@@YAXAAPAVAsmCmd@@0@Z PROC	; std::swap<AsmCmd *>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::_Move<AsmCmd * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$_Move@AAPAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::_Move<AsmCmd * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 104
	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ; std::_Move<AsmCmd * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAVAsmCmd@@@std@@YAXAAPAVAsmCmd@@0@Z ENDP	; std::swap<AsmCmd *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Move@AAPAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z PROC ; std::_Move<AsmCmd * &>, COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@AAPAVAsmCmd@@@std@@YA$$QAPAVAsmCmd@@AAPAV1@@Z ENDP ; std::_Move<AsmCmd * &>
_TEXT	ENDS
PUBLIC	??_C@_0BE@MHJLCOGB@Wrong?5returned?5type?$AA@	; `string'
PUBLIC	??_C@_0BL@FPCBHOHD@Function?5must?5return?5value?$AA@ ; `string'
PUBLIC	??_C@_0CB@EJEKDCHO@?$CCbreak?$CC?5must?5be?5inside?5the?5cycle@ ; `string'
PUBLIC	??_C@_0CE@IBPIGCOG@?$CCcontinue?$CC?5must?5be?5inside?5the?5cy@ ; `string'
PUBLIC	??_C@_0CI@GANIHBEG@Operator?5must?5be?5inside?5of?5any?5f@ ; `string'
PUBLIC	??_C@_0BB@FMGLMOFH@?$CCwhile?$CC?5expected?$AA@	; `string'
PUBLIC	??_C@_0CB@IBLIKDLB@Opening?5figure?5bracket?5is?5missed@ ; `string'
PUBLIC	??_C@_0BK@JDILDLML@Opening?5bracket?5is?5missed?$AA@ ; `string'
PUBLIC	??_C@_0BJ@JHBDJPCO@Figure?5brackets?5mismatch?$AA@ ; `string'
PUBLIC	??_C@_0BK@LGPDFELP@Variable?5cannot?5be?5?$CCvoid?$CC?$AA@ ; `string'
PUBLIC	??_C@_0EE@HPEBBLNI@Functions?5are?5not?5allowed?5in?5str@ ; `string'
PUBLIC	??_C@_0BM@BNFHPGFM@Array?5type?5cannot?5be?5?$CCvoid?$CC?$AA@ ; `string'
PUBLIC	??_C@_0BC@CNHIOPIB@Operator?5expected?$AA@	; `string'
PUBLIC	??_C@_0P@OHCOEDFF@incorrect?5type?$AA@		; `string'
PUBLIC	??_C@_0BG@GHNBNLIP@Int?5or?5float?5expected?$AA@ ; `string'
PUBLIC	??_C@_0L@GOFJAGBL@Wrong?5type?$AA@		; `string'
PUBLIC	??_C@_0BE@GDNPKCLK@Token?5type?5expected?$AA@	; `string'
PUBLIC	??_C@_0CA@ICOPPOHH@Closing?5figure?5bracket?5expected?$AA@ ; `string'
PUBLIC	??_C@_0BH@HFFAACJB@Variable?5type?5expected?$AA@ ; `string'
PUBLIC	??_C@_0BN@GBEPKHIG@Open?5figure?5bracket?5expected?$AA@ ; `string'
PUBLIC	??_C@_0N@HIPKJAJN@Invalid?5type?$AA@		; `string'
PUBLIC	??_C@_0BM@JEOIJICD@Semicolon?5or?5comma?5expected?$AA@ ; `string'
PUBLIC	??_C@_0CE@GGGLJGCG@Positive?5integer?5dimension?5expec@ ; `string'
PUBLIC	??_C@_0CA@KGFMEHCP@Opening?5square?5bracket?5expected?$AA@ ; `string'
PUBLIC	??_C@_0BB@MAHLGBLG@Wrong?5value?5type?$AA@	; `string'
PUBLIC	??_C@_0BC@DLFLANJC@Constant?5expected?$AA@	; `string'
PUBLIC	??_C@_0BP@JLEBJMOF@Constant?5initializing?5expected?$AA@ ; `string'
PUBLIC	??_C@_0BO@HPNBCJMN@?$CCMain?$CC?5cannot?5be?5the?5constant?$AA@ ; `string'
PUBLIC	??_C@_0BE@CEFGGECM@Const?5type?5expected?$AA@	; `string'
PUBLIC	??_C@_0BD@PMJDBOKM@Semicolon?5expected?$AA@	; `string'
PUBLIC	??_C@_0BE@LNKIGPJC@Identifier?5expected?$AA@	; `string'
PUBLIC	??_C@_0BH@EOLJMNFM@Invalid?5structure?5name?$AA@ ; `string'
PUBLIC	??_C@_0BE@OHAGMGLG@Incorrect?5structure?$AA@	; `string'
PUBLIC	??_C@_0BO@FEPBAKMO@Closing?5square?5bracket?5missed?$AA@ ; `string'
PUBLIC	??_C@_0BD@MNHLFGLB@Invalid?5array?5name?$AA@	; `string'
PUBLIC	??_C@_0BA@HLOPPAJE@Incorrect?5array?$AA@	; `string'
PUBLIC	??_C@_0BB@FKAIECKK@Unexpected?5token?$AA@	; `string'
PUBLIC	??_C@_0BG@CMNOFHKI@Invalid?5function?5call?$AA@	; `string'
PUBLIC	??_C@_0CB@JKMBFFMF@?$CCmain?$CC?5function?5cannot?5be?5called@ ; `string'
PUBLIC	??_C@_0BK@PCEFAABH@Closing?5bracket?5is?5missed?$AA@ ; `string'
PUBLIC	??_C@_0P@KAJENGBP@Comma?5expected?$AA@		; `string'
PUBLIC	??_C@_0O@MLMOPKDN@Type?5mismatch?$AA@		; `string'
PUBLIC	??_C@_0CM@PMFKFCMN@The?5function?5contains?5more?5than?5@ ; `string'
PUBLIC	??_C@_0BJ@PEEMDLOD@Array?5dimension?5mismatch?$AA@ ; `string'
PUBLIC	??_C@_0CD@DLJCKKOL@Void?5function?5cannot?5be?5an?5opera@ ; `string'
PUBLIC	??_C@_0CG@PFADCHMD@Float?5number?5cannot?5be?5an?5array?5@ ; `string'
PUBLIC	??_C@_0CE@GAIEAEEP@Shift?8s?5operands?5must?5be?5an?5inte@ ; `string'
PUBLIC	??_C@_0BG@CAOHKCOF@Wrong?5left?9side?5value?$AA@ ; `string'
EXTRN	_atexit:PROC
;	COMDAT ??_C@_0BE@MHJLCOGB@Wrong?5returned?5type?$AA@
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\misc.h
CONST	SEGMENT
??_C@_0BE@MHJLCOGB@Wrong?5returned?5type?$AA@ DB 'Wrong returned type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FPCBHOHD@Function?5must?5return?5value?$AA@
CONST	SEGMENT
??_C@_0BL@FPCBHOHD@Function?5must?5return?5value?$AA@ DB 'Function must r'
	DB	'eturn value', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EJEKDCHO@?$CCbreak?$CC?5must?5be?5inside?5the?5cycle@
CONST	SEGMENT
??_C@_0CB@EJEKDCHO@?$CCbreak?$CC?5must?5be?5inside?5the?5cycle@ DB '"brea'
	DB	'k" must be inside the cycle', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IBPIGCOG@?$CCcontinue?$CC?5must?5be?5inside?5the?5cy@
CONST	SEGMENT
??_C@_0CE@IBPIGCOG@?$CCcontinue?$CC?5must?5be?5inside?5the?5cy@ DB '"cont'
	DB	'inue" must be inside the cycle', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GANIHBEG@Operator?5must?5be?5inside?5of?5any?5f@
CONST	SEGMENT
??_C@_0CI@GANIHBEG@Operator?5must?5be?5inside?5of?5any?5f@ DB 'Operator m'
	DB	'ust be inside of any function', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FMGLMOFH@?$CCwhile?$CC?5expected?$AA@
CONST	SEGMENT
??_C@_0BB@FMGLMOFH@?$CCwhile?$CC?5expected?$AA@ DB '"while" expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IBLIKDLB@Opening?5figure?5bracket?5is?5missed@
CONST	SEGMENT
??_C@_0CB@IBLIKDLB@Opening?5figure?5bracket?5is?5missed@ DB 'Opening figu'
	DB	're bracket is missed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JDILDLML@Opening?5bracket?5is?5missed?$AA@
CONST	SEGMENT
??_C@_0BK@JDILDLML@Opening?5bracket?5is?5missed?$AA@ DB 'Opening bracket '
	DB	'is missed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JHBDJPCO@Figure?5brackets?5mismatch?$AA@
CONST	SEGMENT
??_C@_0BJ@JHBDJPCO@Figure?5brackets?5mismatch?$AA@ DB 'Figure brackets mi'
	DB	'smatch', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LGPDFELP@Variable?5cannot?5be?5?$CCvoid?$CC?$AA@
CONST	SEGMENT
??_C@_0BK@LGPDFELP@Variable?5cannot?5be?5?$CCvoid?$CC?$AA@ DB 'Variable c'
	DB	'annot be "void"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@HPEBBLNI@Functions?5are?5not?5allowed?5in?5str@
CONST	SEGMENT
??_C@_0EE@HPEBBLNI@Functions?5are?5not?5allowed?5in?5str@ DB 'Functions a'
	DB	're not allowed in structures, blocks and function blocks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BNFHPGFM@Array?5type?5cannot?5be?5?$CCvoid?$CC?$AA@
CONST	SEGMENT
??_C@_0BM@BNFHPGFM@Array?5type?5cannot?5be?5?$CCvoid?$CC?$AA@ DB 'Array t'
	DB	'ype cannot be "void"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNHIOPIB@Operator?5expected?$AA@
CONST	SEGMENT
??_C@_0BC@CNHIOPIB@Operator?5expected?$AA@ DB 'Operator expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OHCOEDFF@incorrect?5type?$AA@
CONST	SEGMENT
??_C@_0P@OHCOEDFF@incorrect?5type?$AA@ DB 'incorrect type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GHNBNLIP@Int?5or?5float?5expected?$AA@
CONST	SEGMENT
??_C@_0BG@GHNBNLIP@Int?5or?5float?5expected?$AA@ DB 'Int or float expecte'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GOFJAGBL@Wrong?5type?$AA@
CONST	SEGMENT
??_C@_0L@GOFJAGBL@Wrong?5type?$AA@ DB 'Wrong type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GDNPKCLK@Token?5type?5expected?$AA@
CONST	SEGMENT
??_C@_0BE@GDNPKCLK@Token?5type?5expected?$AA@ DB 'Token type expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ICOPPOHH@Closing?5figure?5bracket?5expected?$AA@
CONST	SEGMENT
??_C@_0CA@ICOPPOHH@Closing?5figure?5bracket?5expected?$AA@ DB 'Closing fi'
	DB	'gure bracket expected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HFFAACJB@Variable?5type?5expected?$AA@
CONST	SEGMENT
??_C@_0BH@HFFAACJB@Variable?5type?5expected?$AA@ DB 'Variable type expect'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GBEPKHIG@Open?5figure?5bracket?5expected?$AA@
CONST	SEGMENT
??_C@_0BN@GBEPKHIG@Open?5figure?5bracket?5expected?$AA@ DB 'Open figure b'
	DB	'racket expected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HIPKJAJN@Invalid?5type?$AA@
CONST	SEGMENT
??_C@_0N@HIPKJAJN@Invalid?5type?$AA@ DB 'Invalid type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JEOIJICD@Semicolon?5or?5comma?5expected?$AA@
CONST	SEGMENT
??_C@_0BM@JEOIJICD@Semicolon?5or?5comma?5expected?$AA@ DB 'Semicolon or c'
	DB	'omma expected', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GGGLJGCG@Positive?5integer?5dimension?5expec@
CONST	SEGMENT
??_C@_0CE@GGGLJGCG@Positive?5integer?5dimension?5expec@ DB 'Positive inte'
	DB	'ger dimension expected', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KGFMEHCP@Opening?5square?5bracket?5expected?$AA@
CONST	SEGMENT
??_C@_0CA@KGFMEHCP@Opening?5square?5bracket?5expected?$AA@ DB 'Opening sq'
	DB	'uare bracket expected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MAHLGBLG@Wrong?5value?5type?$AA@
CONST	SEGMENT
??_C@_0BB@MAHLGBLG@Wrong?5value?5type?$AA@ DB 'Wrong value type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DLFLANJC@Constant?5expected?$AA@
CONST	SEGMENT
??_C@_0BC@DLFLANJC@Constant?5expected?$AA@ DB 'Constant expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JLEBJMOF@Constant?5initializing?5expected?$AA@
CONST	SEGMENT
??_C@_0BP@JLEBJMOF@Constant?5initializing?5expected?$AA@ DB 'Constant ini'
	DB	'tializing expected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HPNBCJMN@?$CCMain?$CC?5cannot?5be?5the?5constant?$AA@
CONST	SEGMENT
??_C@_0BO@HPNBCJMN@?$CCMain?$CC?5cannot?5be?5the?5constant?$AA@ DB '"Main'
	DB	'" cannot be the constant', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CEFGGECM@Const?5type?5expected?$AA@
CONST	SEGMENT
??_C@_0BE@CEFGGECM@Const?5type?5expected?$AA@ DB 'Const type expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PMJDBOKM@Semicolon?5expected?$AA@
CONST	SEGMENT
??_C@_0BD@PMJDBOKM@Semicolon?5expected?$AA@ DB 'Semicolon expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LNKIGPJC@Identifier?5expected?$AA@
CONST	SEGMENT
??_C@_0BE@LNKIGPJC@Identifier?5expected?$AA@ DB 'Identifier expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EOLJMNFM@Invalid?5structure?5name?$AA@
CONST	SEGMENT
??_C@_0BH@EOLJMNFM@Invalid?5structure?5name?$AA@ DB 'Invalid structure na'
	DB	'me', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OHAGMGLG@Incorrect?5structure?$AA@
CONST	SEGMENT
??_C@_0BE@OHAGMGLG@Incorrect?5structure?$AA@ DB 'Incorrect structure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FEPBAKMO@Closing?5square?5bracket?5missed?$AA@
CONST	SEGMENT
??_C@_0BO@FEPBAKMO@Closing?5square?5bracket?5missed?$AA@ DB 'Closing squa'
	DB	're bracket missed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MNHLFGLB@Invalid?5array?5name?$AA@
CONST	SEGMENT
??_C@_0BD@MNHLFGLB@Invalid?5array?5name?$AA@ DB 'Invalid array name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLOPPAJE@Incorrect?5array?$AA@
CONST	SEGMENT
??_C@_0BA@HLOPPAJE@Incorrect?5array?$AA@ DB 'Incorrect array', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FKAIECKK@Unexpected?5token?$AA@
CONST	SEGMENT
??_C@_0BB@FKAIECKK@Unexpected?5token?$AA@ DB 'Unexpected token', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CMNOFHKI@Invalid?5function?5call?$AA@
CONST	SEGMENT
??_C@_0BG@CMNOFHKI@Invalid?5function?5call?$AA@ DB 'Invalid function call'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JKMBFFMF@?$CCmain?$CC?5function?5cannot?5be?5called@
CONST	SEGMENT
??_C@_0CB@JKMBFFMF@?$CCmain?$CC?5function?5cannot?5be?5called@ DB '"main"'
	DB	' function cannot be called', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PCEFAABH@Closing?5bracket?5is?5missed?$AA@
CONST	SEGMENT
??_C@_0BK@PCEFAABH@Closing?5bracket?5is?5missed?$AA@ DB 'Closing bracket '
	DB	'is missed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KAJENGBP@Comma?5expected?$AA@
CONST	SEGMENT
??_C@_0P@KAJENGBP@Comma?5expected?$AA@ DB 'Comma expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MLMOPKDN@Type?5mismatch?$AA@
CONST	SEGMENT
??_C@_0O@MLMOPKDN@Type?5mismatch?$AA@ DB 'Type mismatch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PMFKFCMN@The?5function?5contains?5more?5than?5@
CONST	SEGMENT
??_C@_0CM@PMFKFCMN@The?5function?5contains?5more?5than?5@ DB 'The functio'
	DB	'n contains more than 0 arguments', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PEEMDLOD@Array?5dimension?5mismatch?$AA@
CONST	SEGMENT
??_C@_0BJ@PEEMDLOD@Array?5dimension?5mismatch?$AA@ DB 'Array dimension mi'
	DB	'smatch', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DLJCKKOL@Void?5function?5cannot?5be?5an?5opera@
CONST	SEGMENT
??_C@_0CD@DLJCKKOL@Void?5function?5cannot?5be?5an?5opera@ DB 'Void functi'
	DB	'on cannot be an operand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PFADCHMD@Float?5number?5cannot?5be?5an?5array?5@
CONST	SEGMENT
??_C@_0CG@PFADCHMD@Float?5number?5cannot?5be?5an?5array?5@ DB 'Float numb'
	DB	'er cannot be an array index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GAIEAEEP@Shift?8s?5operands?5must?5be?5an?5inte@
CONST	SEGMENT
??_C@_0CE@GAIEAEEP@Shift?8s?5operands?5must?5be?5an?5inte@ DB 'Shift''s o'
	DB	'perands must be an integer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CAOHKCOF@Wrong?5left?9side?5value?$AA@
CONST	SEGMENT
??_C@_0BG@CAOHKCOF@Wrong?5left?9side?5value?$AA@ DB 'Wrong left-side valu'
	DB	'e', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??__Ecode@@YAXXZ DD 019930522H
	DD	030H
	DD	FLAT:__unwindtable$??__Ecode@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??__Ecode@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$13
	DD	0dH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$15
	DD	0fH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$16
	DD	010H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$17
	DD	011H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$18
	DD	012H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$19
	DD	013H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$21
	DD	015H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$22
	DD	016H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$23
	DD	017H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$24
	DD	018H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$25
	DD	019H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$26
	DD	01aH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$27
	DD	01bH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$28
	DD	01cH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$29
	DD	01dH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$30
	DD	01eH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$31
	DD	01fH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$32
	DD	020H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$33
	DD	021H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$34
	DD	022H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$35
	DD	023H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$36
	DD	024H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$37
	DD	025H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$38
	DD	026H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$39
	DD	027H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$40
	DD	028H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$41
	DD	029H
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$42
	DD	02aH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$43
	DD	02bH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$44
	DD	02cH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$45
	DD	02dH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$46
	DD	02eH
	DD	FLAT:__unwindfunclet$??__Ecode@@YAXXZ$47
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__Ecode@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__Ecode@@YAXXZ PROC					; `dynamic initializer for 'code'', COMDAT
; Line 9
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__Ecode@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_0BG@CAOHKCOF@Wrong?5left?9side?5value?$AA@
	mov	ecx, OFFSET _code
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_0CE@GAIEAEEP@Shift?8s?5operands?5must?5be?5an?5inte@
	mov	ecx, OFFSET _code+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 10
	push	OFFSET ??_C@_0CG@PFADCHMD@Float?5number?5cannot?5be?5an?5array?5@
	mov	ecx, OFFSET _code+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_0CD@DLJCKKOL@Void?5function?5cannot?5be?5an?5opera@
	mov	ecx, OFFSET _code+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 11
	push	OFFSET ??_C@_0BJ@PEEMDLOD@Array?5dimension?5mismatch?$AA@
	mov	ecx, OFFSET _code+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??_C@_0CM@PMFKFCMN@The?5function?5contains?5more?5than?5@
	mov	ecx, OFFSET _code+160
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 12
	push	OFFSET ??_C@_0O@MLMOPKDN@Type?5mismatch?$AA@
	mov	ecx, OFFSET _code+192
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	OFFSET ??_C@_0P@KAJENGBP@Comma?5expected?$AA@
	mov	ecx, OFFSET _code+224
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET ??_C@_0BK@PCEFAABH@Closing?5bracket?5is?5missed?$AA@
	mov	ecx, OFFSET _code+256
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 13
	push	OFFSET ??_C@_0CB@JKMBFFMF@?$CCmain?$CC?5function?5cannot?5be?5called@
	mov	ecx, OFFSET _code+288
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	push	OFFSET ??_C@_0BG@CMNOFHKI@Invalid?5function?5call?$AA@
	mov	ecx, OFFSET _code+320
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	OFFSET ??_C@_0BB@FKAIECKK@Unexpected?5token?$AA@
	mov	ecx, OFFSET _code+352
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; Line 14
	push	OFFSET ??_C@_0BA@HLOPPAJE@Incorrect?5array?$AA@
	mov	ecx, OFFSET _code+384
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	OFFSET ??_C@_0BD@MNHLFGLB@Invalid?5array?5name?$AA@
	mov	ecx, OFFSET _code+416
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	push	OFFSET ??_C@_0BO@FEPBAKMO@Closing?5square?5bracket?5missed?$AA@
	mov	ecx, OFFSET _code+448
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
; Line 15
	push	OFFSET ??_C@_0BE@OHAGMGLG@Incorrect?5structure?$AA@
	mov	ecx, OFFSET _code+480
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	OFFSET ??_C@_0BH@EOLJMNFM@Invalid?5structure?5name?$AA@
	mov	ecx, OFFSET _code+512
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	OFFSET ??_C@_0BE@LNKIGPJC@Identifier?5expected?$AA@
	mov	ecx, OFFSET _code+544
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	push	OFFSET ??_C@_0BD@PMJDBOKM@Semicolon?5expected?$AA@
	mov	ecx, OFFSET _code+576
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
; Line 16
	push	OFFSET ??_C@_0BE@CEFGGECM@Const?5type?5expected?$AA@
	mov	ecx, OFFSET _code+608
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	push	OFFSET ??_C@_0BO@HPNBCJMN@?$CCMain?$CC?5cannot?5be?5the?5constant?$AA@
	mov	ecx, OFFSET _code+640
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	OFFSET ??_C@_0BP@JLEBJMOF@Constant?5initializing?5expected?$AA@
	mov	ecx, OFFSET _code+672
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
; Line 17
	push	OFFSET ??_C@_0BC@DLFLANJC@Constant?5expected?$AA@
	mov	ecx, OFFSET _code+704
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	push	OFFSET ??_C@_0BB@MAHLGBLG@Wrong?5value?5type?$AA@
	mov	ecx, OFFSET _code+736
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	push	OFFSET ??_C@_0CA@KGFMEHCP@Opening?5square?5bracket?5expected?$AA@
	mov	ecx, OFFSET _code+768
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
; Line 18
	push	OFFSET ??_C@_0CE@GGGLJGCG@Positive?5integer?5dimension?5expec@
	mov	ecx, OFFSET _code+800
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	push	OFFSET ??_C@_0BM@JEOIJICD@Semicolon?5or?5comma?5expected?$AA@
	mov	ecx, OFFSET _code+832
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	push	OFFSET ??_C@_0N@HIPKJAJN@Invalid?5type?$AA@
	mov	ecx, OFFSET _code+864
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
; Line 19
	push	OFFSET ??_C@_0BE@LNKIGPJC@Identifier?5expected?$AA@
	mov	ecx, OFFSET _code+896
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	push	OFFSET ??_C@_0BN@GBEPKHIG@Open?5figure?5bracket?5expected?$AA@
	mov	ecx, OFFSET _code+928
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	push	OFFSET ??_C@_0BH@HFFAACJB@Variable?5type?5expected?$AA@
	mov	ecx, OFFSET _code+960
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
; Line 20
	push	OFFSET ??_C@_0CA@ICOPPOHH@Closing?5figure?5bracket?5expected?$AA@
	mov	ecx, OFFSET _code+992
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	push	OFFSET ??_C@_0BE@GDNPKCLK@Token?5type?5expected?$AA@
	mov	ecx, OFFSET _code+1024
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	push	OFFSET ??_C@_0L@GOFJAGBL@Wrong?5type?$AA@
	mov	ecx, OFFSET _code+1056
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	push	OFFSET ??_C@_0BG@GHNBNLIP@Int?5or?5float?5expected?$AA@
	mov	ecx, OFFSET _code+1088
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
; Line 21
	push	OFFSET ??_C@_0P@OHCOEDFF@incorrect?5type?$AA@
	mov	ecx, OFFSET _code+1120
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	push	OFFSET ??_C@_0BC@CNHIOPIB@Operator?5expected?$AA@
	mov	ecx, OFFSET _code+1152
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	push	OFFSET ??_C@_0BM@BNFHPGFM@Array?5type?5cannot?5be?5?$CCvoid?$CC?$AA@
	mov	ecx, OFFSET _code+1184
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
; Line 22
	push	OFFSET ??_C@_0EE@HPEBBLNI@Functions?5are?5not?5allowed?5in?5str@
	mov	ecx, OFFSET _code+1216
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
; Line 23
	push	OFFSET ??_C@_0BK@LGPDFELP@Variable?5cannot?5be?5?$CCvoid?$CC?$AA@
	mov	ecx, OFFSET _code+1248
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	push	OFFSET ??_C@_0BJ@JHBDJPCO@Figure?5brackets?5mismatch?$AA@
	mov	ecx, OFFSET _code+1280
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
; Line 24
	push	OFFSET ??_C@_0BK@JDILDLML@Opening?5bracket?5is?5missed?$AA@
	mov	ecx, OFFSET _code+1312
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	push	OFFSET ??_C@_0CB@IBLIKDLB@Opening?5figure?5bracket?5is?5missed@
	mov	ecx, OFFSET _code+1344
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	push	OFFSET ??_C@_0BB@FMGLMOFH@?$CCwhile?$CC?5expected?$AA@
	mov	ecx, OFFSET _code+1376
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
; Line 25
	push	OFFSET ??_C@_0CI@GANIHBEG@Operator?5must?5be?5inside?5of?5any?5f@
	mov	ecx, OFFSET _code+1408
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	push	OFFSET ??_C@_0CE@IBPIGCOG@?$CCcontinue?$CC?5must?5be?5inside?5the?5cy@
	mov	ecx, OFFSET _code+1440
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
; Line 26
	push	OFFSET ??_C@_0CB@EJEKDCHO@?$CCbreak?$CC?5must?5be?5inside?5the?5cycle@
	mov	ecx, OFFSET _code+1472
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	push	OFFSET ??_C@_0BL@FPCBHOHD@Function?5must?5return?5value?$AA@
	mov	ecx, OFFSET _code+1504
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	push	OFFSET ??_C@_0BE@MHJLCOGB@Wrong?5returned?5type?$AA@
	mov	ecx, OFFSET _code+1536
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__Fcode@@YAXXZ			; `dynamic atexit destructor for 'code''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__Ecode@@YAXXZ$0:
	mov	ecx, OFFSET _code
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$1:
	mov	ecx, OFFSET _code+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$2:
	mov	ecx, OFFSET _code+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$3:
	mov	ecx, OFFSET _code+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$4:
	mov	ecx, OFFSET _code+128
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$5:
	mov	ecx, OFFSET _code+160
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$6:
	mov	ecx, OFFSET _code+192
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$7:
	mov	ecx, OFFSET _code+224
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$8:
	mov	ecx, OFFSET _code+256
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$9:
	mov	ecx, OFFSET _code+288
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$10:
	mov	ecx, OFFSET _code+320
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$11:
	mov	ecx, OFFSET _code+352
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$12:
	mov	ecx, OFFSET _code+384
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$13:
	mov	ecx, OFFSET _code+416
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$14:
	mov	ecx, OFFSET _code+448
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$15:
	mov	ecx, OFFSET _code+480
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$16:
	mov	ecx, OFFSET _code+512
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$17:
	mov	ecx, OFFSET _code+544
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$18:
	mov	ecx, OFFSET _code+576
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$19:
	mov	ecx, OFFSET _code+608
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$20:
	mov	ecx, OFFSET _code+640
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$21:
	mov	ecx, OFFSET _code+672
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$22:
	mov	ecx, OFFSET _code+704
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$23:
	mov	ecx, OFFSET _code+736
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$24:
	mov	ecx, OFFSET _code+768
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$25:
	mov	ecx, OFFSET _code+800
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$26:
	mov	ecx, OFFSET _code+832
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$27:
	mov	ecx, OFFSET _code+864
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$28:
	mov	ecx, OFFSET _code+896
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$29:
	mov	ecx, OFFSET _code+928
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$30:
	mov	ecx, OFFSET _code+960
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$31:
	mov	ecx, OFFSET _code+992
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$32:
	mov	ecx, OFFSET _code+1024
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$33:
	mov	ecx, OFFSET _code+1056
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$34:
	mov	ecx, OFFSET _code+1088
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$35:
	mov	ecx, OFFSET _code+1120
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$36:
	mov	ecx, OFFSET _code+1152
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$37:
	mov	ecx, OFFSET _code+1184
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$38:
	mov	ecx, OFFSET _code+1216
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$39:
	mov	ecx, OFFSET _code+1248
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$40:
	mov	ecx, OFFSET _code+1280
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$41:
	mov	ecx, OFFSET _code+1312
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$42:
	mov	ecx, OFFSET _code+1344
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$43:
	mov	ecx, OFFSET _code+1376
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$44:
	mov	ecx, OFFSET _code+1408
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$45:
	mov	ecx, OFFSET _code+1440
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$46:
	mov	ecx, OFFSET _code+1472
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__Ecode@@YAXXZ$47:
	mov	ecx, OFFSET _code+1504
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??__Ecode@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__Ecode@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__Ecode@@YAXXZ ENDP					; `dynamic initializer for 'code''
PUBLIC	??_C@_02EDDPJOD@dt?$AA@				; `string'
PUBLIC	??_C@_02HJEEANKG@dq?$AA@			; `string'
PUBLIC	??_C@_02EOPBOLLC@dd?$AA@			; `string'
PUBLIC	??_C@_02CPBOKKCA@dw?$AA@			; `string'
PUBLIC	??_C@_02BIKLEMDE@db?$AA@			; `string'
;	COMDAT ??_C@_02EDDPJOD@dt?$AA@
CONST	SEGMENT
??_C@_02EDDPJOD@dt?$AA@ DB 'dt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HJEEANKG@dq?$AA@
CONST	SEGMENT
??_C@_02HJEEANKG@dq?$AA@ DB 'dq', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EOPBOLLC@dd?$AA@
CONST	SEGMENT
??_C@_02EOPBOLLC@dd?$AA@ DB 'dd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CPBOKKCA@dw?$AA@
CONST	SEGMENT
??_C@_02CPBOKKCA@dw?$AA@ DB 'dw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BIKLEMDE@db?$AA@
CONST	SEGMENT
??_C@_02BIKLEMDE@db?$AA@ DB 'db', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__EMEM_ALLOC_STR@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$3
__ehfuncinfo$??__EMEM_ALLOC_STR@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??__EMEM_ALLOC_STR@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__EMEM_ALLOC_STR@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__EMEM_ALLOC_STR@@YAXXZ PROC				; `dynamic initializer for 'MEM_ALLOC_STR'', COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__EMEM_ALLOC_STR@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_02BIKLEMDE@db?$AA@
	mov	ecx, OFFSET _MEM_ALLOC_STR
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_02CPBOKKCA@dw?$AA@
	mov	ecx, OFFSET _MEM_ALLOC_STR+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_02EOPBOLLC@dd?$AA@
	mov	ecx, OFFSET _MEM_ALLOC_STR+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_02HJEEANKG@dq?$AA@
	mov	ecx, OFFSET _MEM_ALLOC_STR+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??_C@_02EDDPJOD@dt?$AA@
	mov	ecx, OFFSET _MEM_ALLOC_STR+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FMEM_ALLOC_STR@@YAXXZ	; `dynamic atexit destructor for 'MEM_ALLOC_STR''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$0:
	mov	ecx, OFFSET _MEM_ALLOC_STR
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$1:
	mov	ecx, OFFSET _MEM_ALLOC_STR+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$2:
	mov	ecx, OFFSET _MEM_ALLOC_STR+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EMEM_ALLOC_STR@@YAXXZ$3:
	mov	ecx, OFFSET _MEM_ALLOC_STR+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??__EMEM_ALLOC_STR@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__EMEM_ALLOC_STR@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__EMEM_ALLOC_STR@@YAXXZ ENDP				; `dynamic initializer for 'MEM_ALLOC_STR''
PUBLIC	??_C@_04CEJDCDCH@test?$AA@			; `string'
PUBLIC	??_C@_03GKDDHBBI@dec?$AA@			; `string'
PUBLIC	??_C@_03JEAMEGCE@inc?$AA@			; `string'
PUBLIC	??_C@_03PDCNJFPC@sar?$AA@			; `string'
PUBLIC	??_C@_03JNLBDLHF@lea?$AA@			; `string'
PUBLIC	??_C@_05BPPBBCP@fistp?$AA@			; `string'
PUBLIC	??_C@_06HIPCBFJP@assume?$AA@			; `string'
PUBLIC	??_C@_0M@LPAKIOHO@ExitProcess?$AA@		; `string'
PUBLIC	??_C@_03BKMCPNMN@ret?$AA@			; `string'
PUBLIC	??_C@_04OMFAIDPG@call?$AA@			; `string'
PUBLIC	??_C@_05KLLFHCCG@leave?$AA@			; `string'
PUBLIC	??_C@_04NDBHGKOF@endp?$AA@			; `string'
PUBLIC	??_C@_05IHEOCMON@enter?$AA@			; `string'
PUBLIC	??_C@_04MGCDEED@proc?$AA@			; `string'
PUBLIC	??_C@_03NJPJLHCI@jbe?$AA@			; `string'
PUBLIC	??_C@_03NLLPAJHB@jae?$AA@			; `string'
PUBLIC	??_C@_02DJBIDCPN@ja?$AA@			; `string'
PUBLIC	??_C@_02BCDFGBDO@jb?$AA@			; `string'
PUBLIC	??_C@_06LOICGCLB@fcomip?$AA@			; `string'
PUBLIC	??_C@_03BNLJEANC@jnz?$AA@			; `string'
PUBLIC	??_C@_02JACOPJGH@jz?$AA@			; `string'
PUBLIC	??_C@_03NMAFIIHB@cbw?$AA@			; `string'
PUBLIC	??_C@_03PMPMKOHN@shr?$AA@			; `string'
PUBLIC	??_C@_03CILNJBKC@shl?$AA@			; `string'
PUBLIC	??_C@_03NPDCHFMD@jge?$AA@			; `string'
PUBLIC	??_C@_03NDGHJKCC@jle?$AA@			; `string'
PUBLIC	??_C@_02GPECJFHL@jg?$AA@			; `string'
PUBLIC	??_C@_02IMLGEMLA@jl?$AA@			; `string'
PUBLIC	??_C@_03OFBABGAB@jmp?$AA@			; `string'
PUBLIC	??_C@_03NAODEOEM@jne?$AA@			; `string'
PUBLIC	??_C@_02FNHEPHPJ@je?$AA@			; `string'
PUBLIC	??_C@_03JIBIFJIL@cmp?$AA@			; `string'
PUBLIC	??_C@_0L@LLNHNHM@crt_printf?$AA@		; `string'
PUBLIC	??_C@_0L@BMONGFKA@crt__getch?$AA@		; `string'
PUBLIC	??_C@_03COLCDPPJ@xor?$AA@			; `string'
PUBLIC	??_C@_02FODMLBIE@or?$AA@			; `string'
PUBLIC	??_C@_03BOPJPIAM@and?$AA@			; `string'
PUBLIC	??_C@_04EEOKGCEP@fchs?$AA@			; `string'
PUBLIC	??_C@_03GBOCFEHI@neg?$AA@			; `string'
PUBLIC	??_C@_04CKOCDMAH@fstp?$AA@			; `string'
PUBLIC	??_C@_04KFIIMEIE@fdiv?$AA@			; `string'
PUBLIC	??_C@_04HNJBCLMB@fmul?$AA@			; `string'
PUBLIC	??_C@_04FDNECGOD@fsub?$AA@			; `string'
PUBLIC	??_C@_04OCHKNHDG@fadd?$AA@			; `string'
PUBLIC	??_C@_04CJNNKOGB@fild?$AA@			; `string'
PUBLIC	??_C@_03IAKKBENL@fld?$AA@			; `string'
PUBLIC	??_C@_03CNBJFNFA@mov?$AA@			; `string'
PUBLIC	??_C@_03IONCFDEF@cdq?$AA@			; `string'
PUBLIC	??_C@_04GHHNIPCF@push?$AA@			; `string'
PUBLIC	??_C@_03NJDAHFJE@pop?$AA@			; `string'
PUBLIC	??_C@_04CHNIFDFF@idiv?$AA@			; `string'
PUBLIC	??_C@_04PPMBLMBA@imul?$AA@			; `string'
PUBLIC	??_C@_03KCMAIMAP@sub?$AA@			; `string'
PUBLIC	??_C@_03BDGOHNNK@add?$AA@			; `string'
;	COMDAT ??_C@_04CEJDCDCH@test?$AA@
CONST	SEGMENT
??_C@_04CEJDCDCH@test?$AA@ DB 'test', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GKDDHBBI@dec?$AA@
CONST	SEGMENT
??_C@_03GKDDHBBI@dec?$AA@ DB 'dec', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JEAMEGCE@inc?$AA@
CONST	SEGMENT
??_C@_03JEAMEGCE@inc?$AA@ DB 'inc', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PDCNJFPC@sar?$AA@
CONST	SEGMENT
??_C@_03PDCNJFPC@sar?$AA@ DB 'sar', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JNLBDLHF@lea?$AA@
CONST	SEGMENT
??_C@_03JNLBDLHF@lea?$AA@ DB 'lea', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BPPBBCP@fistp?$AA@
CONST	SEGMENT
??_C@_05BPPBBCP@fistp?$AA@ DB 'fistp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HIPCBFJP@assume?$AA@
CONST	SEGMENT
??_C@_06HIPCBFJP@assume?$AA@ DB 'assume', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPAKIOHO@ExitProcess?$AA@
CONST	SEGMENT
??_C@_0M@LPAKIOHO@ExitProcess?$AA@ DB 'ExitProcess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03BKMCPNMN@ret?$AA@
CONST	SEGMENT
??_C@_03BKMCPNMN@ret?$AA@ DB 'ret', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OMFAIDPG@call?$AA@
CONST	SEGMENT
??_C@_04OMFAIDPG@call?$AA@ DB 'call', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KLLFHCCG@leave?$AA@
CONST	SEGMENT
??_C@_05KLLFHCCG@leave?$AA@ DB 'leave', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NDBHGKOF@endp?$AA@
CONST	SEGMENT
??_C@_04NDBHGKOF@endp?$AA@ DB 'endp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IHEOCMON@enter?$AA@
CONST	SEGMENT
??_C@_05IHEOCMON@enter?$AA@ DB 'enter', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MGCDEED@proc?$AA@
CONST	SEGMENT
??_C@_04MGCDEED@proc?$AA@ DB 'proc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NJPJLHCI@jbe?$AA@
CONST	SEGMENT
??_C@_03NJPJLHCI@jbe?$AA@ DB 'jbe', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NLLPAJHB@jae?$AA@
CONST	SEGMENT
??_C@_03NLLPAJHB@jae?$AA@ DB 'jae', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DJBIDCPN@ja?$AA@
CONST	SEGMENT
??_C@_02DJBIDCPN@ja?$AA@ DB 'ja', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BCDFGBDO@jb?$AA@
CONST	SEGMENT
??_C@_02BCDFGBDO@jb?$AA@ DB 'jb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LOICGCLB@fcomip?$AA@
CONST	SEGMENT
??_C@_06LOICGCLB@fcomip?$AA@ DB 'fcomip', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BNLJEANC@jnz?$AA@
CONST	SEGMENT
??_C@_03BNLJEANC@jnz?$AA@ DB 'jnz', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JACOPJGH@jz?$AA@
CONST	SEGMENT
??_C@_02JACOPJGH@jz?$AA@ DB 'jz', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMAFIIHB@cbw?$AA@
CONST	SEGMENT
??_C@_03NMAFIIHB@cbw?$AA@ DB 'cbw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PMPMKOHN@shr?$AA@
CONST	SEGMENT
??_C@_03PMPMKOHN@shr?$AA@ DB 'shr', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CILNJBKC@shl?$AA@
CONST	SEGMENT
??_C@_03CILNJBKC@shl?$AA@ DB 'shl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPDCHFMD@jge?$AA@
CONST	SEGMENT
??_C@_03NPDCHFMD@jge?$AA@ DB 'jge', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDGHJKCC@jle?$AA@
CONST	SEGMENT
??_C@_03NDGHJKCC@jle?$AA@ DB 'jle', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GPECJFHL@jg?$AA@
CONST	SEGMENT
??_C@_02GPECJFHL@jg?$AA@ DB 'jg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IMLGEMLA@jl?$AA@
CONST	SEGMENT
??_C@_02IMLGEMLA@jl?$AA@ DB 'jl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFBABGAB@jmp?$AA@
CONST	SEGMENT
??_C@_03OFBABGAB@jmp?$AA@ DB 'jmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NAODEOEM@jne?$AA@
CONST	SEGMENT
??_C@_03NAODEOEM@jne?$AA@ DB 'jne', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FNHEPHPJ@je?$AA@
CONST	SEGMENT
??_C@_02FNHEPHPJ@je?$AA@ DB 'je', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JIBIFJIL@cmp?$AA@
CONST	SEGMENT
??_C@_03JIBIFJIL@cmp?$AA@ DB 'cmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLNHNHM@crt_printf?$AA@
CONST	SEGMENT
??_C@_0L@LLNHNHM@crt_printf?$AA@ DB 'crt_printf', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMONGFKA@crt__getch?$AA@
CONST	SEGMENT
??_C@_0L@BMONGFKA@crt__getch?$AA@ DB 'crt__getch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03COLCDPPJ@xor?$AA@
CONST	SEGMENT
??_C@_03COLCDPPJ@xor?$AA@ DB 'xor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FODMLBIE@or?$AA@
CONST	SEGMENT
??_C@_02FODMLBIE@or?$AA@ DB 'or', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BOPJPIAM@and?$AA@
CONST	SEGMENT
??_C@_03BOPJPIAM@and?$AA@ DB 'and', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EEOKGCEP@fchs?$AA@
CONST	SEGMENT
??_C@_04EEOKGCEP@fchs?$AA@ DB 'fchs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GBOCFEHI@neg?$AA@
CONST	SEGMENT
??_C@_03GBOCFEHI@neg?$AA@ DB 'neg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CKOCDMAH@fstp?$AA@
CONST	SEGMENT
??_C@_04CKOCDMAH@fstp?$AA@ DB 'fstp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KFIIMEIE@fdiv?$AA@
CONST	SEGMENT
??_C@_04KFIIMEIE@fdiv?$AA@ DB 'fdiv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HNJBCLMB@fmul?$AA@
CONST	SEGMENT
??_C@_04HNJBCLMB@fmul?$AA@ DB 'fmul', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FDNECGOD@fsub?$AA@
CONST	SEGMENT
??_C@_04FDNECGOD@fsub?$AA@ DB 'fsub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OCHKNHDG@fadd?$AA@
CONST	SEGMENT
??_C@_04OCHKNHDG@fadd?$AA@ DB 'fadd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CJNNKOGB@fild?$AA@
CONST	SEGMENT
??_C@_04CJNNKOGB@fild?$AA@ DB 'fild', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IAKKBENL@fld?$AA@
CONST	SEGMENT
??_C@_03IAKKBENL@fld?$AA@ DB 'fld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNBJFNFA@mov?$AA@
CONST	SEGMENT
??_C@_03CNBJFNFA@mov?$AA@ DB 'mov', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IONCFDEF@cdq?$AA@
CONST	SEGMENT
??_C@_03IONCFDEF@cdq?$AA@ DB 'cdq', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHHNIPCF@push?$AA@
CONST	SEGMENT
??_C@_04GHHNIPCF@push?$AA@ DB 'push', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NJDAHFJE@pop?$AA@
CONST	SEGMENT
??_C@_03NJDAHFJE@pop?$AA@ DB 'pop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CHNIFDFF@idiv?$AA@
CONST	SEGMENT
??_C@_04CHNIFDFF@idiv?$AA@ DB 'idiv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PPMBLMBA@imul?$AA@
CONST	SEGMENT
??_C@_04PPMBLMBA@imul?$AA@ DB 'imul', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KCMAIMAP@sub?$AA@
CONST	SEGMENT
??_C@_03KCMAIMAP@sub?$AA@ DB 'sub', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BDGOHNNK@add?$AA@
CONST	SEGMENT
??_C@_03BDGOHNNK@add?$AA@ DB 'add', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??__EOPCODE_STR@@YAXXZ DD 019930522H
	DD	035H
	DD	FLAT:__unwindtable$??__EOPCODE_STR@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??__EOPCODE_STR@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$13
	DD	0dH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$15
	DD	0fH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$16
	DD	010H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$17
	DD	011H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$18
	DD	012H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$19
	DD	013H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$21
	DD	015H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$22
	DD	016H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$23
	DD	017H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$24
	DD	018H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$25
	DD	019H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$26
	DD	01aH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$27
	DD	01bH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$28
	DD	01cH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$29
	DD	01dH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$30
	DD	01eH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$31
	DD	01fH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$32
	DD	020H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$33
	DD	021H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$34
	DD	022H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$35
	DD	023H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$36
	DD	024H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$37
	DD	025H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$38
	DD	026H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$39
	DD	027H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$40
	DD	028H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$41
	DD	029H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$42
	DD	02aH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$43
	DD	02bH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$44
	DD	02cH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$45
	DD	02dH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$46
	DD	02eH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$47
	DD	02fH
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$48
	DD	030H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$49
	DD	031H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$50
	DD	032H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$51
	DD	033H
	DD	FLAT:__unwindfunclet$??__EOPCODE_STR@@YAXXZ$52
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__EOPCODE_STR@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__EOPCODE_STR@@YAXXZ PROC				; `dynamic initializer for 'OPCODE_STR'', COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__EOPCODE_STR@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_03BDGOHNNK@add?$AA@
	mov	ecx, OFFSET _OPCODE_STR
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	mov	ecx, OFFSET _OPCODE_STR+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_04PPMBLMBA@imul?$AA@
	mov	ecx, OFFSET _OPCODE_STR+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_04CHNIFDFF@idiv?$AA@
	mov	ecx, OFFSET _OPCODE_STR+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??_C@_03NJDAHFJE@pop?$AA@
	mov	ecx, OFFSET _OPCODE_STR+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??_C@_04GHHNIPCF@push?$AA@
	mov	ecx, OFFSET _OPCODE_STR+160
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	OFFSET ??_C@_03IONCFDEF@cdq?$AA@
	mov	ecx, OFFSET _OPCODE_STR+192
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	OFFSET ??_C@_03CNBJFNFA@mov?$AA@
	mov	ecx, OFFSET _OPCODE_STR+224
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 41
	push	OFFSET ??_C@_03IAKKBENL@fld?$AA@
	mov	ecx, OFFSET _OPCODE_STR+256
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	push	OFFSET ??_C@_04CJNNKOGB@fild?$AA@
	mov	ecx, OFFSET _OPCODE_STR+288
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	push	OFFSET ??_C@_04OCHKNHDG@fadd?$AA@
	mov	ecx, OFFSET _OPCODE_STR+320
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	OFFSET ??_C@_04FDNECGOD@fsub?$AA@
	mov	ecx, OFFSET _OPCODE_STR+352
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	push	OFFSET ??_C@_04HNJBCLMB@fmul?$AA@
	mov	ecx, OFFSET _OPCODE_STR+384
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	OFFSET ??_C@_04KFIIMEIE@fdiv?$AA@
	mov	ecx, OFFSET _OPCODE_STR+416
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	push	OFFSET ??_C@_04CKOCDMAH@fstp?$AA@
	mov	ecx, OFFSET _OPCODE_STR+448
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
; Line 42
	push	OFFSET ??_C@_03GBOCFEHI@neg?$AA@
	mov	ecx, OFFSET _OPCODE_STR+480
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	OFFSET ??_C@_04EEOKGCEP@fchs?$AA@
	mov	ecx, OFFSET _OPCODE_STR+512
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	OFFSET ??_C@_03BOPJPIAM@and?$AA@
	mov	ecx, OFFSET _OPCODE_STR+544
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	push	OFFSET ??_C@_02FODMLBIE@or?$AA@
	mov	ecx, OFFSET _OPCODE_STR+576
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	push	OFFSET ??_C@_03COLCDPPJ@xor?$AA@
	mov	ecx, OFFSET _OPCODE_STR+608
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
; Line 43
	push	OFFSET ??_C@_0L@BMONGFKA@crt__getch?$AA@
	mov	ecx, OFFSET _OPCODE_STR+640
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	OFFSET ??_C@_0L@LLNHNHM@crt_printf?$AA@
	mov	ecx, OFFSET _OPCODE_STR+672
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	push	OFFSET ??_C@_03JIBIFJIL@cmp?$AA@
	mov	ecx, OFFSET _OPCODE_STR+704
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	push	OFFSET ??_C@_02FNHEPHPJ@je?$AA@
	mov	ecx, OFFSET _OPCODE_STR+736
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	push	OFFSET ??_C@_03NAODEOEM@jne?$AA@
	mov	ecx, OFFSET _OPCODE_STR+768
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	push	OFFSET ??_C@_03OFBABGAB@jmp?$AA@
	mov	ecx, OFFSET _OPCODE_STR+800
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
; Line 44
	push	OFFSET ??_C@_02IMLGEMLA@jl?$AA@
	mov	ecx, OFFSET _OPCODE_STR+832
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	push	OFFSET ??_C@_02GPECJFHL@jg?$AA@
	mov	ecx, OFFSET _OPCODE_STR+864
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	push	OFFSET ??_C@_03NDGHJKCC@jle?$AA@
	mov	ecx, OFFSET _OPCODE_STR+896
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	push	OFFSET ??_C@_03NPDCHFMD@jge?$AA@
	mov	ecx, OFFSET _OPCODE_STR+928
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	push	OFFSET ??_C@_03CILNJBKC@shl?$AA@
	mov	ecx, OFFSET _OPCODE_STR+960
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	push	OFFSET ??_C@_03PMPMKOHN@shr?$AA@
	mov	ecx, OFFSET _OPCODE_STR+992
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	push	OFFSET ??_C@_03NMAFIIHB@cbw?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1024
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	push	OFFSET ??_C@_02JACOPJGH@jz?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1056
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	push	OFFSET ??_C@_03BNLJEANC@jnz?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1088
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
; Line 45
	push	OFFSET ??_C@_06LOICGCLB@fcomip?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1120
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	push	OFFSET ??_C@_02BCDFGBDO@jb?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1152
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	push	OFFSET ??_C@_02DJBIDCPN@ja?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1184
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	push	OFFSET ??_C@_03NLLPAJHB@jae?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1216
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	push	OFFSET ??_C@_03NJPJLHCI@jbe?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1248
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	push	OFFSET ??_C@_04MGCDEED@proc?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1280
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	push	OFFSET ??_C@_05IHEOCMON@enter?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1312
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	push	OFFSET ??_C@_04NDBHGKOF@endp?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1344
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
; Line 46
	push	OFFSET ??_C@_05KLLFHCCG@leave?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1376
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	push	OFFSET ??_C@_04OMFAIDPG@call?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1408
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	push	OFFSET ??_C@_03BKMCPNMN@ret?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1440
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	push	OFFSET ??_C@_0M@LPAKIOHO@ExitProcess?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1472
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	push	OFFSET ??_C@_06HIPCBFJP@assume?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1504
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	push	OFFSET ??_C@_05BPPBBCP@fistp?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1536
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	push	OFFSET ??_C@_03JNLBDLHF@lea?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1568
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
; Line 47
	push	OFFSET ??_C@_03PDCNJFPC@sar?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1600
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	push	OFFSET ??_C@_03JEAMEGCE@inc?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1632
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	push	OFFSET ??_C@_03GKDDHBBI@dec?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1664
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	push	OFFSET ??_C@_04CEJDCDCH@test?$AA@
	mov	ecx, OFFSET _OPCODE_STR+1696
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FOPCODE_STR@@YAXXZ		; `dynamic atexit destructor for 'OPCODE_STR''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$0:
	mov	ecx, OFFSET _OPCODE_STR
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$1:
	mov	ecx, OFFSET _OPCODE_STR+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$2:
	mov	ecx, OFFSET _OPCODE_STR+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$3:
	mov	ecx, OFFSET _OPCODE_STR+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$4:
	mov	ecx, OFFSET _OPCODE_STR+128
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$5:
	mov	ecx, OFFSET _OPCODE_STR+160
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$6:
	mov	ecx, OFFSET _OPCODE_STR+192
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$7:
	mov	ecx, OFFSET _OPCODE_STR+224
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$8:
	mov	ecx, OFFSET _OPCODE_STR+256
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$9:
	mov	ecx, OFFSET _OPCODE_STR+288
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$10:
	mov	ecx, OFFSET _OPCODE_STR+320
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$11:
	mov	ecx, OFFSET _OPCODE_STR+352
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$12:
	mov	ecx, OFFSET _OPCODE_STR+384
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$13:
	mov	ecx, OFFSET _OPCODE_STR+416
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$14:
	mov	ecx, OFFSET _OPCODE_STR+448
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$15:
	mov	ecx, OFFSET _OPCODE_STR+480
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$16:
	mov	ecx, OFFSET _OPCODE_STR+512
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$17:
	mov	ecx, OFFSET _OPCODE_STR+544
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$18:
	mov	ecx, OFFSET _OPCODE_STR+576
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$19:
	mov	ecx, OFFSET _OPCODE_STR+608
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$20:
	mov	ecx, OFFSET _OPCODE_STR+640
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$21:
	mov	ecx, OFFSET _OPCODE_STR+672
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$22:
	mov	ecx, OFFSET _OPCODE_STR+704
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$23:
	mov	ecx, OFFSET _OPCODE_STR+736
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$24:
	mov	ecx, OFFSET _OPCODE_STR+768
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$25:
	mov	ecx, OFFSET _OPCODE_STR+800
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$26:
	mov	ecx, OFFSET _OPCODE_STR+832
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$27:
	mov	ecx, OFFSET _OPCODE_STR+864
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$28:
	mov	ecx, OFFSET _OPCODE_STR+896
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$29:
	mov	ecx, OFFSET _OPCODE_STR+928
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$30:
	mov	ecx, OFFSET _OPCODE_STR+960
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$31:
	mov	ecx, OFFSET _OPCODE_STR+992
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$32:
	mov	ecx, OFFSET _OPCODE_STR+1024
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$33:
	mov	ecx, OFFSET _OPCODE_STR+1056
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$34:
	mov	ecx, OFFSET _OPCODE_STR+1088
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$35:
	mov	ecx, OFFSET _OPCODE_STR+1120
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$36:
	mov	ecx, OFFSET _OPCODE_STR+1152
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$37:
	mov	ecx, OFFSET _OPCODE_STR+1184
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$38:
	mov	ecx, OFFSET _OPCODE_STR+1216
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$39:
	mov	ecx, OFFSET _OPCODE_STR+1248
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$40:
	mov	ecx, OFFSET _OPCODE_STR+1280
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$41:
	mov	ecx, OFFSET _OPCODE_STR+1312
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$42:
	mov	ecx, OFFSET _OPCODE_STR+1344
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$43:
	mov	ecx, OFFSET _OPCODE_STR+1376
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$44:
	mov	ecx, OFFSET _OPCODE_STR+1408
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$45:
	mov	ecx, OFFSET _OPCODE_STR+1440
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$46:
	mov	ecx, OFFSET _OPCODE_STR+1472
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$47:
	mov	ecx, OFFSET _OPCODE_STR+1504
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$48:
	mov	ecx, OFFSET _OPCODE_STR+1536
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$49:
	mov	ecx, OFFSET _OPCODE_STR+1568
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$50:
	mov	ecx, OFFSET _OPCODE_STR+1600
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$51:
	mov	ecx, OFFSET _OPCODE_STR+1632
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EOPCODE_STR@@YAXXZ$52:
	mov	ecx, OFFSET _OPCODE_STR+1664
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??__EOPCODE_STR@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__EOPCODE_STR@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__EOPCODE_STR@@YAXXZ ENDP				; `dynamic initializer for 'OPCODE_STR''
PUBLIC	??_C@_03KLMLIICN@esp?$AA@			; `string'
PUBLIC	??_C@_03LGCPEBGK@ebp?$AA@			; `string'
PUBLIC	??_C@_05MLLAPAKB@st?$CI1?$CJ?$AA@		; `string'
PUBLIC	??_C@_05MKHCJKJG@st?$CI0?$CJ?$AA@		; `string'
PUBLIC	??_C@_02KOENHEAE@ax?$AA@			; `string'
PUBLIC	??_C@_02KNMJKAGK@cx?$AA@			; `string'
PUBLIC	??_C@_02IAODKDFB@al?$AA@			; `string'
PUBLIC	??_C@_02IDGHHHDP@cl?$AA@			; `string'
PUBLIC	??_C@_03HKHLLHNA@edx?$AA@			; `string'
PUBLIC	??_C@_03HPDEKBFF@ecx?$AA@			; `string'
PUBLIC	??_C@_03HOPGMLGC@ebx?$AA@			; `string'
PUBLIC	??_C@_03HMLAHFDL@eax?$AA@			; `string'
;	COMDAT ??_C@_03KLMLIICN@esp?$AA@
CONST	SEGMENT
??_C@_03KLMLIICN@esp?$AA@ DB 'esp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LGCPEBGK@ebp?$AA@
CONST	SEGMENT
??_C@_03LGCPEBGK@ebp?$AA@ DB 'ebp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MLLAPAKB@st?$CI1?$CJ?$AA@
CONST	SEGMENT
??_C@_05MLLAPAKB@st?$CI1?$CJ?$AA@ DB 'st(1)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MKHCJKJG@st?$CI0?$CJ?$AA@
CONST	SEGMENT
??_C@_05MKHCJKJG@st?$CI0?$CJ?$AA@ DB 'st(0)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02KOENHEAE@ax?$AA@
CONST	SEGMENT
??_C@_02KOENHEAE@ax?$AA@ DB 'ax', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KNMJKAGK@cx?$AA@
CONST	SEGMENT
??_C@_02KNMJKAGK@cx?$AA@ DB 'cx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IAODKDFB@al?$AA@
CONST	SEGMENT
??_C@_02IAODKDFB@al?$AA@ DB 'al', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IDGHHHDP@cl?$AA@
CONST	SEGMENT
??_C@_02IDGHHHDP@cl?$AA@ DB 'cl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HKHLLHNA@edx?$AA@
CONST	SEGMENT
??_C@_03HKHLLHNA@edx?$AA@ DB 'edx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HPDEKBFF@ecx?$AA@
CONST	SEGMENT
??_C@_03HPDEKBFF@ecx?$AA@ DB 'ecx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HOPGMLGC@ebx?$AA@
CONST	SEGMENT
??_C@_03HOPGMLGC@ebx?$AA@ DB 'ebx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HMLAHFDL@eax?$AA@
CONST	SEGMENT
??_C@_03HMLAHFDL@eax?$AA@ DB 'eax', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??__EREG_STR@@YAXXZ DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??__EREG_STR@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??__EREG_STR@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??__EREG_STR@@YAXXZ$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__EREG_STR@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__EREG_STR@@YAXXZ PROC				; `dynamic initializer for 'REG_STR'', COMDAT
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__EREG_STR@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_03HMLAHFDL@eax?$AA@
	mov	ecx, OFFSET _REG_STR
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_03HOPGMLGC@ebx?$AA@
	mov	ecx, OFFSET _REG_STR+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_03HPDEKBFF@ecx?$AA@
	mov	ecx, OFFSET _REG_STR+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_03HKHLLHNA@edx?$AA@
	mov	ecx, OFFSET _REG_STR+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??_C@_02IDGHHHDP@cl?$AA@
	mov	ecx, OFFSET _REG_STR+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??_C@_02IAODKDFB@al?$AA@
	mov	ecx, OFFSET _REG_STR+160
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	OFFSET ??_C@_02KNMJKAGK@cx?$AA@
	mov	ecx, OFFSET _REG_STR+192
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	OFFSET ??_C@_02KOENHEAE@ax?$AA@
	mov	ecx, OFFSET _REG_STR+224
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET ??_C@_05MKHCJKJG@st?$CI0?$CJ?$AA@
	mov	ecx, OFFSET _REG_STR+256
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	push	OFFSET ??_C@_05MLLAPAKB@st?$CI1?$CJ?$AA@
	mov	ecx, OFFSET _REG_STR+288
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	push	OFFSET ??_C@_03LGCPEBGK@ebp?$AA@
	mov	ecx, OFFSET _REG_STR+320
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	OFFSET ??_C@_03KLMLIICN@esp?$AA@
	mov	ecx, OFFSET _REG_STR+352
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FREG_STR@@YAXXZ		; `dynamic atexit destructor for 'REG_STR''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__EREG_STR@@YAXXZ$0:
	mov	ecx, OFFSET _REG_STR
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$1:
	mov	ecx, OFFSET _REG_STR+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$2:
	mov	ecx, OFFSET _REG_STR+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$3:
	mov	ecx, OFFSET _REG_STR+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$4:
	mov	ecx, OFFSET _REG_STR+128
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$5:
	mov	ecx, OFFSET _REG_STR+160
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$6:
	mov	ecx, OFFSET _REG_STR+192
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$7:
	mov	ecx, OFFSET _REG_STR+224
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$8:
	mov	ecx, OFFSET _REG_STR+256
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$9:
	mov	ecx, OFFSET _REG_STR+288
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EREG_STR@@YAXXZ$10:
	mov	ecx, OFFSET _REG_STR+320
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??__EREG_STR@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__EREG_STR@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__EREG_STR@@YAXXZ ENDP				; `dynamic initializer for 'REG_STR''
PUBLIC	??_C@_05OODBEKIG@while?$AA@			; `string'
PUBLIC	??_C@_08PABEKFH@volatile?$AA@			; `string'
PUBLIC	??_C@_07HIMIIOGA@virtual?$AA@			; `string'
PUBLIC	??_C@_08CLLOMHGD@unsigned?$AA@			; `string'
PUBLIC	??_C@_05MNALHJLP@union?$AA@			; `string'
PUBLIC	??_C@_06OFCEDBEC@typeid?$AA@			; `string'
PUBLIC	??_C@_07FIDIHKEG@typedef?$AA@			; `string'
PUBLIC	??_C@_03JDGOGJKJ@try?$AA@			; `string'
PUBLIC	??_C@_05JFAPCGDM@throw?$AA@			; `string'
PUBLIC	??_C@_04IIAJELJL@this?$AA@			; `string'
PUBLIC	??_C@_08FJNLKCPH@template?$AA@			; `string'
PUBLIC	??_C@_06DOPOGBGP@switch?$AA@			; `string'
PUBLIC	??_C@_06PBJBIPGK@struct?$AA@			; `string'
PUBLIC	??_C@_06GGHJAEBN@static?$AA@			; `string'
PUBLIC	??_C@_06FPFOALMG@sizeof?$AA@			; `string'
PUBLIC	??_C@_06CPIODIKA@signed?$AA@			; `string'
PUBLIC	??_C@_05BFKKPKCG@short?$AA@			; `string'
PUBLIC	??_C@_06LNOFJDNM@return?$AA@			; `string'
PUBLIC	??_C@_08DHHIDNEP@register?$AA@			; `string'
PUBLIC	??_C@_06EOMAMIIF@public?$AA@			; `string'
PUBLIC	??_C@_09IPOLMLK@protected?$AA@			; `string'
PUBLIC	??_C@_07NMPLPEPB@private?$AA@			; `string'
PUBLIC	??_C@_08LHJFAFGD@operator?$AA@			; `string'
PUBLIC	??_C@_03CLCAEGCJ@new?$AA@			; `string'
PUBLIC	??_C@_04GOKPGOLB@long?$AA@			; `string'
PUBLIC	??_C@_06OGMBMJA@inline?$AA@			; `string'
PUBLIC	??_C@_02HEBPBKGD@if?$AA@			; `string'
PUBLIC	??_C@_04MABHPDAO@goto?$AA@			; `string'
PUBLIC	??_C@_06BHBNKPBA@friend?$AA@			; `string'
PUBLIC	??_C@_03JOHEBPFF@for?$AA@			; `string'
PUBLIC	??_C@_06PAMNHHEG@extern?$AA@			; `string'
PUBLIC	??_C@_04DBJPMPLO@enum?$AA@			; `string'
PUBLIC	??_C@_04FHMCPBIP@else?$AA@			; `string'
PUBLIC	??_C@_06BNJCAIGJ@double?$AA@			; `string'
PUBLIC	??_C@_02KNAFDCHJ@do?$AA@			; `string'
PUBLIC	??_C@_06FOBLBEIN@delete?$AA@			; `string'
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	??_C@_08DLICDMBN@continue?$AA@			; `string'
PUBLIC	??_C@_05ENKANFLO@class?$AA@			; `string'
PUBLIC	??_C@_05GHOHNOEI@catch?$AA@			; `string'
PUBLIC	??_C@_04CKOINMPC@case?$AA@			; `string'
PUBLIC	??_C@_05ELPHFHOI@break?$AA@			; `string'
PUBLIC	??_C@_04HAPDLBFF@auto?$AA@			; `string'
PUBLIC	??_C@_03NLMFHDGG@asm?$AA@			; `string'
;	COMDAT ??_C@_05OODBEKIG@while?$AA@
; File c:\users\дмитрий\documents\visual studio 2010\projects\scanner\scanner\scanner.h
CONST	SEGMENT
??_C@_05OODBEKIG@while?$AA@ DB 'while', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PABEKFH@volatile?$AA@
CONST	SEGMENT
??_C@_08PABEKFH@volatile?$AA@ DB 'volatile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIMIIOGA@virtual?$AA@
CONST	SEGMENT
??_C@_07HIMIIOGA@virtual?$AA@ DB 'virtual', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CLLOMHGD@unsigned?$AA@
CONST	SEGMENT
??_C@_08CLLOMHGD@unsigned?$AA@ DB 'unsigned', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MNALHJLP@union?$AA@
CONST	SEGMENT
??_C@_05MNALHJLP@union?$AA@ DB 'union', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OFCEDBEC@typeid?$AA@
CONST	SEGMENT
??_C@_06OFCEDBEC@typeid?$AA@ DB 'typeid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FIDIHKEG@typedef?$AA@
CONST	SEGMENT
??_C@_07FIDIHKEG@typedef?$AA@ DB 'typedef', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JDGOGJKJ@try?$AA@
CONST	SEGMENT
??_C@_03JDGOGJKJ@try?$AA@ DB 'try', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05JFAPCGDM@throw?$AA@
CONST	SEGMENT
??_C@_05JFAPCGDM@throw?$AA@ DB 'throw', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IIAJELJL@this?$AA@
CONST	SEGMENT
??_C@_04IIAJELJL@this?$AA@ DB 'this', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FJNLKCPH@template?$AA@
CONST	SEGMENT
??_C@_08FJNLKCPH@template?$AA@ DB 'template', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DOPOGBGP@switch?$AA@
CONST	SEGMENT
??_C@_06DOPOGBGP@switch?$AA@ DB 'switch', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PBJBIPGK@struct?$AA@
CONST	SEGMENT
??_C@_06PBJBIPGK@struct?$AA@ DB 'struct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GGHJAEBN@static?$AA@
CONST	SEGMENT
??_C@_06GGHJAEBN@static?$AA@ DB 'static', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FPFOALMG@sizeof?$AA@
CONST	SEGMENT
??_C@_06FPFOALMG@sizeof?$AA@ DB 'sizeof', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CPIODIKA@signed?$AA@
CONST	SEGMENT
??_C@_06CPIODIKA@signed?$AA@ DB 'signed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BFKKPKCG@short?$AA@
CONST	SEGMENT
??_C@_05BFKKPKCG@short?$AA@ DB 'short', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNOFJDNM@return?$AA@
CONST	SEGMENT
??_C@_06LNOFJDNM@return?$AA@ DB 'return', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DHHIDNEP@register?$AA@
CONST	SEGMENT
??_C@_08DHHIDNEP@register?$AA@ DB 'register', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOMAMIIF@public?$AA@
CONST	SEGMENT
??_C@_06EOMAMIIF@public?$AA@ DB 'public', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IPOLMLK@protected?$AA@
CONST	SEGMENT
??_C@_09IPOLMLK@protected?$AA@ DB 'protected', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NMPLPEPB@private?$AA@
CONST	SEGMENT
??_C@_07NMPLPEPB@private?$AA@ DB 'private', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LHJFAFGD@operator?$AA@
CONST	SEGMENT
??_C@_08LHJFAFGD@operator?$AA@ DB 'operator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03CLCAEGCJ@new?$AA@
CONST	SEGMENT
??_C@_03CLCAEGCJ@new?$AA@ DB 'new', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GOKPGOLB@long?$AA@
CONST	SEGMENT
??_C@_04GOKPGOLB@long?$AA@ DB 'long', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OGMBMJA@inline?$AA@
CONST	SEGMENT
??_C@_06OGMBMJA@inline?$AA@ DB 'inline', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HEBPBKGD@if?$AA@
CONST	SEGMENT
??_C@_02HEBPBKGD@if?$AA@ DB 'if', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MABHPDAO@goto?$AA@
CONST	SEGMENT
??_C@_04MABHPDAO@goto?$AA@ DB 'goto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BHBNKPBA@friend?$AA@
CONST	SEGMENT
??_C@_06BHBNKPBA@friend?$AA@ DB 'friend', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JOHEBPFF@for?$AA@
CONST	SEGMENT
??_C@_03JOHEBPFF@for?$AA@ DB 'for', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06PAMNHHEG@extern?$AA@
CONST	SEGMENT
??_C@_06PAMNHHEG@extern?$AA@ DB 'extern', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DBJPMPLO@enum?$AA@
CONST	SEGMENT
??_C@_04DBJPMPLO@enum?$AA@ DB 'enum', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FHMCPBIP@else?$AA@
CONST	SEGMENT
??_C@_04FHMCPBIP@else?$AA@ DB 'else', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BNJCAIGJ@double?$AA@
CONST	SEGMENT
??_C@_06BNJCAIGJ@double?$AA@ DB 'double', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KNAFDCHJ@do?$AA@
CONST	SEGMENT
??_C@_02KNAFDCHJ@do?$AA@ DB 'do', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOBLBEIN@delete?$AA@
CONST	SEGMENT
??_C@_06FOBLBEIN@delete?$AA@ DB 'delete', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DLICDMBN@continue?$AA@
CONST	SEGMENT
??_C@_08DLICDMBN@continue?$AA@ DB 'continue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05ENKANFLO@class?$AA@
CONST	SEGMENT
??_C@_05ENKANFLO@class?$AA@ DB 'class', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GHOHNOEI@catch?$AA@
CONST	SEGMENT
??_C@_05GHOHNOEI@catch?$AA@ DB 'catch', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CKOINMPC@case?$AA@
CONST	SEGMENT
??_C@_04CKOINMPC@case?$AA@ DB 'case', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05ELPHFHOI@break?$AA@
CONST	SEGMENT
??_C@_05ELPHFHOI@break?$AA@ DB 'break', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HAPDLBFF@auto?$AA@
CONST	SEGMENT
??_C@_04HAPDLBFF@auto?$AA@ DB 'auto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NLMFHDGG@asm?$AA@
CONST	SEGMENT
??_C@_03NLMFHDGG@asm?$AA@ DB 'asm', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??__EReserved@@YAXXZ DD 019930522H
	DD	02bH
	DD	FLAT:__unwindtable$??__EReserved@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??__EReserved@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$13
	DD	0dH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$15
	DD	0fH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$16
	DD	010H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$17
	DD	011H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$18
	DD	012H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$19
	DD	013H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$21
	DD	015H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$22
	DD	016H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$23
	DD	017H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$24
	DD	018H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$25
	DD	019H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$26
	DD	01aH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$27
	DD	01bH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$28
	DD	01cH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$29
	DD	01dH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$30
	DD	01eH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$31
	DD	01fH
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$32
	DD	020H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$33
	DD	021H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$34
	DD	022H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$35
	DD	023H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$36
	DD	024H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$37
	DD	025H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$38
	DD	026H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$39
	DD	027H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$40
	DD	028H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$41
	DD	029H
	DD	FLAT:__unwindfunclet$??__EReserved@@YAXXZ$42
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__EReserved@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__EReserved@@YAXXZ PROC				; `dynamic initializer for 'Reserved'', COMDAT
; Line 10
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__EReserved@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_03NLMFHDGG@asm?$AA@
	mov	ecx, OFFSET _Reserved
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_04HAPDLBFF@auto?$AA@
	mov	ecx, OFFSET _Reserved+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_05ELPHFHOI@break?$AA@
	mov	ecx, OFFSET _Reserved+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_04CKOINMPC@case?$AA@
	mov	ecx, OFFSET _Reserved+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??_C@_05GHOHNOEI@catch?$AA@
	mov	ecx, OFFSET _Reserved+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??_C@_05ENKANFLO@class?$AA@
	mov	ecx, OFFSET _Reserved+160
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	OFFSET ??_C@_08DLICDMBN@continue?$AA@
	mov	ecx, OFFSET _Reserved+192
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	ecx, OFFSET _Reserved+224
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET ??_C@_06FOBLBEIN@delete?$AA@
	mov	ecx, OFFSET _Reserved+256
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	push	OFFSET ??_C@_02KNAFDCHJ@do?$AA@
	mov	ecx, OFFSET _Reserved+288
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 11
	push	OFFSET ??_C@_06BNJCAIGJ@double?$AA@
	mov	ecx, OFFSET _Reserved+320
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	OFFSET ??_C@_04FHMCPBIP@else?$AA@
	mov	ecx, OFFSET _Reserved+352
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	push	OFFSET ??_C@_04DBJPMPLO@enum?$AA@
	mov	ecx, OFFSET _Reserved+384
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	OFFSET ??_C@_06PAMNHHEG@extern?$AA@
	mov	ecx, OFFSET _Reserved+416
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	push	OFFSET ??_C@_03JOHEBPFF@for?$AA@
	mov	ecx, OFFSET _Reserved+448
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	push	OFFSET ??_C@_06BHBNKPBA@friend?$AA@
	mov	ecx, OFFSET _Reserved+480
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	OFFSET ??_C@_04MABHPDAO@goto?$AA@
	mov	ecx, OFFSET _Reserved+512
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	OFFSET ??_C@_02HEBPBKGD@if?$AA@
	mov	ecx, OFFSET _Reserved+544
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	push	OFFSET ??_C@_06OGMBMJA@inline?$AA@
	mov	ecx, OFFSET _Reserved+576
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	push	OFFSET ??_C@_04GOKPGOLB@long?$AA@
	mov	ecx, OFFSET _Reserved+608
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	mov	ecx, OFFSET _Reserved+640
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	OFFSET ??_C@_08LHJFAFGD@operator?$AA@
	mov	ecx, OFFSET _Reserved+672
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
; Line 12
	push	OFFSET ??_C@_07NMPLPEPB@private?$AA@
	mov	ecx, OFFSET _Reserved+704
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	push	OFFSET ??_C@_09IPOLMLK@protected?$AA@
	mov	ecx, OFFSET _Reserved+736
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	push	OFFSET ??_C@_06EOMAMIIF@public?$AA@
	mov	ecx, OFFSET _Reserved+768
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	push	OFFSET ??_C@_08DHHIDNEP@register?$AA@
	mov	ecx, OFFSET _Reserved+800
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	push	OFFSET ??_C@_06LNOFJDNM@return?$AA@
	mov	ecx, OFFSET _Reserved+832
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	push	OFFSET ??_C@_05BFKKPKCG@short?$AA@
	mov	ecx, OFFSET _Reserved+864
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	push	OFFSET ??_C@_06CPIODIKA@signed?$AA@
	mov	ecx, OFFSET _Reserved+896
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	push	OFFSET ??_C@_06FPFOALMG@sizeof?$AA@
	mov	ecx, OFFSET _Reserved+928
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	push	OFFSET ??_C@_06GGHJAEBN@static?$AA@
	mov	ecx, OFFSET _Reserved+960
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
; Line 13
	push	OFFSET ??_C@_06PBJBIPGK@struct?$AA@
	mov	ecx, OFFSET _Reserved+992
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	push	OFFSET ??_C@_06DOPOGBGP@switch?$AA@
	mov	ecx, OFFSET _Reserved+1024
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	push	OFFSET ??_C@_08FJNLKCPH@template?$AA@
	mov	ecx, OFFSET _Reserved+1056
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	push	OFFSET ??_C@_04IIAJELJL@this?$AA@
	mov	ecx, OFFSET _Reserved+1088
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	push	OFFSET ??_C@_05JFAPCGDM@throw?$AA@
	mov	ecx, OFFSET _Reserved+1120
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	push	OFFSET ??_C@_03JDGOGJKJ@try?$AA@
	mov	ecx, OFFSET _Reserved+1152
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	push	OFFSET ??_C@_07FIDIHKEG@typedef?$AA@
	mov	ecx, OFFSET _Reserved+1184
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	push	OFFSET ??_C@_06OFCEDBEC@typeid?$AA@
	mov	ecx, OFFSET _Reserved+1216
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	push	OFFSET ??_C@_05MNALHJLP@union?$AA@
	mov	ecx, OFFSET _Reserved+1248
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	push	OFFSET ??_C@_08CLLOMHGD@unsigned?$AA@
	mov	ecx, OFFSET _Reserved+1280
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	push	OFFSET ??_C@_07HIMIIOGA@virtual?$AA@
	mov	ecx, OFFSET _Reserved+1312
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
; Line 14
	push	OFFSET ??_C@_08PABEKFH@volatile?$AA@
	mov	ecx, OFFSET _Reserved+1344
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	push	OFFSET ??_C@_05OODBEKIG@while?$AA@
	mov	ecx, OFFSET _Reserved+1376
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FReserved@@YAXXZ		; `dynamic atexit destructor for 'Reserved''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__EReserved@@YAXXZ$0:
	mov	ecx, OFFSET _Reserved
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$1:
	mov	ecx, OFFSET _Reserved+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$2:
	mov	ecx, OFFSET _Reserved+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$3:
	mov	ecx, OFFSET _Reserved+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$4:
	mov	ecx, OFFSET _Reserved+128
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$5:
	mov	ecx, OFFSET _Reserved+160
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$6:
	mov	ecx, OFFSET _Reserved+192
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$7:
	mov	ecx, OFFSET _Reserved+224
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$8:
	mov	ecx, OFFSET _Reserved+256
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$9:
	mov	ecx, OFFSET _Reserved+288
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$10:
	mov	ecx, OFFSET _Reserved+320
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$11:
	mov	ecx, OFFSET _Reserved+352
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$12:
	mov	ecx, OFFSET _Reserved+384
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$13:
	mov	ecx, OFFSET _Reserved+416
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$14:
	mov	ecx, OFFSET _Reserved+448
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$15:
	mov	ecx, OFFSET _Reserved+480
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$16:
	mov	ecx, OFFSET _Reserved+512
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$17:
	mov	ecx, OFFSET _Reserved+544
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$18:
	mov	ecx, OFFSET _Reserved+576
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$19:
	mov	ecx, OFFSET _Reserved+608
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$20:
	mov	ecx, OFFSET _Reserved+640
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$21:
	mov	ecx, OFFSET _Reserved+672
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$22:
	mov	ecx, OFFSET _Reserved+704
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$23:
	mov	ecx, OFFSET _Reserved+736
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$24:
	mov	ecx, OFFSET _Reserved+768
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$25:
	mov	ecx, OFFSET _Reserved+800
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$26:
	mov	ecx, OFFSET _Reserved+832
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$27:
	mov	ecx, OFFSET _Reserved+864
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$28:
	mov	ecx, OFFSET _Reserved+896
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$29:
	mov	ecx, OFFSET _Reserved+928
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$30:
	mov	ecx, OFFSET _Reserved+960
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$31:
	mov	ecx, OFFSET _Reserved+992
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$32:
	mov	ecx, OFFSET _Reserved+1024
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$33:
	mov	ecx, OFFSET _Reserved+1056
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$34:
	mov	ecx, OFFSET _Reserved+1088
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$35:
	mov	ecx, OFFSET _Reserved+1120
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$36:
	mov	ecx, OFFSET _Reserved+1152
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$37:
	mov	ecx, OFFSET _Reserved+1184
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$38:
	mov	ecx, OFFSET _Reserved+1216
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$39:
	mov	ecx, OFFSET _Reserved+1248
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$40:
	mov	ecx, OFFSET _Reserved+1280
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$41:
	mov	ecx, OFFSET _Reserved+1312
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EReserved@@YAXXZ$42:
	mov	ecx, OFFSET _Reserved+1344
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??__EReserved@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__EReserved@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__EReserved@@YAXXZ ENDP				; `dynamic initializer for 'Reserved''
PUBLIC	??_C@_04GKJNKENE@void?$AA@			; `string'
PUBLIC	??_C@_06ICGJLFIM@string?$AA@			; `string'
PUBLIC	??_C@_03JBIPMCLC@int?$AA@			; `string'
PUBLIC	??_C@_05KNFBNCOH@float?$AA@			; `string'
PUBLIC	??_C@_04ENMBGAPA@char?$AA@			; `string'
;	COMDAT ??_C@_04GKJNKENE@void?$AA@
CONST	SEGMENT
??_C@_04GKJNKENE@void?$AA@ DB 'void', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICGJLFIM@string?$AA@
CONST	SEGMENT
??_C@_06ICGJLFIM@string?$AA@ DB 'string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBIPMCLC@int?$AA@
CONST	SEGMENT
??_C@_03JBIPMCLC@int?$AA@ DB 'int', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05KNFBNCOH@float?$AA@
CONST	SEGMENT
??_C@_05KNFBNCOH@float?$AA@ DB 'float', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ENMBGAPA@char?$AA@
CONST	SEGMENT
??_C@_04ENMBGAPA@char?$AA@ DB 'char', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__EType@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__EType@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__EType@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__EType@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__EType@@YAXXZ$3
__ehfuncinfo$??__EType@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??__EType@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__EType@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__EType@@YAXXZ PROC					; `dynamic initializer for 'Type'', COMDAT
; Line 16
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__EType@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_04ENMBGAPA@char?$AA@
	mov	ecx, OFFSET _Type
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_05KNFBNCOH@float?$AA@
	mov	ecx, OFFSET _Type+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_03JBIPMCLC@int?$AA@
	mov	ecx, OFFSET _Type+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_06ICGJLFIM@string?$AA@
	mov	ecx, OFFSET _Type+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??_C@_04GKJNKENE@void?$AA@
	mov	ecx, OFFSET _Type+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FType@@YAXXZ			; `dynamic atexit destructor for 'Type''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__EType@@YAXXZ$0:
	mov	ecx, OFFSET _Type
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EType@@YAXXZ$1:
	mov	ecx, OFFSET _Type+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EType@@YAXXZ$2:
	mov	ecx, OFFSET _Type+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__EType@@YAXXZ$3:
	mov	ecx, OFFSET _Type+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??__EType@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__EType@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__EType@@YAXXZ ENDP					; `dynamic initializer for 'Type''
PUBLIC	??_C@_0BH@JKEJJMOF@Closing?5figure?5bracket?$AA@ ; `string'
PUBLIC	??_C@_0BH@EBBICEJC@Opening?5figure?5bracket?$AA@ ; `string'
PUBLIC	??_C@_05BKIOCMMJ@Const?$AA@			; `string'
PUBLIC	??_C@_09FBGFMNJC@Semicolon?$AA@			; `string'
PUBLIC	??_C@_04KOACHJEN@Type?$AA@			; `string'
PUBLIC	??_C@_0L@IAOFAAHD@Assignment?$AA@		; `string'
PUBLIC	??_C@_05CJDGOLEJ@Comma?$AA@			; `string'
PUBLIC	??_C@_03MCBFNPGG@Dot?$AA@			; `string'
PUBLIC	??_C@_0BH@GDACFKGJ@Closing?5square?5bracket?$AA@ ; `string'
PUBLIC	??_C@_0BH@LIFDOCBO@Opening?5square?5bracket?$AA@ ; `string'
PUBLIC	??_C@_0L@OJCNIHOF@Logical?5OR?$AA@		; `string'
PUBLIC	??_C@_0M@LBHPJMFG@Logical?5AND?$AA@		; `string'
PUBLIC	??_C@_05IPJJCCOH@BitOR?$AA@			; `string'
PUBLIC	??_C@_06GPFMIOCK@BitXOR?$AA@			; `string'
PUBLIC	??_C@_06FPBHEJNP@BitAND?$AA@			; `string'
PUBLIC	??_C@_09LIEMMKJN@Not?5equal?$AA@		; `string'
PUBLIC	??_C@_05JKGNJOO@Equal?$AA@			; `string'
PUBLIC	??_C@_0BB@DHLOBFEN@Greater?5Or?5Equal?$AA@	; `string'
PUBLIC	??_C@_07IJFBMPAA@Greater?$AA@			; `string'
PUBLIC	??_C@_0O@EKOFAJJK@Less?5Or?5Equal?$AA@		; `string'
PUBLIC	??_C@_04PKIDEGKH@Less?$AA@			; `string'
PUBLIC	??_C@_0M@COKLDKMB@Right?5Shift?$AA@		; `string'
PUBLIC	??_C@_0L@NCOJKENN@Left?5shift?$AA@		; `string'
PUBLIC	??_C@_0BA@NFLGDFKA@Closing?5bracket?$AA@	; `string'
PUBLIC	??_C@_0BA@FCBPMMPM@Opening?5bracket?$AA@	; `string'
PUBLIC	??_C@_03PEKOMBFG@Div?$AA@			; `string'
PUBLIC	??_C@_03CMLHCOBD@Mul?$AA@			; `string'
PUBLIC	??_C@_05OEAIFCGM@Minus?$AA@			; `string'
PUBLIC	??_C@_04CGBGAPBM@Plus?$AA@			; `string'
PUBLIC	??_C@_0M@FMILEADA@StringConst?$AA@		; `string'
PUBLIC	??_C@_08NKCLJDKG@Reserved?$AA@			; `string'
PUBLIC	??_C@_09LDIEPBDG@RealConst?$AA@			; `string'
PUBLIC	??_C@_09FBLKIPOB@Operation?$AA@			; `string'
PUBLIC	??_C@_0N@PNIIICEI@IntegerConst?$AA@		; `string'
PUBLIC	??_C@_0L@GHBDJGA@Identifier?$AA@		; `string'
PUBLIC	??_C@_03KPJEKKJC@EOF?$AA@			; `string'
PUBLIC	??_C@_09JDLKGELG@Delimiter?$AA@			; `string'
PUBLIC	??_C@_09LNEGBLCE@CharConst?$AA@			; `string'
;	COMDAT ??_C@_0BH@JKEJJMOF@Closing?5figure?5bracket?$AA@
CONST	SEGMENT
??_C@_0BH@JKEJJMOF@Closing?5figure?5bracket?$AA@ DB 'Closing figure brack'
	DB	'et', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EBBICEJC@Opening?5figure?5bracket?$AA@
CONST	SEGMENT
??_C@_0BH@EBBICEJC@Opening?5figure?5bracket?$AA@ DB 'Opening figure brack'
	DB	'et', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05BKIOCMMJ@Const?$AA@
CONST	SEGMENT
??_C@_05BKIOCMMJ@Const?$AA@ DB 'Const', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBGFMNJC@Semicolon?$AA@
CONST	SEGMENT
??_C@_09FBGFMNJC@Semicolon?$AA@ DB 'Semicolon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KOACHJEN@Type?$AA@
CONST	SEGMENT
??_C@_04KOACHJEN@Type?$AA@ DB 'Type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IAOFAAHD@Assignment?$AA@
CONST	SEGMENT
??_C@_0L@IAOFAAHD@Assignment?$AA@ DB 'Assignment', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05CJDGOLEJ@Comma?$AA@
CONST	SEGMENT
??_C@_05CJDGOLEJ@Comma?$AA@ DB 'Comma', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCBFNPGG@Dot?$AA@
CONST	SEGMENT
??_C@_03MCBFNPGG@Dot?$AA@ DB 'Dot', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDACFKGJ@Closing?5square?5bracket?$AA@
CONST	SEGMENT
??_C@_0BH@GDACFKGJ@Closing?5square?5bracket?$AA@ DB 'Closing square brack'
	DB	'et', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LIFDOCBO@Opening?5square?5bracket?$AA@
CONST	SEGMENT
??_C@_0BH@LIFDOCBO@Opening?5square?5bracket?$AA@ DB 'Opening square brack'
	DB	'et', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OJCNIHOF@Logical?5OR?$AA@
CONST	SEGMENT
??_C@_0L@OJCNIHOF@Logical?5OR?$AA@ DB 'Logical OR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LBHPJMFG@Logical?5AND?$AA@
CONST	SEGMENT
??_C@_0M@LBHPJMFG@Logical?5AND?$AA@ DB 'Logical AND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IPJJCCOH@BitOR?$AA@
CONST	SEGMENT
??_C@_05IPJJCCOH@BitOR?$AA@ DB 'BitOR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPFMIOCK@BitXOR?$AA@
CONST	SEGMENT
??_C@_06GPFMIOCK@BitXOR?$AA@ DB 'BitXOR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FPBHEJNP@BitAND?$AA@
CONST	SEGMENT
??_C@_06FPBHEJNP@BitAND?$AA@ DB 'BitAND', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LIEMMKJN@Not?5equal?$AA@
CONST	SEGMENT
??_C@_09LIEMMKJN@Not?5equal?$AA@ DB 'Not equal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JKGNJOO@Equal?$AA@
CONST	SEGMENT
??_C@_05JKGNJOO@Equal?$AA@ DB 'Equal', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DHLOBFEN@Greater?5Or?5Equal?$AA@
CONST	SEGMENT
??_C@_0BB@DHLOBFEN@Greater?5Or?5Equal?$AA@ DB 'Greater Or Equal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07IJFBMPAA@Greater?$AA@
CONST	SEGMENT
??_C@_07IJFBMPAA@Greater?$AA@ DB 'Greater', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EKOFAJJK@Less?5Or?5Equal?$AA@
CONST	SEGMENT
??_C@_0O@EKOFAJJK@Less?5Or?5Equal?$AA@ DB 'Less Or Equal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04PKIDEGKH@Less?$AA@
CONST	SEGMENT
??_C@_04PKIDEGKH@Less?$AA@ DB 'Less', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@COKLDKMB@Right?5Shift?$AA@
CONST	SEGMENT
??_C@_0M@COKLDKMB@Right?5Shift?$AA@ DB 'Right Shift', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NCOJKENN@Left?5shift?$AA@
CONST	SEGMENT
??_C@_0L@NCOJKENN@Left?5shift?$AA@ DB 'Left shift', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NFLGDFKA@Closing?5bracket?$AA@
CONST	SEGMENT
??_C@_0BA@NFLGDFKA@Closing?5bracket?$AA@ DB 'Closing bracket', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FCBPMMPM@Opening?5bracket?$AA@
CONST	SEGMENT
??_C@_0BA@FCBPMMPM@Opening?5bracket?$AA@ DB 'Opening bracket', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03PEKOMBFG@Div?$AA@
CONST	SEGMENT
??_C@_03PEKOMBFG@Div?$AA@ DB 'Div', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CMLHCOBD@Mul?$AA@
CONST	SEGMENT
??_C@_03CMLHCOBD@Mul?$AA@ DB 'Mul', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEAIFCGM@Minus?$AA@
CONST	SEGMENT
??_C@_05OEAIFCGM@Minus?$AA@ DB 'Minus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGBGAPBM@Plus?$AA@
CONST	SEGMENT
??_C@_04CGBGAPBM@Plus?$AA@ DB 'Plus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FMILEADA@StringConst?$AA@
CONST	SEGMENT
??_C@_0M@FMILEADA@StringConst?$AA@ DB 'StringConst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NKCLJDKG@Reserved?$AA@
CONST	SEGMENT
??_C@_08NKCLJDKG@Reserved?$AA@ DB 'Reserved', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LDIEPBDG@RealConst?$AA@
CONST	SEGMENT
??_C@_09LDIEPBDG@RealConst?$AA@ DB 'RealConst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBLKIPOB@Operation?$AA@
CONST	SEGMENT
??_C@_09FBLKIPOB@Operation?$AA@ DB 'Operation', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNIIICEI@IntegerConst?$AA@
CONST	SEGMENT
??_C@_0N@PNIIICEI@IntegerConst?$AA@ DB 'IntegerConst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GHBDJGA@Identifier?$AA@
CONST	SEGMENT
??_C@_0L@GHBDJGA@Identifier?$AA@ DB 'Identifier', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03KPJEKKJC@EOF?$AA@
CONST	SEGMENT
??_C@_03KPJEKKJC@EOF?$AA@ DB 'EOF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09JDLKGELG@Delimiter?$AA@
CONST	SEGMENT
??_C@_09JDLKGELG@Delimiter?$AA@ DB 'Delimiter', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LNEGBLCE@CharConst?$AA@
CONST	SEGMENT
??_C@_09LNEGBLCE@CharConst?$AA@ DB 'CharConst', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??__ETokenTypeString@@YAXXZ DD 019930522H
	DD	025H
	DD	FLAT:__unwindtable$??__ETokenTypeString@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??__ETokenTypeString@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$13
	DD	0dH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$15
	DD	0fH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$16
	DD	010H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$17
	DD	011H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$18
	DD	012H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$19
	DD	013H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$21
	DD	015H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$22
	DD	016H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$23
	DD	017H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$24
	DD	018H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$25
	DD	019H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$26
	DD	01aH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$27
	DD	01bH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$28
	DD	01cH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$29
	DD	01dH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$30
	DD	01eH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$31
	DD	01fH
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$32
	DD	020H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$33
	DD	021H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$34
	DD	022H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$35
	DD	023H
	DD	FLAT:__unwindfunclet$??__ETokenTypeString@@YAXXZ$36
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??__ETokenTypeString@@YAXXZ
text$yc	SEGMENT
__$EHRec$ = -12						; size = 12
??__ETokenTypeString@@YAXXZ PROC			; `dynamic initializer for 'TokenTypeString'', COMDAT
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__ETokenTypeString@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??_C@_09LNEGBLCE@CharConst?$AA@
	mov	ecx, OFFSET _TokenTypeString
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_09JDLKGELG@Delimiter?$AA@
	mov	ecx, OFFSET _TokenTypeString+32
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??_C@_03KPJEKKJC@EOF?$AA@
	mov	ecx, OFFSET _TokenTypeString+64
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??_C@_0L@GHBDJGA@Identifier?$AA@
	mov	ecx, OFFSET _TokenTypeString+96
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 26
	push	OFFSET ??_C@_0N@PNIIICEI@IntegerConst?$AA@
	mov	ecx, OFFSET _TokenTypeString+128
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??_C@_09FBLKIPOB@Operation?$AA@
	mov	ecx, OFFSET _TokenTypeString+160
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	OFFSET ??_C@_09LDIEPBDG@RealConst?$AA@
	mov	ecx, OFFSET _TokenTypeString+192
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	OFFSET ??_C@_08NKCLJDKG@Reserved?$AA@
	mov	ecx, OFFSET _TokenTypeString+224
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET ??_C@_0M@FMILEADA@StringConst?$AA@
	mov	ecx, OFFSET _TokenTypeString+256
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 27
	push	OFFSET ??_C@_04CGBGAPBM@Plus?$AA@
	mov	ecx, OFFSET _TokenTypeString+288
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	push	OFFSET ??_C@_05OEAIFCGM@Minus?$AA@
	mov	ecx, OFFSET _TokenTypeString+320
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	OFFSET ??_C@_03CMLHCOBD@Mul?$AA@
	mov	ecx, OFFSET _TokenTypeString+352
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	push	OFFSET ??_C@_03PEKOMBFG@Div?$AA@
	mov	ecx, OFFSET _TokenTypeString+384
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	OFFSET ??_C@_0BA@FCBPMMPM@Opening?5bracket?$AA@
	mov	ecx, OFFSET _TokenTypeString+416
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	push	OFFSET ??_C@_0BA@NFLGDFKA@Closing?5bracket?$AA@
	mov	ecx, OFFSET _TokenTypeString+448
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
; Line 28
	push	OFFSET ??_C@_0L@NCOJKENN@Left?5shift?$AA@
	mov	ecx, OFFSET _TokenTypeString+480
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	OFFSET ??_C@_0M@COKLDKMB@Right?5Shift?$AA@
	mov	ecx, OFFSET _TokenTypeString+512
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	OFFSET ??_C@_04PKIDEGKH@Less?$AA@
	mov	ecx, OFFSET _TokenTypeString+544
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	push	OFFSET ??_C@_0O@EKOFAJJK@Less?5Or?5Equal?$AA@
	mov	ecx, OFFSET _TokenTypeString+576
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	push	OFFSET ??_C@_07IJFBMPAA@Greater?$AA@
	mov	ecx, OFFSET _TokenTypeString+608
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
; Line 29
	push	OFFSET ??_C@_0BB@DHLOBFEN@Greater?5Or?5Equal?$AA@
	mov	ecx, OFFSET _TokenTypeString+640
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	OFFSET ??_C@_05JKGNJOO@Equal?$AA@
	mov	ecx, OFFSET _TokenTypeString+672
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	push	OFFSET ??_C@_09LIEMMKJN@Not?5equal?$AA@
	mov	ecx, OFFSET _TokenTypeString+704
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	push	OFFSET ??_C@_06FPBHEJNP@BitAND?$AA@
	mov	ecx, OFFSET _TokenTypeString+736
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	push	OFFSET ??_C@_06GPFMIOCK@BitXOR?$AA@
	mov	ecx, OFFSET _TokenTypeString+768
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
; Line 30
	push	OFFSET ??_C@_05IPJJCCOH@BitOR?$AA@
	mov	ecx, OFFSET _TokenTypeString+800
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	push	OFFSET ??_C@_0M@LBHPJMFG@Logical?5AND?$AA@
	mov	ecx, OFFSET _TokenTypeString+832
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	push	OFFSET ??_C@_0L@OJCNIHOF@Logical?5OR?$AA@
	mov	ecx, OFFSET _TokenTypeString+864
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	push	OFFSET ??_C@_0BH@LIFDOCBO@Opening?5square?5bracket?$AA@
	mov	ecx, OFFSET _TokenTypeString+896
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
; Line 31
	push	OFFSET ??_C@_0BH@GDACFKGJ@Closing?5square?5bracket?$AA@
	mov	ecx, OFFSET _TokenTypeString+928
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	push	OFFSET ??_C@_03MCBFNPGG@Dot?$AA@
	mov	ecx, OFFSET _TokenTypeString+960
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	push	OFFSET ??_C@_05CJDGOLEJ@Comma?$AA@
	mov	ecx, OFFSET _TokenTypeString+992
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	push	OFFSET ??_C@_0L@IAOFAAHD@Assignment?$AA@
	mov	ecx, OFFSET _TokenTypeString+1024
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	push	OFFSET ??_C@_04KOACHJEN@Type?$AA@
	mov	ecx, OFFSET _TokenTypeString+1056
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	push	OFFSET ??_C@_09FBGFMNJC@Semicolon?$AA@
	mov	ecx, OFFSET _TokenTypeString+1088
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	push	OFFSET ??_C@_05BKIOCMMJ@Const?$AA@
	mov	ecx, OFFSET _TokenTypeString+1120
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
; Line 32
	push	OFFSET ??_C@_0BH@EBBICEJC@Opening?5figure?5bracket?$AA@
	mov	ecx, OFFSET _TokenTypeString+1152
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	push	OFFSET ??_C@_0BH@JKEJJMOF@Closing?5figure?5bracket?$AA@
	mov	ecx, OFFSET _TokenTypeString+1184
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??__FTokenTypeString@@YAXXZ	; `dynamic atexit destructor for 'TokenTypeString''
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__ETokenTypeString@@YAXXZ$0:
	mov	ecx, OFFSET _TokenTypeString
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$1:
	mov	ecx, OFFSET _TokenTypeString+32
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$2:
	mov	ecx, OFFSET _TokenTypeString+64
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$3:
	mov	ecx, OFFSET _TokenTypeString+96
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$4:
	mov	ecx, OFFSET _TokenTypeString+128
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$5:
	mov	ecx, OFFSET _TokenTypeString+160
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$6:
	mov	ecx, OFFSET _TokenTypeString+192
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$7:
	mov	ecx, OFFSET _TokenTypeString+224
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$8:
	mov	ecx, OFFSET _TokenTypeString+256
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$9:
	mov	ecx, OFFSET _TokenTypeString+288
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$10:
	mov	ecx, OFFSET _TokenTypeString+320
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$11:
	mov	ecx, OFFSET _TokenTypeString+352
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$12:
	mov	ecx, OFFSET _TokenTypeString+384
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$13:
	mov	ecx, OFFSET _TokenTypeString+416
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$14:
	mov	ecx, OFFSET _TokenTypeString+448
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$15:
	mov	ecx, OFFSET _TokenTypeString+480
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$16:
	mov	ecx, OFFSET _TokenTypeString+512
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$17:
	mov	ecx, OFFSET _TokenTypeString+544
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$18:
	mov	ecx, OFFSET _TokenTypeString+576
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$19:
	mov	ecx, OFFSET _TokenTypeString+608
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$20:
	mov	ecx, OFFSET _TokenTypeString+640
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$21:
	mov	ecx, OFFSET _TokenTypeString+672
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$22:
	mov	ecx, OFFSET _TokenTypeString+704
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$23:
	mov	ecx, OFFSET _TokenTypeString+736
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$24:
	mov	ecx, OFFSET _TokenTypeString+768
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$25:
	mov	ecx, OFFSET _TokenTypeString+800
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$26:
	mov	ecx, OFFSET _TokenTypeString+832
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$27:
	mov	ecx, OFFSET _TokenTypeString+864
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$28:
	mov	ecx, OFFSET _TokenTypeString+896
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$29:
	mov	ecx, OFFSET _TokenTypeString+928
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$30:
	mov	ecx, OFFSET _TokenTypeString+960
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$31:
	mov	ecx, OFFSET _TokenTypeString+992
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$32:
	mov	ecx, OFFSET _TokenTypeString+1024
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$33:
	mov	ecx, OFFSET _TokenTypeString+1056
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$34:
	mov	ecx, OFFSET _TokenTypeString+1088
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$35:
	mov	ecx, OFFSET _TokenTypeString+1120
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??__ETokenTypeString@@YAXXZ$36:
	mov	ecx, OFFSET _TokenTypeString+1152
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??__ETokenTypeString@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__ETokenTypeString@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__ETokenTypeString@@YAXXZ ENDP			; `dynamic initializer for 'TokenTypeString''
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1066
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id''
; Function compile flags: /Odtp /RTCsu /ZI
text$yc	ENDS
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::codecvt<char,char,int>::id'', COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1066
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	0
	mov	ecx, OFFSET ?id@?$codecvt@DDH@std@@2V0locale@2@A ; std::codecvt<char,char,int>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::codecvt<char,char,int>::id''
; Function compile flags: /Odtp /RTCsu /ZI
text$yc	ENDS
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT
; Line 1066
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Fcode@@YAXXZ
text$yd	SEGMENT
??__Fcode@@YAXXZ PROC					; `dynamic atexit destructor for 'code'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	49					; 00000031H
	push	32					; 00000020H
	push	OFFSET _code
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Fcode@@YAXXZ ENDP					; `dynamic atexit destructor for 'code''
; Function compile flags: /Odtp /RTCsu /ZI
text$yd	ENDS
;	COMDAT ??__FMEM_ALLOC_STR@@YAXXZ
text$yd	SEGMENT
??__FMEM_ALLOC_STR@@YAXXZ PROC				; `dynamic atexit destructor for 'MEM_ALLOC_STR'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	5
	push	32					; 00000020H
	push	OFFSET _MEM_ALLOC_STR
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FMEM_ALLOC_STR@@YAXXZ ENDP				; `dynamic atexit destructor for 'MEM_ALLOC_STR''
; Function compile flags: /Odtp /RTCsu /ZI
text$yd	ENDS
;	COMDAT ??__FOPCODE_STR@@YAXXZ
text$yd	SEGMENT
??__FOPCODE_STR@@YAXXZ PROC				; `dynamic atexit destructor for 'OPCODE_STR'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	54					; 00000036H
	push	32					; 00000020H
	push	OFFSET _OPCODE_STR
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FOPCODE_STR@@YAXXZ ENDP				; `dynamic atexit destructor for 'OPCODE_STR''
; Function compile flags: /Odtp /RTCsu /ZI
text$yd	ENDS
;	COMDAT ??__FREG_STR@@YAXXZ
text$yd	SEGMENT
??__FREG_STR@@YAXXZ PROC				; `dynamic atexit destructor for 'REG_STR'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	12					; 0000000cH
	push	32					; 00000020H
	push	OFFSET _REG_STR
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FREG_STR@@YAXXZ ENDP				; `dynamic atexit destructor for 'REG_STR''
; Function compile flags: /Odtp /RTCsu /ZI
text$yd	ENDS
;	COMDAT ??__FReserved@@YAXXZ
text$yd	SEGMENT
??__FReserved@@YAXXZ PROC				; `dynamic atexit destructor for 'Reserved'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	44					; 0000002cH
	push	32					; 00000020H
	push	OFFSET _Reserved
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FReserved@@YAXXZ ENDP				; `dynamic atexit destructor for 'Reserved''
; Function compile flags: /Odtp /RTCsu /ZI
text$yd	ENDS
;	COMDAT ??__FType@@YAXXZ
text$yd	SEGMENT
??__FType@@YAXXZ PROC					; `dynamic atexit destructor for 'Type'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	5
	push	32					; 00000020H
	push	OFFSET _Type
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FType@@YAXXZ ENDP					; `dynamic atexit destructor for 'Type''
; Function compile flags: /Odtp /RTCsu /ZI
text$yd	ENDS
;	COMDAT ??__FTokenTypeString@@YAXXZ
text$yd	SEGMENT
??__FTokenTypeString@@YAXXZ PROC			; `dynamic atexit destructor for 'TokenTypeString'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	38					; 00000026H
	push	32					; 00000020H
	push	OFFSET _TokenTypeString
	call	??_M@YGXPAXIHP6EX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FTokenTypeString@@YAXXZ ENDP			; `dynamic atexit destructor for 'TokenTypeString''
text$yd	ENDS
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$codecvt@DDH@std@@2V0locale@2@A		; std::codecvt<char,char,int>::id
_BSS	SEGMENT
_TokenTypeString DB 04c0H DUP (?)
_code	DB	0620H DUP (?)
_OPCODE_STR DB	06c0H DUP (?)
_Reserved DB	0580H DUP (?)
_Type	DB	0a0H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
_BSS	SEGMENT
_REG_STR DB	0180H DUP (?)
_MEM_ALLOC_STR DB 0a0H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$codecvt@DDH@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDH@std@@2V0locale@2@A DD 01H DUP (?)	; std::codecvt<char,char,int>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_code$initializer$ DD FLAT:??__Ecode@@YAXXZ
_MEM_ALLOC_STR$initializer$ DD FLAT:??__EMEM_ALLOC_STR@@YAXXZ
_OPCODE_STR$initializer$ DD FLAT:??__EOPCODE_STR@@YAXXZ
_REG_STR$initializer$ DD FLAT:??__EREG_STR@@YAXXZ
_Reserved$initializer$ DD FLAT:??__EReserved@@YAXXZ
_Type$initializer$ DD FLAT:??__EType@@YAXXZ
_TokenTypeString$initializer$ DD FLAT:??__ETokenTypeString@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$codecvt@DDH@std@@2P6AXXZA DD FLAT:??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ; std::codecvt<char,char,int>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
END
